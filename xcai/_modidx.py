# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/xcai',
                'doc_host': 'https://suchith720.github.io',
                'git_url': 'https://github.com/suchith720/xcai',
                'lib_path': 'xcai'},
  'syms': { 'xcai.basics': {},
            'xcai.block': { 'xcai.block.XCBlock': ('block.html#xcblock', 'xcai/block.py'),
                            'xcai.block.XCBlock.from_cfg': ('block.html#xcblock.from_cfg', 'xcai/block.py'),
                            'xcai.block.amazontitles': ('block.html#amazontitles', 'xcai/block.py'),
                            'xcai.block.prepare_batch': ('block.html#prepare_batch', 'xcai/block.py'),
                            'xcai.block.wikiseealso': ('block.html#wikiseealso', 'xcai/block.py'),
                            'xcai.block.wikititles': ('block.html#wikititles', 'xcai/block.py')},
            'xcai.clustering.cluster': { 'xcai.clustering.cluster.BalancedClusters': ( 'clustering.cluster.html#balancedclusters',
                                                                                       'xcai/clustering/cluster.py'),
                                         'xcai.clustering.cluster.BalancedClusters.proc': ( 'clustering.cluster.html#balancedclusters.proc',
                                                                                            'xcai/clustering/cluster.py'),
                                         'xcai.clustering.cluster.ClusterGroupedSampler': ( 'clustering.cluster.html#clustergroupedsampler',
                                                                                            'xcai/clustering/cluster.py'),
                                         'xcai.clustering.cluster.ClusterGroupedSampler.__init__': ( 'clustering.cluster.html#clustergroupedsampler.__init__',
                                                                                                     'xcai/clustering/cluster.py'),
                                         'xcai.clustering.cluster.ClusterGroupedSampler.__iter__': ( 'clustering.cluster.html#clustergroupedsampler.__iter__',
                                                                                                     'xcai/clustering/cluster.py'),
                                         'xcai.clustering.cluster.ClusterGroupedSampler.__len__': ( 'clustering.cluster.html#clustergroupedsampler.__len__',
                                                                                                    'xcai/clustering/cluster.py'),
                                         'xcai.clustering.cluster.ClusterGroupedSampler.set_cluster': ( 'clustering.cluster.html#clustergroupedsampler.set_cluster',
                                                                                                        'xcai/clustering/cluster.py'),
                                         'xcai.clustering.cluster._normalize': ( 'clustering.cluster.html#_normalize',
                                                                                 'xcai/clustering/cluster.py'),
                                         'xcai.clustering.cluster.b_kmeans_dense': ( 'clustering.cluster.html#b_kmeans_dense',
                                                                                     'xcai/clustering/cluster.py'),
                                         'xcai.clustering.cluster.b_kmeans_dense_gpu': ( 'clustering.cluster.html#b_kmeans_dense_gpu',
                                                                                         'xcai/clustering/cluster.py'),
                                         'xcai.clustering.cluster.b_kmeans_dense_multi': ( 'clustering.cluster.html#b_kmeans_dense_multi',
                                                                                           'xcai/clustering/cluster.py'),
                                         'xcai.clustering.cluster.b_kmeans_sparse': ( 'clustering.cluster.html#b_kmeans_sparse',
                                                                                      'xcai/clustering/cluster.py'),
                                         'xcai.clustering.cluster.cluster': ( 'clustering.cluster.html#cluster',
                                                                              'xcai/clustering/cluster.py'),
                                         'xcai.clustering.cluster.get_functions': ( 'clustering.cluster.html#get_functions',
                                                                                    'xcai/clustering/cluster.py'),
                                         'xcai.clustering.cluster.partial_cluster': ( 'clustering.cluster.html#partial_cluster',
                                                                                      'xcai/clustering/cluster.py')},
            'xcai.clustering.fast_cluster': {},
            'xcai.core': { 'xcai.core.Filterer': ('core.html#filterer', 'xcai/core.py'),
                           'xcai.core.Filterer.apply': ('core.html#filterer.apply', 'xcai/core.py'),
                           'xcai.core.Filterer.generate': ('core.html#filterer.generate', 'xcai/core.py'),
                           'xcai.core.Filterer.load_filter': ('core.html#filterer.load_filter', 'xcai/core.py'),
                           'xcai.core.Filterer.prune': ('core.html#filterer.prune', 'xcai/core.py'),
                           'xcai.core.Filterer.sample': ('core.html#filterer.sample', 'xcai/core.py'),
                           'xcai.core.Info': ('core.html#info', 'xcai/core.py'),
                           'xcai.core.Info.__init__': ('core.html#info.__init__', 'xcai/core.py'),
                           'xcai.core.Info.__len__': ('core.html#info.__len__', 'xcai/core.py'),
                           'xcai.core.Info._read_info': ('core.html#info._read_info', 'xcai/core.py'),
                           'xcai.core.Info._read_text': ('core.html#info._read_text', 'xcai/core.py'),
                           'xcai.core.Info.from_txt': ('core.html#info.from_txt', 'xcai/core.py'),
                           'xcai.core.Info.read_info': ('core.html#info.read_info', 'xcai/core.py'),
                           'xcai.core.Info.show_data': ('core.html#info.show_data', 'xcai/core.py'),
                           'xcai.core.Info.tokenize': ('core.html#info.tokenize', 'xcai/core.py'),
                           'xcai.core.ScoreFusion': ('core.html#scorefusion', 'xcai/core.py'),
                           'xcai.core.ScoreFusion.__init__': ('core.html#scorefusion.__init__', 'xcai/core.py'),
                           'xcai.core.ScoreFusion.fit': ('core.html#scorefusion.fit', 'xcai/core.py'),
                           'xcai.core.ScoreFusion.get_inp': ('core.html#scorefusion.get_inp', 'xcai/core.py'),
                           'xcai.core.ScoreFusion.predict': ('core.html#scorefusion.predict', 'xcai/core.py'),
                           'xcai.core.ScoreFusion.prepare_inputs': ('core.html#scorefusion.prepare_inputs', 'xcai/core.py'),
                           'xcai.core.ScoreFusion.sample': ('core.html#scorefusion.sample', 'xcai/core.py'),
                           'xcai.core._store_attr': ('core.html#_store_attr', 'xcai/core.py'),
                           'xcai.core.compute_inv_doc_freq': ('core.html#compute_inv_doc_freq', 'xcai/core.py'),
                           'xcai.core.display_metric': ('core.html#display_metric', 'xcai/core.py'),
                           'xcai.core.get_attr': ('core.html#get_attr', 'xcai/core.py'),
                           'xcai.core.get_best_model': ('core.html#get_best_model', 'xcai/core.py'),
                           'xcai.core.get_output_sparse': ('core.html#get_output_sparse', 'xcai/core.py'),
                           'xcai.core.get_tensor_statistics': ('core.html#get_tensor_statistics', 'xcai/core.py'),
                           'xcai.core.get_tok_idf': ('core.html#get_tok_idf', 'xcai/core.py'),
                           'xcai.core.get_tok_sparse': ('core.html#get_tok_sparse', 'xcai/core.py'),
                           'xcai.core.show_data': ('core.html#show_data', 'xcai/core.py'),
                           'xcai.core.sorted_metric': ('core.html#sorted_metric', 'xcai/core.py'),
                           'xcai.core.store_attr': ('core.html#store_attr', 'xcai/core.py'),
                           'xcai.core.total_recall': ('core.html#total_recall', 'xcai/core.py')},
            'xcai.data': { 'xcai.data.BaseXCDataBlock': ('data.html#basexcdatablock', 'xcai/data.py'),
                           'xcai.data.BaseXCDataBlock.__init__': ('data.html#basexcdatablock.__init__', 'xcai/data.py'),
                           'xcai.data.BaseXCDataBlock.__len__': ('data.html#basexcdatablock.__len__', 'xcai/data.py'),
                           'xcai.data.BaseXCDataBlock._get_dl_kwargs': ('data.html#basexcdatablock._get_dl_kwargs', 'xcai/data.py'),
                           'xcai.data.BaseXCDataBlock._getitems': ('data.html#basexcdatablock._getitems', 'xcai/data.py'),
                           'xcai.data.BaseXCDataBlock.bsz': ('data.html#basexcdatablock.bsz', 'xcai/data.py'),
                           'xcai.data.BaseXCDataBlock.data_lbl_filterer': ('data.html#basexcdatablock.data_lbl_filterer', 'xcai/data.py'),
                           'xcai.data.BaseXCDataBlock.filterer': ('data.html#basexcdatablock.filterer', 'xcai/data.py'),
                           'xcai.data.BaseXCDataBlock.from_file': ('data.html#basexcdatablock.from_file', 'xcai/data.py'),
                           'xcai.data.BaseXCDataBlock.one_batch': ('data.html#basexcdatablock.one_batch', 'xcai/data.py'),
                           'xcai.data.BaseXCDataBlock.sample': ('data.html#basexcdatablock.sample', 'xcai/data.py'),
                           'xcai.data.BaseXCDataBlock.splitter': ('data.html#basexcdatablock.splitter', 'xcai/data.py'),
                           'xcai.data.BaseXCDataset': ('data.html#basexcdataset', 'xcai/data.py'),
                           'xcai.data.BaseXCDataset.__init__': ('data.html#basexcdataset.__init__', 'xcai/data.py'),
                           'xcai.data.BaseXCDataset.__len__': ('data.html#basexcdataset.__len__', 'xcai/data.py'),
                           'xcai.data.BaseXCDataset._verify_info': ('data.html#basexcdataset._verify_info', 'xcai/data.py'),
                           'xcai.data.BaseXCDataset.prune_data_lbl': ('data.html#basexcdataset.prune_data_lbl', 'xcai/data.py'),
                           'xcai.data.BaseXCDataset.sample': ('data.html#basexcdataset.sample', 'xcai/data.py'),
                           'xcai.data.BaseXCDataset.show_data': ('data.html#basexcdataset.show_data', 'xcai/data.py'),
                           'xcai.data.BaseXCDataset.splitter': ('data.html#basexcdataset.splitter', 'xcai/data.py'),
                           'xcai.data.MainXCData': ('data.html#mainxcdata', 'xcai/data.py'),
                           'xcai.data.MainXCData.from_file': ('data.html#mainxcdata.from_file', 'xcai/data.py'),
                           'xcai.data.MainXCDataset': ('data.html#mainxcdataset', 'xcai/data.py'),
                           'xcai.data.MainXCDataset.__getitem__': ('data.html#mainxcdataset.__getitem__', 'xcai/data.py'),
                           'xcai.data.MainXCDataset.__init__': ('data.html#mainxcdataset.__init__', 'xcai/data.py'),
                           'xcai.data.MainXCDataset._getitems': ('data.html#mainxcdataset._getitems', 'xcai/data.py'),
                           'xcai.data.MainXCDataset._verify_inputs': ('data.html#mainxcdataset._verify_inputs', 'xcai/data.py'),
                           'xcai.data.MainXCDataset.from_file': ('data.html#mainxcdataset.from_file', 'xcai/data.py'),
                           'xcai.data.MetaXCData': ('data.html#metaxcdata', 'xcai/data.py'),
                           'xcai.data.MetaXCData.from_file': ('data.html#metaxcdata.from_file', 'xcai/data.py'),
                           'xcai.data.MetaXCDataset': ('data.html#metaxcdataset', 'xcai/data.py'),
                           'xcai.data.MetaXCDataset.__init__': ('data.html#metaxcdataset.__init__', 'xcai/data.py'),
                           'xcai.data.MetaXCDataset._getitems': ('data.html#metaxcdataset._getitems', 'xcai/data.py'),
                           'xcai.data.MetaXCDataset._verify_inputs': ('data.html#metaxcdataset._verify_inputs', 'xcai/data.py'),
                           'xcai.data.MetaXCDataset.from_file': ('data.html#metaxcdataset.from_file', 'xcai/data.py'),
                           'xcai.data.MetaXCDataset.get_data_meta': ('data.html#metaxcdataset.get_data_meta', 'xcai/data.py'),
                           'xcai.data.MetaXCDataset.get_lbl_meta': ('data.html#metaxcdataset.get_lbl_meta', 'xcai/data.py'),
                           'xcai.data.MetaXCDataset.prune_data_meta': ('data.html#metaxcdataset.prune_data_meta', 'xcai/data.py'),
                           'xcai.data.MetaXCDataset.prune_lbl_meta': ('data.html#metaxcdataset.prune_lbl_meta', 'xcai/data.py'),
                           'xcai.data.MetaXCDataset.shape': ('data.html#metaxcdataset.shape', 'xcai/data.py'),
                           'xcai.data.MetaXCDataset.show_data': ('data.html#metaxcdataset.show_data', 'xcai/data.py'),
                           'xcai.data.MetaXCDatasets': ('data.html#metaxcdatasets', 'xcai/data.py'),
                           'xcai.data.MetaXCDatasets.__init__': ('data.html#metaxcdatasets.__init__', 'xcai/data.py'),
                           'xcai.data.XCCollator': ('data.html#xccollator', 'xcai/data.py'),
                           'xcai.data.XCCollator.__call__': ('data.html#xccollator.__call__', 'xcai/data.py'),
                           'xcai.data.XCCollator.__init__': ('data.html#xccollator.__init__', 'xcai/data.py'),
                           'xcai.data.XCDataBlock': ('data.html#xcdatablock', 'xcai/data.py'),
                           'xcai.data.XCDataBlock.__init__': ('data.html#xcdatablock.__init__', 'xcai/data.py'),
                           'xcai.data.XCDataBlock.collator': ('data.html#xcdatablock.collator', 'xcai/data.py'),
                           'xcai.data.XCDataBlock.from_cfg': ('data.html#xcdatablock.from_cfg', 'xcai/data.py'),
                           'xcai.data.XCDataBlock.lbl_dset': ('data.html#xcdatablock.lbl_dset', 'xcai/data.py'),
                           'xcai.data.XCDataBlock.lbl_info': ('data.html#xcdatablock.lbl_info', 'xcai/data.py'),
                           'xcai.data.XCDataBlock.load_cfg': ('data.html#xcdatablock.load_cfg', 'xcai/data.py'),
                           'xcai.data.XCDataBlock.n_lbl': ('data.html#xcdatablock.n_lbl', 'xcai/data.py'),
                           'xcai.data.XCDataset': ('data.html#xcdataset', 'xcai/data.py'),
                           'xcai.data.XCDataset.__getitem__': ('data.html#xcdataset.__getitem__', 'xcai/data.py'),
                           'xcai.data.XCDataset.__init__': ('data.html#xcdataset.__init__', 'xcai/data.py'),
                           'xcai.data.XCDataset._getitems': ('data.html#xcdataset._getitems', 'xcai/data.py'),
                           'xcai.data.XCDataset._verify_inputs': ('data.html#xcdataset._verify_inputs', 'xcai/data.py'),
                           'xcai.data.XCDataset.data_dset': ('data.html#xcdataset.data_dset', 'xcai/data.py'),
                           'xcai.data.XCDataset.data_info': ('data.html#xcdataset.data_info', 'xcai/data.py'),
                           'xcai.data.XCDataset.from_file': ('data.html#xcdataset.from_file', 'xcai/data.py'),
                           'xcai.data.XCDataset.get_meta_args': ('data.html#xcdataset.get_meta_args', 'xcai/data.py'),
                           'xcai.data.XCDataset.lbl_dset': ('data.html#xcdataset.lbl_dset', 'xcai/data.py'),
                           'xcai.data.XCDataset.lbl_info': ('data.html#xcdataset.lbl_info', 'xcai/data.py'),
                           'xcai.data.XCDataset.one_batch': ('data.html#xcdataset.one_batch', 'xcai/data.py')},
            'xcai.generation.generate': { 'xcai.generation.generate.Hypothesis': ( 'generation.generate.html#hypothesis',
                                                                                   'xcai/generation/generate.py'),
                                          'xcai.generation.generate.Hypothesis.__init__': ( 'generation.generate.html#hypothesis.__init__',
                                                                                            'xcai/generation/generate.py'),
                                          'xcai.generation.generate.Hypothesis.__len__': ( 'generation.generate.html#hypothesis.__len__',
                                                                                           'xcai/generation/generate.py'),
                                          'xcai.generation.generate.Hypothesis.add': ( 'generation.generate.html#hypothesis.add',
                                                                                       'xcai/generation/generate.py'),
                                          'xcai.generation.generate.Hypothesis.is_done': ( 'generation.generate.html#hypothesis.is_done',
                                                                                           'xcai/generation/generate.py'),
                                          'xcai.generation.generate.TrieBeam': ( 'generation.generate.html#triebeam',
                                                                                 'xcai/generation/generate.py'),
                                          'xcai.generation.generate.TrieBeam.__init__': ( 'generation.generate.html#triebeam.__init__',
                                                                                          'xcai/generation/generate.py'),
                                          'xcai.generation.generate.TrieBeam.finalize': ( 'generation.generate.html#triebeam.finalize',
                                                                                          'xcai/generation/generate.py'),
                                          'xcai.generation.generate.TrieBeam.next': ( 'generation.generate.html#triebeam.next',
                                                                                      'xcai/generation/generate.py'),
                                          'xcai.generation.generate.TrieBeam.proc': ( 'generation.generate.html#triebeam.proc',
                                                                                      'xcai/generation/generate.py'),
                                          'xcai.generation.generate.TrieBeam.topk': ( 'generation.generate.html#triebeam.topk',
                                                                                      'xcai/generation/generate.py'),
                                          'xcai.generation.generate.TrieBeam.valid': ( 'generation.generate.html#triebeam.valid',
                                                                                       'xcai/generation/generate.py'),
                                          'xcai.generation.generate.TrieBeamSearch': ( 'generation.generate.html#triebeamsearch',
                                                                                       'xcai/generation/generate.py'),
                                          'xcai.generation.generate.TrieBeamSearch.__init__': ( 'generation.generate.html#triebeamsearch.__init__',
                                                                                                'xcai/generation/generate.py'),
                                          'xcai.generation.generate.TrieBeamSearch.proc': ( 'generation.generate.html#triebeamsearch.proc',
                                                                                            'xcai/generation/generate.py'),
                                          'xcai.generation.generate.TriePtr': ( 'generation.generate.html#trieptr',
                                                                                'xcai/generation/generate.py'),
                                          'xcai.generation.generate.TriePtr.__init__': ( 'generation.generate.html#trieptr.__init__',
                                                                                         'xcai/generation/generate.py'),
                                          'xcai.generation.generate.TriePtr.copy': ( 'generation.generate.html#trieptr.copy',
                                                                                     'xcai/generation/generate.py'),
                                          'xcai.generation.generate.TriePtr.is_end': ( 'generation.generate.html#trieptr.is_end',
                                                                                       'xcai/generation/generate.py'),
                                          'xcai.generation.generate.TriePtr.next': ( 'generation.generate.html#trieptr.next',
                                                                                     'xcai/generation/generate.py'),
                                          'xcai.generation.generate.TriePtr.suffixes': ( 'generation.generate.html#trieptr.suffixes',
                                                                                         'xcai/generation/generate.py'),
                                          'xcai.generation.generate.TriePtr.tokens': ( 'generation.generate.html#trieptr.tokens',
                                                                                       'xcai/generation/generate.py'),
                                          'xcai.generation.generate.TriePtr.value': ( 'generation.generate.html#trieptr.value',
                                                                                      'xcai/generation/generate.py'),
                                          'xcai.generation.generate.pad_tensor': ( 'generation.generate.html#pad_tensor',
                                                                                   'xcai/generation/generate.py')},
            'xcai.generation.trie': { 'xcai.generation.trie.Trie': ('generation.trie.html#trie', 'xcai/generation/trie.py'),
                                      'xcai.generation.trie.Trie.__contains__': ( 'generation.trie.html#trie.__contains__',
                                                                                  'xcai/generation/trie.py'),
                                      'xcai.generation.trie.Trie.__init__': ( 'generation.trie.html#trie.__init__',
                                                                              'xcai/generation/trie.py'),
                                      'xcai.generation.trie.Trie._add_info': ( 'generation.trie.html#trie._add_info',
                                                                               'xcai/generation/trie.py'),
                                      'xcai.generation.trie.Trie._prune': ('generation.trie.html#trie._prune', 'xcai/generation/trie.py'),
                                      'xcai.generation.trie.Trie._search': ('generation.trie.html#trie._search', 'xcai/generation/trie.py'),
                                      'xcai.generation.trie.Trie.bos_tok': ('generation.trie.html#trie.bos_tok', 'xcai/generation/trie.py'),
                                      'xcai.generation.trie.Trie.from_list': ( 'generation.trie.html#trie.from_list',
                                                                               'xcai/generation/trie.py'),
                                      'xcai.generation.trie.Trie.insert': ('generation.trie.html#trie.insert', 'xcai/generation/trie.py'),
                                      'xcai.generation.trie.Trie.prefix': ('generation.trie.html#trie.prefix', 'xcai/generation/trie.py'),
                                      'xcai.generation.trie.Trie.prune': ('generation.trie.html#trie.prune', 'xcai/generation/trie.py'),
                                      'xcai.generation.trie.Trie.suffixes': ( 'generation.trie.html#trie.suffixes',
                                                                              'xcai/generation/trie.py'),
                                      'xcai.generation.trie.Trie.update': ('generation.trie.html#trie.update', 'xcai/generation/trie.py'),
                                      'xcai.generation.trie.TrieNode': ('generation.trie.html#trienode', 'xcai/generation/trie.py'),
                                      'xcai.generation.trie.TrieNode.__init__': ( 'generation.trie.html#trienode.__init__',
                                                                                  'xcai/generation/trie.py'),
                                      'xcai.generation.trie.TrieNode.data': ( 'generation.trie.html#trienode.data',
                                                                              'xcai/generation/trie.py'),
                                      'xcai.generation.trie.TrieOutput': ('generation.trie.html#trieoutput', 'xcai/generation/trie.py'),
                                      'xcai.generation.trie.XCTrie': ('generation.trie.html#xctrie', 'xcai/generation/trie.py'),
                                      'xcai.generation.trie.XCTrie.from_block': ( 'generation.trie.html#xctrie.from_block',
                                                                                  'xcai/generation/trie.py')},
            'xcai.learner': { 'xcai.learner.XCDataParallel': ('learner.html#xcdataparallel', 'xcai/learner.py'),
                              'xcai.learner.XCDataParallel.__init__': ('learner.html#xcdataparallel.__init__', 'xcai/learner.py'),
                              'xcai.learner.XCDataParallel._extract_feat': ('learner.html#xcdataparallel._extract_feat', 'xcai/learner.py'),
                              'xcai.learner.XCDataParallel._get_feat_name': ( 'learner.html#xcdataparallel._get_feat_name',
                                                                              'xcai/learner.py'),
                              'xcai.learner.XCDataParallel.scatter': ('learner.html#xcdataparallel.scatter', 'xcai/learner.py'),
                              'xcai.learner.XCEvalLoopOutput': ('learner.html#xcevalloopoutput', 'xcai/learner.py'),
                              'xcai.learner.XCLearner': ('learner.html#xclearner', 'xcai/learner.py'),
                              'xcai.learner.XCLearner.__init__': ('learner.html#xclearner.__init__', 'xcai/learner.py'),
                              'xcai.learner.XCLearner._build_aug_index': ('learner.html#xclearner._build_aug_index', 'xcai/learner.py'),
                              'xcai.learner.XCLearner._build_lbl_index': ('learner.html#xclearner._build_lbl_index', 'xcai/learner.py'),
                              'xcai.learner.XCLearner._gather_all_output': ('learner.html#xclearner._gather_all_output', 'xcai/learner.py'),
                              'xcai.learner.XCLearner._gather_host_output': ( 'learner.html#xclearner._gather_host_output',
                                                                              'xcai/learner.py'),
                              'xcai.learner.XCLearner._get_min_cluster_sz': ( 'learner.html#xclearner._get_min_cluster_sz',
                                                                              'xcai/learner.py'),
                              'xcai.learner.XCLearner._get_train_data_cluster': ( 'learner.html#xclearner._get_train_data_cluster',
                                                                                  'xcai/learner.py'),
                              'xcai.learner.XCLearner._get_train_sampler': ('learner.html#xclearner._get_train_sampler', 'xcai/learner.py'),
                              'xcai.learner.XCLearner._inner_training_loop': ( 'learner.html#xclearner._inner_training_loop',
                                                                               'xcai/learner.py'),
                              'xcai.learner.XCLearner._perform_augmentation': ( 'learner.html#xclearner._perform_augmentation',
                                                                                'xcai/learner.py'),
                              'xcai.learner.XCLearner._perform_generation': ( 'learner.html#xclearner._perform_generation',
                                                                              'xcai/learner.py'),
                              'xcai.learner.XCLearner._perform_representation': ( 'learner.html#xclearner._perform_representation',
                                                                                  'xcai/learner.py'),
                              'xcai.learner.XCLearner._validate_group_by_cluster': ( 'learner.html#xclearner._validate_group_by_cluster',
                                                                                     'xcai/learner.py'),
                              'xcai.learner.XCLearner._wrap_model': ('learner.html#xclearner._wrap_model', 'xcai/learner.py'),
                              'xcai.learner.XCLearner.augmentation_output': ( 'learner.html#xclearner.augmentation_output',
                                                                              'xcai/learner.py'),
                              'xcai.learner.XCLearner.concatenate_output': ('learner.html#xclearner.concatenate_output', 'xcai/learner.py'),
                              'xcai.learner.XCLearner.evaluate': ('learner.html#xclearner.evaluate', 'xcai/learner.py'),
                              'xcai.learner.XCLearner.evaluation_loop': ('learner.html#xclearner.evaluation_loop', 'xcai/learner.py'),
                              'xcai.learner.XCLearner.generation_output': ('learner.html#xclearner.generation_output', 'xcai/learner.py'),
                              'xcai.learner.XCLearner.get_meta_representation': ( 'learner.html#xclearner.get_meta_representation',
                                                                                  'xcai/learner.py'),
                              'xcai.learner.XCLearner.get_representation': ('learner.html#xclearner.get_representation', 'xcai/learner.py'),
                              'xcai.learner.XCLearner.get_train_dataloader': ( 'learner.html#xclearner.get_train_dataloader',
                                                                               'xcai/learner.py'),
                              'xcai.learner.XCLearner.output_mask': ('learner.html#xclearner.output_mask', 'xcai/learner.py'),
                              'xcai.learner.XCLearner.predict': ('learner.html#xclearner.predict', 'xcai/learner.py'),
                              'xcai.learner.XCLearner.prediction_step': ('learner.html#xclearner.prediction_step', 'xcai/learner.py'),
                              'xcai.learner.XCLearner.prune_metadata': ('learner.html#xclearner.prune_metadata', 'xcai/learner.py'),
                              'xcai.learner.XCLearner.representation_output': ( 'learner.html#xclearner.representation_output',
                                                                                'xcai/learner.py'),
                              'xcai.learner.XCLearner.resize_output': ('learner.html#xclearner.resize_output', 'xcai/learner.py'),
                              'xcai.learner.XCLearner.resize_pred': ('learner.html#xclearner.resize_pred', 'xcai/learner.py'),
                              'xcai.learner.XCLearner.update_dataloader_sampler': ( 'learner.html#xclearner.update_dataloader_sampler',
                                                                                    'xcai/learner.py'),
                              'xcai.learner.XCLearningArguments': ('learner.html#xclearningarguments', 'xcai/learner.py'),
                              'xcai.learner.XCLearningArguments.__init__': ('learner.html#xclearningarguments.__init__', 'xcai/learner.py'),
                              'xcai.learner.XCPredictionOutput': ('learner.html#xcpredictionoutput', 'xcai/learner.py'),
                              'xcai.learner.scatter': ('learner.html#scatter', 'xcai/learner.py'),
                              'xcai.learner.scatter_kwargs': ('learner.html#scatter_kwargs', 'xcai/learner.py')},
            'xcai.losses': { 'xcai.losses.BaseLoss': ('losses.html#baseloss', 'xcai/losses.py'),
                             'xcai.losses.BaseLoss.__init__': ('losses.html#baseloss.__init__', 'xcai/losses.py'),
                             'xcai.losses.BaseLoss.reduction': ('losses.html#baseloss.reduction', 'xcai/losses.py'),
                             'xcai.losses.Cosine': ('losses.html#cosine', 'xcai/losses.py'),
                             'xcai.losses.Cosine.__init__': ('losses.html#cosine.__init__', 'xcai/losses.py'),
                             'xcai.losses.Cosine.forward': ('losses.html#cosine.forward', 'xcai/losses.py'),
                             'xcai.losses.Entropy': ('losses.html#entropy', 'xcai/losses.py'),
                             'xcai.losses.Entropy.__init__': ('losses.html#entropy.__init__', 'xcai/losses.py'),
                             'xcai.losses.Entropy.forward': ('losses.html#entropy.forward', 'xcai/losses.py'),
                             'xcai.losses.MultiCrossEntropy': ('losses.html#multicrossentropy', 'xcai/losses.py'),
                             'xcai.losses.MultiCrossEntropy.__init__': ('losses.html#multicrossentropy.__init__', 'xcai/losses.py'),
                             'xcai.losses.MultiCrossEntropy.forward': ('losses.html#multicrossentropy.forward', 'xcai/losses.py'),
                             'xcai.losses.MultiTriplet': ('losses.html#multitriplet', 'xcai/losses.py'),
                             'xcai.losses.MultiTriplet.__init__': ('losses.html#multitriplet.__init__', 'xcai/losses.py'),
                             'xcai.losses.MultiTriplet.forward': ('losses.html#multitriplet.forward', 'xcai/losses.py'),
                             'xcai.losses.SoupCon': ('losses.html#soupcon', 'xcai/losses.py'),
                             'xcai.losses.SoupCon.__init__': ('losses.html#soupcon.__init__', 'xcai/losses.py'),
                             'xcai.losses.SoupCon.forward': ('losses.html#soupcon.forward', 'xcai/losses.py'),
                             'xcai.losses.Triplet': ('losses.html#triplet', 'xcai/losses.py'),
                             'xcai.losses.Triplet.__init__': ('losses.html#triplet.__init__', 'xcai/losses.py'),
                             'xcai.losses.Triplet.forward': ('losses.html#triplet.forward', 'xcai/losses.py'),
                             'xcai.losses.get_sparse_matrix': ('losses.html#get_sparse_matrix', 'xcai/losses.py')},
            'xcai.metrics': { 'xcai.metrics.PrecRecl': ('metrics.html#precrecl', 'xcai/metrics.py'),
                              'xcai.metrics.Precision': ('metrics.html#precision', 'xcai/metrics.py'),
                              'xcai.metrics.Recall': ('metrics.html#recall', 'xcai/metrics.py'),
                              'xcai.metrics.XCMetric': ('metrics.html#xcmetric', 'xcai/metrics.py'),
                              'xcai.metrics.XCMetric.__call__': ('metrics.html#xcmetric.__call__', 'xcai/metrics.py'),
                              'xcai.metrics.XCMetric.__init__': ('metrics.html#xcmetric.__init__', 'xcai/metrics.py'),
                              'xcai.metrics.XCMetric.accumulate': ('metrics.html#xcmetric.accumulate', 'xcai/metrics.py'),
                              'xcai.metrics.XCMetric.apply_filter': ('metrics.html#xcmetric.apply_filter', 'xcai/metrics.py'),
                              'xcai.metrics.XCMetric.get_pred': ('metrics.html#xcmetric.get_pred', 'xcai/metrics.py'),
                              'xcai.metrics.XCMetric.get_targ': ('metrics.html#xcmetric.get_targ', 'xcai/metrics.py'),
                              'xcai.metrics.XCMetric.reset': ('metrics.html#xcmetric.reset', 'xcai/metrics.py'),
                              'xcai.metrics.XCMetric.value': ('metrics.html#xcmetric.value', 'xcai/metrics.py'),
                              'xcai.metrics.prec_recl': ('metrics.html#prec_recl', 'xcai/metrics.py'),
                              'xcai.metrics.precision': ('metrics.html#precision', 'xcai/metrics.py'),
                              'xcai.metrics.recall': ('metrics.html#recall', 'xcai/metrics.py'),
                              'xcai.metrics.sort_xm': ('metrics.html#sort_xm', 'xcai/metrics.py')},
            'xcai.models.MMM00X': { 'xcai.models.MMM00X.BT0001': ('models.mmm00x.html#bt0001', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.BT0001.__init__': ('models.mmm00x.html#bt0001.__init__', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.BT0001.forward': ('models.mmm00x.html#bt0001.forward', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.BT0002': ('models.mmm00x.html#bt0002', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.BT0002.__init__': ('models.mmm00x.html#bt0002.__init__', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.BT0002.forward': ('models.mmm00x.html#bt0002.forward', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.BT0003': ('models.mmm00x.html#bt0003', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.BT0003.__init__': ('models.mmm00x.html#bt0003.__init__', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.BT0003.forward': ('models.mmm00x.html#bt0003.forward', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.BT0003.get_repr': ('models.mmm00x.html#bt0003.get_repr', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.BT0004': ('models.mmm00x.html#bt0004', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.BT0004.__init__': ('models.mmm00x.html#bt0004.__init__', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.BT0004.forward': ('models.mmm00x.html#bt0004.forward', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.BT0004.get_repr': ('models.mmm00x.html#bt0004.get_repr', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.BT0006': ('models.mmm00x.html#bt0006', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.BT0006.__init__': ('models.mmm00x.html#bt0006.__init__', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.DBT007': ('models.mmm00x.html#dbt007', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.DBT007.__init__': ('models.mmm00x.html#dbt007.__init__', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.DBT007.forward': ('models.mmm00x.html#dbt007.forward', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.DBT008': ('models.mmm00x.html#dbt008', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.DBT008.__init__': ('models.mmm00x.html#dbt008.__init__', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.DBT008.forward': ('models.mmm00x.html#dbt008.forward', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.DBT008.get_repr': ('models.mmm00x.html#dbt008.get_repr', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.DBT009': ('models.mmm00x.html#dbt009', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.DBT009.__init__': ('models.mmm00x.html#dbt009.__init__', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.DBT009.loss_fn': ('models.mmm00x.html#dbt009.loss_fn', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.DBT010': ('models.mmm00x.html#dbt010', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.DBT010.__init__': ('models.mmm00x.html#dbt010.__init__', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.DBT010.get_repr': ('models.mmm00x.html#dbt010.get_repr', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.Pooling': ('models.mmm00x.html#pooling', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.Pooling.mean_pooling': ( 'models.mmm00x.html#pooling.mean_pooling',
                                                                                 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.RT0005': ('models.mmm00x.html#rt0005', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.RT0005.__init__': ('models.mmm00x.html#rt0005.__init__', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.RT0005.forward': ('models.mmm00x.html#rt0005.forward', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.XCModelOutput': ('models.mmm00x.html#xcmodeloutput', 'xcai/models/MMM00X.py')},
            'xcai.models.MMM0XX': { 'xcai.models.MMM0XX.BT0001': ('models.mmm0xx.html#bt0001', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.BT0001.__init__': ('models.mmm0xx.html#bt0001.__init__', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.BT0001.forward': ('models.mmm0xx.html#bt0001.forward', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.BT0002': ('models.mmm0xx.html#bt0002', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.BT0002.__init__': ('models.mmm0xx.html#bt0002.__init__', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.BT0002.forward': ('models.mmm0xx.html#bt0002.forward', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.BT0003': ('models.mmm0xx.html#bt0003', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.BT0003.__init__': ('models.mmm0xx.html#bt0003.__init__', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.BT0003.forward': ('models.mmm0xx.html#bt0003.forward', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.BT0003.get_repr': ('models.mmm0xx.html#bt0003.get_repr', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.BT0004': ('models.mmm0xx.html#bt0004', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.BT0004.__init__': ('models.mmm0xx.html#bt0004.__init__', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.BT0004.forward': ('models.mmm0xx.html#bt0004.forward', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.BT0004.get_repr': ('models.mmm0xx.html#bt0004.get_repr', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.BT0006': ('models.mmm0xx.html#bt0006', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.BT0006.__init__': ('models.mmm0xx.html#bt0006.__init__', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT007': ('models.mmm0xx.html#dbt007', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT007.__init__': ('models.mmm0xx.html#dbt007.__init__', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT007.forward': ('models.mmm0xx.html#dbt007.forward', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT008': ('models.mmm0xx.html#dbt008', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT008.__init__': ('models.mmm0xx.html#dbt008.__init__', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT008.forward': ('models.mmm0xx.html#dbt008.forward', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT008.get_repr': ('models.mmm0xx.html#dbt008.get_repr', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT008.init_dr_head': ( 'models.mmm0xx.html#dbt008.init_dr_head',
                                                                                'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT009': ('models.mmm0xx.html#dbt009', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT009.__init__': ('models.mmm0xx.html#dbt009.__init__', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT009.get_repr': ('models.mmm0xx.html#dbt009.get_repr', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT010': ('models.mmm0xx.html#dbt010', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT010.__init__': ('models.mmm0xx.html#dbt010.__init__', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT011': ('models.mmm0xx.html#dbt011', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT011.__init__': ('models.mmm0xx.html#dbt011.__init__', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT011.loss_fn': ('models.mmm0xx.html#dbt011.loss_fn', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT012': ('models.mmm0xx.html#dbt012', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT012.__init__': ('models.mmm0xx.html#dbt012.__init__', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT012.loss_fn': ('models.mmm0xx.html#dbt012.loss_fn', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT013': ('models.mmm0xx.html#dbt013', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT013.__init__': ('models.mmm0xx.html#dbt013.__init__', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT013.forward': ('models.mmm0xx.html#dbt013.forward', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT013.get_generation': ( 'models.mmm0xx.html#dbt013.get_generation',
                                                                                  'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT013.get_genrep': ( 'models.mmm0xx.html#dbt013.get_genrep',
                                                                              'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT013.get_representation': ( 'models.mmm0xx.html#dbt013.get_representation',
                                                                                      'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT013.init_dr_head': ( 'models.mmm0xx.html#dbt013.init_dr_head',
                                                                                'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT014': ('models.mmm0xx.html#dbt014', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT014.__init__': ('models.mmm0xx.html#dbt014.__init__', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT014._get_meta_inputs': ( 'models.mmm0xx.html#dbt014._get_meta_inputs',
                                                                                    'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT014.forward': ('models.mmm0xx.html#dbt014.forward', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT015': ('models.mmm0xx.html#dbt015', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT015.__init__': ('models.mmm0xx.html#dbt015.__init__', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT015._get_meta_inputs': ( 'models.mmm0xx.html#dbt015._get_meta_inputs',
                                                                                    'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT015.forward': ('models.mmm0xx.html#dbt015.forward', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT016': ('models.mmm0xx.html#dbt016', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT016.__init__': ('models.mmm0xx.html#dbt016.__init__', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT016.get_generation': ( 'models.mmm0xx.html#dbt016.get_generation',
                                                                                  'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT016.get_genrep': ( 'models.mmm0xx.html#dbt016.get_genrep',
                                                                              'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT017': ('models.mmm0xx.html#dbt017', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT017.__init__': ('models.mmm0xx.html#dbt017.__init__', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT017._get_meta_inputs': ( 'models.mmm0xx.html#dbt017._get_meta_inputs',
                                                                                    'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT017.forward': ('models.mmm0xx.html#dbt017.forward', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT018': ('models.mmm0xx.html#dbt018', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT018.__init__': ('models.mmm0xx.html#dbt018.__init__', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT018._get_meta_inputs': ( 'models.mmm0xx.html#dbt018._get_meta_inputs',
                                                                                    'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT018.forward': ('models.mmm0xx.html#dbt018.forward', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT018.get_meta_fused_genrep': ( 'models.mmm0xx.html#dbt018.get_meta_fused_genrep',
                                                                                         'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT018.get_meta_fused_output': ( 'models.mmm0xx.html#dbt018.get_meta_fused_output',
                                                                                         'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT018.get_output': ( 'models.mmm0xx.html#dbt018.get_output',
                                                                              'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT018.resize_meta': ( 'models.mmm0xx.html#dbt018.resize_meta',
                                                                               'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT019': ('models.mmm0xx.html#dbt019', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT019.__init__': ('models.mmm0xx.html#dbt019.__init__', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT019.forward': ('models.mmm0xx.html#dbt019.forward', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT020': ('models.mmm0xx.html#dbt020', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT020.__init__': ('models.mmm0xx.html#dbt020.__init__', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT020.forward': ('models.mmm0xx.html#dbt020.forward', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.Fuser': ('models.mmm0xx.html#fuser', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.Fuser.__init__': ('models.mmm0xx.html#fuser.__init__', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.Fuser.forward': ('models.mmm0xx.html#fuser.forward', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.Pooling': ('models.mmm0xx.html#pooling', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.Pooling.mean_pooling': ( 'models.mmm0xx.html#pooling.mean_pooling',
                                                                                 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.RT0005': ('models.mmm0xx.html#rt0005', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.RT0005.__init__': ('models.mmm0xx.html#rt0005.__init__', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.RT0005.forward': ('models.mmm0xx.html#rt0005.forward', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.XCModelOutput': ('models.mmm0xx.html#xcmodeloutput', 'xcai/models/MMM0XX.py')},
            'xcai.models.PPP0XX': { 'xcai.models.PPP0XX.DBT007': ('models.ppp0xx.html#dbt007', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT007.__init__': ('models.ppp0xx.html#dbt007.__init__', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT007.forward': ('models.ppp0xx.html#dbt007.forward', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT007.remap_post_init': ( 'models.ppp0xx.html#dbt007.remap_post_init',
                                                                                   'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT007Encoder': ('models.ppp0xx.html#dbt007encoder', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT007Encoder.__init__': ( 'models.ppp0xx.html#dbt007encoder.__init__',
                                                                                   'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT007Encoder.forward': ( 'models.ppp0xx.html#dbt007encoder.forward',
                                                                                  'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT009': ('models.ppp0xx.html#dbt009', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT009.__init__': ('models.ppp0xx.html#dbt009.__init__', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT009.forward': ('models.ppp0xx.html#dbt009.forward', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT009.init_dr_head': ( 'models.ppp0xx.html#dbt009.init_dr_head',
                                                                                'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT009.remap_post_init': ( 'models.ppp0xx.html#dbt009.remap_post_init',
                                                                                   'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT009Encoder': ('models.ppp0xx.html#dbt009encoder', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT009Encoder.__init__': ( 'models.ppp0xx.html#dbt009encoder.__init__',
                                                                                   'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT009Encoder.forward': ( 'models.ppp0xx.html#dbt009encoder.forward',
                                                                                  'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT009Encoder.init_dr_head': ( 'models.ppp0xx.html#dbt009encoder.init_dr_head',
                                                                                       'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT010': ('models.ppp0xx.html#dbt010', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT010.__init__': ('models.ppp0xx.html#dbt010.__init__', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT010.forward': ('models.ppp0xx.html#dbt010.forward', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT010Encoder': ('models.ppp0xx.html#dbt010encoder', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT010Encoder.__init__': ( 'models.ppp0xx.html#dbt010encoder.__init__',
                                                                                   'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT010Encoder.forward': ( 'models.ppp0xx.html#dbt010encoder.forward',
                                                                                  'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT011': ('models.ppp0xx.html#dbt011', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT011.__init__': ('models.ppp0xx.html#dbt011.__init__', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT011.forward': ('models.ppp0xx.html#dbt011.forward', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT011.init_dr_head': ( 'models.ppp0xx.html#dbt011.init_dr_head',
                                                                                'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT011.remap_post_init': ( 'models.ppp0xx.html#dbt011.remap_post_init',
                                                                                   'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT012': ('models.ppp0xx.html#dbt012', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT012.__init__': ('models.ppp0xx.html#dbt012.__init__', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT012.forward': ('models.ppp0xx.html#dbt012.forward', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT012.init_dr_head': ( 'models.ppp0xx.html#dbt012.init_dr_head',
                                                                                'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT012.remap_post_init': ( 'models.ppp0xx.html#dbt012.remap_post_init',
                                                                                   'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT012Encoder': ('models.ppp0xx.html#dbt012encoder', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT012Encoder.forward': ( 'models.ppp0xx.html#dbt012encoder.forward',
                                                                                  'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT013': ('models.ppp0xx.html#dbt013', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT013.__init__': ('models.ppp0xx.html#dbt013.__init__', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT013.forward': ('models.ppp0xx.html#dbt013.forward', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT013.init_dr_head': ( 'models.ppp0xx.html#dbt013.init_dr_head',
                                                                                'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT013.remap_post_init': ( 'models.ppp0xx.html#dbt013.remap_post_init',
                                                                                   'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT013Encoder': ('models.ppp0xx.html#dbt013encoder', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT013Encoder.__init__': ( 'models.ppp0xx.html#dbt013encoder.__init__',
                                                                                   'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT013Encoder.forward': ( 'models.ppp0xx.html#dbt013encoder.forward',
                                                                                  'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT013Encoder.init_dr_head': ( 'models.ppp0xx.html#dbt013encoder.init_dr_head',
                                                                                       'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT014': ('models.ppp0xx.html#dbt014', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT014.__init__': ('models.ppp0xx.html#dbt014.__init__', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT014.forward': ('models.ppp0xx.html#dbt014.forward', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT014Encoder': ('models.ppp0xx.html#dbt014encoder', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT014Encoder.__init__': ( 'models.ppp0xx.html#dbt014encoder.__init__',
                                                                                   'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT014Encoder.forward': ( 'models.ppp0xx.html#dbt014encoder.forward',
                                                                                  'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT017': ('models.ppp0xx.html#dbt017', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT017.__init__': ('models.ppp0xx.html#dbt017.__init__', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT017._get_meta_inputs': ( 'models.ppp0xx.html#dbt017._get_meta_inputs',
                                                                                    'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT017.forward': ('models.ppp0xx.html#dbt017.forward', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT018': ('models.ppp0xx.html#dbt018', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT018.__init__': ('models.ppp0xx.html#dbt018.__init__', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT018._get_meta_kwargs': ( 'models.ppp0xx.html#dbt018._get_meta_kwargs',
                                                                                    'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT018.forward': ('models.ppp0xx.html#dbt018.forward', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT018Encoder': ('models.ppp0xx.html#dbt018encoder', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT018Encoder.__init__': ( 'models.ppp0xx.html#dbt018encoder.__init__',
                                                                                   'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT018Encoder._get_meta_inputs': ( 'models.ppp0xx.html#dbt018encoder._get_meta_inputs',
                                                                                           'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT018Encoder.forward': ( 'models.ppp0xx.html#dbt018encoder.forward',
                                                                                  'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT018Encoder.get_meta_fused_output': ( 'models.ppp0xx.html#dbt018encoder.get_meta_fused_output',
                                                                                                'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT018Encoder.get_output': ( 'models.ppp0xx.html#dbt018encoder.get_output',
                                                                                     'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT018Encoder.resize_meta': ( 'models.ppp0xx.html#dbt018encoder.resize_meta',
                                                                                      'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT020': ('models.ppp0xx.html#dbt020', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT020.__init__': ('models.ppp0xx.html#dbt020.__init__', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT020._get_meta_inputs': ( 'models.ppp0xx.html#dbt020._get_meta_inputs',
                                                                                    'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT020.forward': ('models.ppp0xx.html#dbt020.forward', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT021': ('models.ppp0xx.html#dbt021', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT021.__init__': ('models.ppp0xx.html#dbt021.__init__', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT021._get_meta_inputs': ( 'models.ppp0xx.html#dbt021._get_meta_inputs',
                                                                                    'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT021._get_meta_loss_weights': ( 'models.ppp0xx.html#dbt021._get_meta_loss_weights',
                                                                                          'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT021.compute_meta_loss': ( 'models.ppp0xx.html#dbt021.compute_meta_loss',
                                                                                     'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT021.forward': ('models.ppp0xx.html#dbt021.forward', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT021Encoder': ('models.ppp0xx.html#dbt021encoder', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT021Encoder.__init__': ( 'models.ppp0xx.html#dbt021encoder.__init__',
                                                                                   'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT021Encoder.dr': ('models.ppp0xx.html#dbt021encoder.dr', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT021Encoder.forward': ( 'models.ppp0xx.html#dbt021encoder.forward',
                                                                                  'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT021Encoder.init_dr_head': ( 'models.ppp0xx.html#dbt021encoder.init_dr_head',
                                                                                       'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT021Encoder.meta': ( 'models.ppp0xx.html#dbt021encoder.meta',
                                                                               'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT022': ('models.ppp0xx.html#dbt022', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT022.__init__': ('models.ppp0xx.html#dbt022.__init__', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT022.forward': ('models.ppp0xx.html#dbt022.forward', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.Fuser': ('models.ppp0xx.html#fuser', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.Fuser.__init__': ('models.ppp0xx.html#fuser.__init__', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.Fuser.forward': ('models.ppp0xx.html#fuser.forward', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.Pooling': ('models.ppp0xx.html#pooling', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.Pooling.mean_pooling': ( 'models.ppp0xx.html#pooling.mean_pooling',
                                                                                 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.XCModelOutput': ('models.ppp0xx.html#xcmodeloutput', 'xcai/models/PPP0XX.py')},
            'xcai.models.radga': { 'xcai.models.radga.CrossAttention': ('models.radga.html#crossattention', 'xcai/models/radga.py'),
                                   'xcai.models.radga.CrossAttention.__init__': ( 'models.radga.html#crossattention.__init__',
                                                                                  'xcai/models/radga.py'),
                                   'xcai.models.radga.CrossAttention.forward': ( 'models.radga.html#crossattention.forward',
                                                                                 'xcai/models/radga.py'),
                                   'xcai.models.radga.CrossAttention.post_init': ( 'models.radga.html#crossattention.post_init',
                                                                                   'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder': ('models.radga.html#encoder', 'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder.__init__': ('models.radga.html#encoder.__init__', 'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder.add_noise': ('models.radga.html#encoder.add_noise', 'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder.dr': ('models.radga.html#encoder.dr', 'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder.encode': ('models.radga.html#encoder.encode', 'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder.forward': ('models.radga.html#encoder.forward', 'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder.fuse_meta_into_embeddings': ( 'models.radga.html#encoder.fuse_meta_into_embeddings',
                                                                                            'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder.gen': ('models.radga.html#encoder.gen', 'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder.get_noise': ('models.radga.html#encoder.get_noise', 'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder.get_output_embeddings': ( 'models.radga.html#encoder.get_output_embeddings',
                                                                                        'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder.get_position_embeddings': ( 'models.radga.html#encoder.get_position_embeddings',
                                                                                          'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder.meta': ('models.radga.html#encoder.meta', 'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder.meta_unnormalized': ( 'models.radga.html#encoder.meta_unnormalized',
                                                                                    'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder.resize': ('models.radga.html#encoder.resize', 'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder.resize_position_embeddings': ( 'models.radga.html#encoder.resize_position_embeddings',
                                                                                             'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder.set_output_embeddings': ( 'models.radga.html#encoder.set_output_embeddings',
                                                                                        'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder002': ('models.radga.html#encoder002', 'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder002.__init__': ( 'models.radga.html#encoder002.__init__',
                                                                              'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder002.add_noise': ( 'models.radga.html#encoder002.add_noise',
                                                                               'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder002.dr': ('models.radga.html#encoder002.dr', 'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder002.encode': ('models.radga.html#encoder002.encode', 'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder002.forward': ('models.radga.html#encoder002.forward', 'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder002.fuse_meta_into_embeddings': ( 'models.radga.html#encoder002.fuse_meta_into_embeddings',
                                                                                               'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder002.get_noise': ( 'models.radga.html#encoder002.get_noise',
                                                                               'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder002.get_position_embeddings': ( 'models.radga.html#encoder002.get_position_embeddings',
                                                                                             'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder002.meta': ('models.radga.html#encoder002.meta', 'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder002.meta_unnormalized': ( 'models.radga.html#encoder002.meta_unnormalized',
                                                                                       'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder002.resize': ('models.radga.html#encoder002.resize', 'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder002.resize_position_embeddings': ( 'models.radga.html#encoder002.resize_position_embeddings',
                                                                                                'xcai/models/radga.py'),
                                   'xcai.models.radga.EncoderOutput': ('models.radga.html#encoderoutput', 'xcai/models/radga.py'),
                                   'xcai.models.radga.GenerationHead': ('models.radga.html#generationhead', 'xcai/models/radga.py'),
                                   'xcai.models.radga.GenerationHead.__init__': ( 'models.radga.html#generationhead.__init__',
                                                                                  'xcai/models/radga.py'),
                                   'xcai.models.radga.GenerationHead.forward': ( 'models.radga.html#generationhead.forward',
                                                                                 'xcai/models/radga.py'),
                                   'xcai.models.radga.Parameters': ('models.radga.html#parameters', 'xcai/models/radga.py'),
                                   'xcai.models.radga.Parameters.from_feat_meta_aug_prefix': ( 'models.radga.html#parameters.from_feat_meta_aug_prefix',
                                                                                               'xcai/models/radga.py'),
                                   'xcai.models.radga.Parameters.from_meta_aug_prefix': ( 'models.radga.html#parameters.from_meta_aug_prefix',
                                                                                          'xcai/models/radga.py'),
                                   'xcai.models.radga.Parameters.from_meta_pred_prefix': ( 'models.radga.html#parameters.from_meta_pred_prefix',
                                                                                           'xcai/models/radga.py'),
                                   'xcai.models.radga.Parameters.get_meta_loss_weights': ( 'models.radga.html#parameters.get_meta_loss_weights',
                                                                                           'xcai/models/radga.py'),
                                   'xcai.models.radga.Pooling': ('models.radga.html#pooling', 'xcai/models/radga.py'),
                                   'xcai.models.radga.Pooling.mean_pooling': ( 'models.radga.html#pooling.mean_pooling',
                                                                               'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD001': ('models.radga.html#rad001', 'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD001.__init__': ('models.radga.html#rad001.__init__', 'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD001.compute_fusion_loss': ( 'models.radga.html#rad001.compute_fusion_loss',
                                                                                     'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD001.compute_loss': ( 'models.radga.html#rad001.compute_loss',
                                                                              'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD001.compute_meta_loss': ( 'models.radga.html#rad001.compute_meta_loss',
                                                                                   'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD001.disable_noise': ( 'models.radga.html#rad001.disable_noise',
                                                                               'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD001.forward': ('models.radga.html#rad001.forward', 'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD001.get_last_item_mask': ( 'models.radga.html#rad001.get_last_item_mask',
                                                                                    'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD001.get_meta_representation': ( 'models.radga.html#rad001.get_meta_representation',
                                                                                         'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD001.get_noise': ('models.radga.html#rad001.get_noise', 'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD001.init_generation_head': ( 'models.radga.html#rad001.init_generation_head',
                                                                                      'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD001.init_retrieval_head': ( 'models.radga.html#rad001.init_retrieval_head',
                                                                                     'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD001.remap_post_init': ( 'models.radga.html#rad001.remap_post_init',
                                                                                 'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD001.set_noise': ('models.radga.html#rad001.set_noise', 'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD002': ('models.radga.html#rad002', 'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD002.__init__': ('models.radga.html#rad002.__init__', 'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD002.compute_fusion_loss': ( 'models.radga.html#rad002.compute_fusion_loss',
                                                                                     'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD002.compute_loss': ( 'models.radga.html#rad002.compute_loss',
                                                                              'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD002.compute_meta_loss': ( 'models.radga.html#rad002.compute_meta_loss',
                                                                                   'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD002.disable_noise': ( 'models.radga.html#rad002.disable_noise',
                                                                               'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD002.forward': ('models.radga.html#rad002.forward', 'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD002.get_last_item_mask': ( 'models.radga.html#rad002.get_last_item_mask',
                                                                                    'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD002.get_meta_representation': ( 'models.radga.html#rad002.get_meta_representation',
                                                                                         'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD002.get_noise': ('models.radga.html#rad002.get_noise', 'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD002.init_cross_head': ( 'models.radga.html#rad002.init_cross_head',
                                                                                 'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD002.init_retrieval_head': ( 'models.radga.html#rad002.init_retrieval_head',
                                                                                     'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD002.remap_post_init': ( 'models.radga.html#rad002.remap_post_init',
                                                                                 'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD002.set_noise': ('models.radga.html#rad002.set_noise', 'xcai/models/radga.py'),
                                   'xcai.models.radga.RADOutput': ('models.radga.html#radoutput', 'xcai/models/radga.py'),
                                   'xcai.models.radga.RepresentationHead': ('models.radga.html#representationhead', 'xcai/models/radga.py'),
                                   'xcai.models.radga.RepresentationHead.__init__': ( 'models.radga.html#representationhead.__init__',
                                                                                      'xcai/models/radga.py'),
                                   'xcai.models.radga.RepresentationHead.forward': ( 'models.radga.html#representationhead.forward',
                                                                                     'xcai/models/radga.py'),
                                   'xcai.models.radga.RepresentationHead.post_init': ( 'models.radga.html#representationhead.post_init',
                                                                                       'xcai/models/radga.py')},
            'xcai.plot': {'xcai.plot.set_plot_defaults': ('plot.html#set_plot_defaults', 'xcai/plot.py')},
            'xcai.representation.index': { 'xcai.representation.index.IndexSearch': ( 'representation.index.html#indexsearch',
                                                                                      'xcai/representation/index.py'),
                                           'xcai.representation.index.IndexSearch.__init__': ( 'representation.index.html#indexsearch.__init__',
                                                                                               'xcai/representation/index.py'),
                                           'xcai.representation.index.IndexSearch.build': ( 'representation.index.html#indexsearch.build',
                                                                                            'xcai/representation/index.py'),
                                           'xcai.representation.index.IndexSearch.proc': ( 'representation.index.html#indexsearch.proc',
                                                                                           'xcai/representation/index.py')},
            'xcai.representation.search': { 'xcai.representation.search.BruteForceSearch': ( 'representation.search.html#bruteforcesearch',
                                                                                             'xcai/representation/search.py'),
                                            'xcai.representation.search.BruteForceSearch.__init__': ( 'representation.search.html#bruteforcesearch.__init__',
                                                                                                      'xcai/representation/search.py'),
                                            'xcai.representation.search.BruteForceSearch.build': ( 'representation.search.html#bruteforcesearch.build',
                                                                                                   'xcai/representation/search.py'),
                                            'xcai.representation.search.BruteForceSearch.proc': ( 'representation.search.html#bruteforcesearch.proc',
                                                                                                  'xcai/representation/search.py'),
                                            'xcai.representation.search.IndexSearch': ( 'representation.search.html#indexsearch',
                                                                                        'xcai/representation/search.py'),
                                            'xcai.representation.search.IndexSearch.__init__': ( 'representation.search.html#indexsearch.__init__',
                                                                                                 'xcai/representation/search.py'),
                                            'xcai.representation.search.IndexSearch.build': ( 'representation.search.html#indexsearch.build',
                                                                                              'xcai/representation/search.py'),
                                            'xcai.representation.search.IndexSearch.proc': ( 'representation.search.html#indexsearch.proc',
                                                                                             'xcai/representation/search.py')},
            'xcai.torch_core': { 'xcai.torch_core.CUDALongTensor': ('torch_core.html#cudalongtensor', 'xcai/torch_core.py'),
                                 'xcai.torch_core.CUDALongTensor.__decode_as_int64': ( 'torch_core.html#cudalongtensor.__decode_as_int64',
                                                                                       'xcai/torch_core.py'),
                                 'xcai.torch_core.CUDALongTensor.__encode_as_fp64': ( 'torch_core.html#cudalongtensor.__encode_as_fp64',
                                                                                      'xcai/torch_core.py'),
                                 'xcai.torch_core.CUDALongTensor.matmul': ('torch_core.html#cudalongtensor.matmul', 'xcai/torch_core.py')},
            'xcai.transform': { 'xcai.transform.AlignInputIdsTfm': ('transform.html#aligninputidstfm', 'xcai/transform.py'),
                                'xcai.transform.AlignInputIdsTfm.__call__': ( 'transform.html#aligninputidstfm.__call__',
                                                                              'xcai/transform.py'),
                                'xcai.transform.AlignInputIdsTfm.__init__': ( 'transform.html#aligninputidstfm.__init__',
                                                                              'xcai/transform.py'),
                                'xcai.transform.AlignInputIdsTfm.proc': ('transform.html#aligninputidstfm.proc', 'xcai/transform.py'),
                                'xcai.transform.AugmentMetaInputIdsTfm': ('transform.html#augmentmetainputidstfm', 'xcai/transform.py'),
                                'xcai.transform.AugmentMetaInputIdsTfm.__call__': ( 'transform.html#augmentmetainputidstfm.__call__',
                                                                                    'xcai/transform.py'),
                                'xcai.transform.AugmentMetaInputIdsTfm.__init__': ( 'transform.html#augmentmetainputidstfm.__init__',
                                                                                    'xcai/transform.py'),
                                'xcai.transform.AugmentMetaInputIdsTfm.apply': ( 'transform.html#augmentmetainputidstfm.apply',
                                                                                 'xcai/transform.py'),
                                'xcai.transform.AugmentMetaInputIdsTfm.augment': ( 'transform.html#augmentmetainputidstfm.augment',
                                                                                   'xcai/transform.py'),
                                'xcai.transform.AugmentMetaInputIdsTfm.proc': ( 'transform.html#augmentmetainputidstfm.proc',
                                                                                'xcai/transform.py'),
                                'xcai.transform.CollapseTfm': ('transform.html#collapsetfm', 'xcai/transform.py'),
                                'xcai.transform.CollapseTfm.__call__': ('transform.html#collapsetfm.__call__', 'xcai/transform.py'),
                                'xcai.transform.CollapseTfm.__init__': ('transform.html#collapsetfm.__init__', 'xcai/transform.py'),
                                'xcai.transform.CollapseTfm._get_ptr': ('transform.html#collapsetfm._get_ptr', 'xcai/transform.py'),
                                'xcai.transform.CollapseTfm.collapse': ('transform.html#collapsetfm.collapse', 'xcai/transform.py'),
                                'xcai.transform.CollateFeatTfm': ('transform.html#collatefeattfm', 'xcai/transform.py'),
                                'xcai.transform.CollateFeatTfm.__call__': ('transform.html#collatefeattfm.__call__', 'xcai/transform.py'),
                                'xcai.transform.CollateFeatTfm.__init__': ('transform.html#collatefeattfm.__init__', 'xcai/transform.py'),
                                'xcai.transform.CollateFeatTfm.proc': ('transform.html#collatefeattfm.proc', 'xcai/transform.py'),
                                'xcai.transform.NGPadFeatTfm': ('transform.html#ngpadfeattfm', 'xcai/transform.py'),
                                'xcai.transform.NGPadFeatTfm.__call__': ('transform.html#ngpadfeattfm.__call__', 'xcai/transform.py'),
                                'xcai.transform.NGPadFeatTfm.__init__': ('transform.html#ngpadfeattfm.__init__', 'xcai/transform.py'),
                                'xcai.transform.PadFeatTfm': ('transform.html#padfeattfm', 'xcai/transform.py'),
                                'xcai.transform.PadFeatTfm.__call__': ('transform.html#padfeattfm.__call__', 'xcai/transform.py'),
                                'xcai.transform.PadFeatTfm.__init__': ('transform.html#padfeattfm.__init__', 'xcai/transform.py'),
                                'xcai.transform.PadFeatTfm.get_feat': ('transform.html#padfeattfm.get_feat', 'xcai/transform.py'),
                                'xcai.transform.PadFeatTfm.proc': ('transform.html#padfeattfm.proc', 'xcai/transform.py'),
                                'xcai.transform.PadTfm': ('transform.html#padtfm', 'xcai/transform.py'),
                                'xcai.transform.PadTfm.__call__': ('transform.html#padtfm.__call__', 'xcai/transform.py'),
                                'xcai.transform.PadTfm.__init__': ('transform.html#padtfm.__init__', 'xcai/transform.py'),
                                'xcai.transform.PadTfm._pad_help': ('transform.html#padtfm._pad_help', 'xcai/transform.py'),
                                'xcai.transform.PadTfm._sz_help': ('transform.html#padtfm._sz_help', 'xcai/transform.py'),
                                'xcai.transform.PadTfm.get_sz': ('transform.html#padtfm.get_sz', 'xcai/transform.py'),
                                'xcai.transform.RamenPadFeatTfm': ('transform.html#ramenpadfeattfm', 'xcai/transform.py'),
                                'xcai.transform.RamenPadFeatTfm.__call__': ('transform.html#ramenpadfeattfm.__call__', 'xcai/transform.py'),
                                'xcai.transform.RamenPadFeatTfm.__init__': ('transform.html#ramenpadfeattfm.__init__', 'xcai/transform.py'),
                                'xcai.transform.RamenPadFeatTfm.extract_ptr': ( 'transform.html#ramenpadfeattfm.extract_ptr',
                                                                                'xcai/transform.py'),
                                'xcai.transform.RamenPadFeatTfm.get_feat': ('transform.html#ramenpadfeattfm.get_feat', 'xcai/transform.py'),
                                'xcai.transform.RamenPadFeatTfm.sample_feat': ( 'transform.html#ramenpadfeattfm.sample_feat',
                                                                                'xcai/transform.py'),
                                'xcai.transform.RamenPadFeatTfm.smp_feat': ('transform.html#ramenpadfeattfm.smp_feat', 'xcai/transform.py'),
                                'xcai.transform.RemoveColumnTfm': ('transform.html#removecolumntfm', 'xcai/transform.py'),
                                'xcai.transform.RemoveColumnTfm.__call__': ('transform.html#removecolumntfm.__call__', 'xcai/transform.py'),
                                'xcai.transform.RemoveColumnTfm.__init__': ('transform.html#removecolumntfm.__init__', 'xcai/transform.py'),
                                'xcai.transform.SampleFeatTfm': ('transform.html#samplefeattfm', 'xcai/transform.py'),
                                'xcai.transform.SampleFeatTfm.__call__': ('transform.html#samplefeattfm.__call__', 'xcai/transform.py'),
                                'xcai.transform.SampleFeatTfm.__init__': ('transform.html#samplefeattfm.__init__', 'xcai/transform.py'),
                                'xcai.transform.SampleFeatTfm._get_feat': ('transform.html#samplefeattfm._get_feat', 'xcai/transform.py'),
                                'xcai.transform.SampleFeatTfm.proc': ('transform.html#samplefeattfm.proc', 'xcai/transform.py'),
                                'xcai.transform.TfmPipeline': ('transform.html#tfmpipeline', 'xcai/transform.py'),
                                'xcai.transform.TfmPipeline.__call__': ('transform.html#tfmpipeline.__call__', 'xcai/transform.py'),
                                'xcai.transform.TfmPipeline.__init__': ('transform.html#tfmpipeline.__init__', 'xcai/transform.py'),
                                'xcai.transform.TriePruneInputIdsTfm': ('transform.html#triepruneinputidstfm', 'xcai/transform.py'),
                                'xcai.transform.TriePruneInputIdsTfm.__call__': ( 'transform.html#triepruneinputidstfm.__call__',
                                                                                  'xcai/transform.py'),
                                'xcai.transform.TriePruneInputIdsTfm.align': ( 'transform.html#triepruneinputidstfm.align',
                                                                               'xcai/transform.py'),
                                'xcai.transform.TriePruneInputIdsTfm.apply': ( 'transform.html#triepruneinputidstfm.apply',
                                                                               'xcai/transform.py'),
                                'xcai.transform.TriePruneInputIdsTfm.proc': ( 'transform.html#triepruneinputidstfm.proc',
                                                                              'xcai/transform.py'),
                                'xcai.transform.TriePruneInputIdsTfm.prune': ( 'transform.html#triepruneinputidstfm.prune',
                                                                               'xcai/transform.py'),
                                'xcai.transform.XCPadFeatTfm': ('transform.html#xcpadfeattfm', 'xcai/transform.py'),
                                'xcai.transform.XCPadFeatTfm.__call__': ('transform.html#xcpadfeattfm.__call__', 'xcai/transform.py'),
                                'xcai.transform.XCPadFeatTfm.__init__': ('transform.html#xcpadfeattfm.__init__', 'xcai/transform.py'),
                                'xcai.transform.XCPadFeatTfm.extract_ptr': ('transform.html#xcpadfeattfm.extract_ptr', 'xcai/transform.py'),
                                'xcai.transform.XCPadOutputTfm': ('transform.html#xcpadoutputtfm', 'xcai/transform.py'),
                                'xcai.transform.XCPadOutputTfm.__call__': ('transform.html#xcpadoutputtfm.__call__', 'xcai/transform.py'),
                                'xcai.transform.XCPadOutputTfm.__init__': ('transform.html#xcpadoutputtfm.__init__', 'xcai/transform.py'),
                                'xcai.transform.XCPadOutputTfm.extract_ptr': ( 'transform.html#xcpadoutputtfm.extract_ptr',
                                                                               'xcai/transform.py'),
                                'xcai.transform.XCSamplePadFeatTfm': ('transform.html#xcsamplepadfeattfm', 'xcai/transform.py'),
                                'xcai.transform.XCSamplePadFeatTfm.__call__': ( 'transform.html#xcsamplepadfeattfm.__call__',
                                                                                'xcai/transform.py'),
                                'xcai.transform.XCSamplePadFeatTfm.__init__': ( 'transform.html#xcsamplepadfeattfm.__init__',
                                                                                'xcai/transform.py'),
                                'xcai.transform.XCSamplePadFeatTfm.extract_ptr': ( 'transform.html#xcsamplepadfeattfm.extract_ptr',
                                                                                   'xcai/transform.py'),
                                'xcai.transform.XCSamplePadFeatTfm.sample_feat': ( 'transform.html#xcsamplepadfeattfm.sample_feat',
                                                                                   'xcai/transform.py')}}}
