# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/xcai',
                'doc_host': 'https://suchith720.github.io',
                'git_url': 'https://github.com/suchith720/xcai',
                'lib_path': 'xcai'},
  'syms': { 'xcai.analysis': { 'xcai.analysis.TextColumns': ('analysis.html#textcolumns', 'xcai/analysis.py'),
                               'xcai.analysis.TextColumns.__getitem__': ('analysis.html#textcolumns.__getitem__', 'xcai/analysis.py'),
                               'xcai.analysis.TextColumns.__init__': ('analysis.html#textcolumns.__init__', 'xcai/analysis.py'),
                               'xcai.analysis.barplot': ('analysis.html#barplot', 'xcai/analysis.py'),
                               'xcai.analysis.compare_text': ('analysis.html#compare_text', 'xcai/analysis.py'),
                               'xcai.analysis.decile_plot': ('analysis.html#decile_plot', 'xcai/analysis.py'),
                               'xcai.analysis.display_text': ('analysis.html#display_text', 'xcai/analysis.py'),
                               'xcai.analysis.equal_volume_split': ('analysis.html#equal_volume_split', 'xcai/analysis.py'),
                               'xcai.analysis.get_decile_stats': ('analysis.html#get_decile_stats', 'xcai/analysis.py'),
                               'xcai.analysis.get_output': ('analysis.html#get_output', 'xcai/analysis.py'),
                               'xcai.analysis.get_pred_dset': ('analysis.html#get_pred_dset', 'xcai/analysis.py'),
                               'xcai.analysis.get_pred_sparse': ('analysis.html#get_pred_sparse', 'xcai/analysis.py'),
                               'xcai.analysis.html': ('analysis.html#html', 'xcai/analysis.py'),
                               'xcai.analysis.load_pred_sparse': ('analysis.html#load_pred_sparse', 'xcai/analysis.py'),
                               'xcai.analysis.pointwise_eval': ('analysis.html#pointwise_eval', 'xcai/analysis.py')},
            'xcai.bandits': { 'xcai.bandits.AccMiniBatch': ('bandits.html#accminibatch', 'xcai/bandits.py'),
                              'xcai.bandits.RLLossWeights': ('bandits.html#rllossweights', 'xcai/bandits.py'),
                              'xcai.bandits.RLLossWeights.__init__': ('bandits.html#rllossweights.__init__', 'xcai/bandits.py'),
                              'xcai.bandits.RLLossWeights.clip': ('bandits.html#rllossweights.clip', 'xcai/bandits.py'),
                              'xcai.bandits.RLLossWeights.collect': ('bandits.html#rllossweights.collect', 'xcai/bandits.py'),
                              'xcai.bandits.RLLossWeights.curr_reward': ('bandits.html#rllossweights.curr_reward', 'xcai/bandits.py'),
                              'xcai.bandits.RLLossWeights.extra_repr': ('bandits.html#rllossweights.extra_repr', 'xcai/bandits.py'),
                              'xcai.bandits.RLLossWeights.reset_metrics': ('bandits.html#rllossweights.reset_metrics', 'xcai/bandits.py'),
                              'xcai.bandits.RLLossWeights.sample': ('bandits.html#rllossweights.sample', 'xcai/bandits.py'),
                              'xcai.bandits.RLLossWeights.step': ('bandits.html#rllossweights.step', 'xcai/bandits.py'),
                              'xcai.bandits.RLLossWeights.zero_grad': ('bandits.html#rllossweights.zero_grad', 'xcai/bandits.py'),
                              'xcai.bandits.RLLossWeightsCumuluative': ('bandits.html#rllossweightscumuluative', 'xcai/bandits.py'),
                              'xcai.bandits.RLLossWeightsCumuluative.__init__': ( 'bandits.html#rllossweightscumuluative.__init__',
                                                                                  'xcai/bandits.py'),
                              'xcai.bandits.RLLossWeightsCumuluative.reset_metrics': ( 'bandits.html#rllossweightscumuluative.reset_metrics',
                                                                                       'xcai/bandits.py'),
                              'xcai.bandits.RLLossWeightsCumuluative.step': ( 'bandits.html#rllossweightscumuluative.step',
                                                                              'xcai/bandits.py'),
                              'xcai.bandits.get_sparse_matrix': ('bandits.html#get_sparse_matrix', 'xcai/bandits.py')},
            'xcai.basics': {},
            'xcai.block': { 'xcai.block.SXCBlock': ('block.html#sxcblock', 'xcai/block.py'),
                            'xcai.block.SXCBlock.from_cfg': ('block.html#sxcblock.from_cfg', 'xcai/block.py'),
                            'xcai.block.XCBlock': ('block.html#xcblock', 'xcai/block.py'),
                            'xcai.block.XCBlock.from_cfg': ('block.html#xcblock.from_cfg', 'xcai/block.py')},
            'xcai.clustering.cluster': { 'xcai.clustering.cluster.BalancedClusters': ( 'clustering.cluster.html#balancedclusters',
                                                                                       'xcai/clustering/cluster.py'),
                                         'xcai.clustering.cluster.BalancedClusters.proc': ( 'clustering.cluster.html#balancedclusters.proc',
                                                                                            'xcai/clustering/cluster.py'),
                                         'xcai.clustering.cluster.ClusterGroupedSampler': ( 'clustering.cluster.html#clustergroupedsampler',
                                                                                            'xcai/clustering/cluster.py'),
                                         'xcai.clustering.cluster.ClusterGroupedSampler.__init__': ( 'clustering.cluster.html#clustergroupedsampler.__init__',
                                                                                                     'xcai/clustering/cluster.py'),
                                         'xcai.clustering.cluster.ClusterGroupedSampler.__iter__': ( 'clustering.cluster.html#clustergroupedsampler.__iter__',
                                                                                                     'xcai/clustering/cluster.py'),
                                         'xcai.clustering.cluster.ClusterGroupedSampler.__len__': ( 'clustering.cluster.html#clustergroupedsampler.__len__',
                                                                                                    'xcai/clustering/cluster.py'),
                                         'xcai.clustering.cluster.ClusterGroupedSampler.set_cluster': ( 'clustering.cluster.html#clustergroupedsampler.set_cluster',
                                                                                                        'xcai/clustering/cluster.py'),
                                         'xcai.clustering.cluster._normalize': ( 'clustering.cluster.html#_normalize',
                                                                                 'xcai/clustering/cluster.py'),
                                         'xcai.clustering.cluster.b_kmeans_dense': ( 'clustering.cluster.html#b_kmeans_dense',
                                                                                     'xcai/clustering/cluster.py'),
                                         'xcai.clustering.cluster.b_kmeans_dense_gpu': ( 'clustering.cluster.html#b_kmeans_dense_gpu',
                                                                                         'xcai/clustering/cluster.py'),
                                         'xcai.clustering.cluster.b_kmeans_dense_multi': ( 'clustering.cluster.html#b_kmeans_dense_multi',
                                                                                           'xcai/clustering/cluster.py'),
                                         'xcai.clustering.cluster.b_kmeans_sparse': ( 'clustering.cluster.html#b_kmeans_sparse',
                                                                                      'xcai/clustering/cluster.py'),
                                         'xcai.clustering.cluster.cluster': ( 'clustering.cluster.html#cluster',
                                                                              'xcai/clustering/cluster.py'),
                                         'xcai.clustering.cluster.get_functions': ( 'clustering.cluster.html#get_functions',
                                                                                    'xcai/clustering/cluster.py'),
                                         'xcai.clustering.cluster.partial_cluster': ( 'clustering.cluster.html#partial_cluster',
                                                                                      'xcai/clustering/cluster.py')},
            'xcai.clustering.fast_cluster': {},
            'xcai.config': { 'xcai.config.AMAZON131': ('config.html#amazon131', 'xcai/config.py'),
                             'xcai.config.AMAZONTITLES': ('config.html#amazontitles', 'xcai/config.py'),
                             'xcai.config.AMAZONTITLES131': ('config.html#amazontitles131', 'xcai/config.py'),
                             'xcai.config.ORCAS': ('config.html#orcas', 'xcai/config.py'),
                             'xcai.config.WIKIPEDIA': ('config.html#wikipedia', 'xcai/config.py'),
                             'xcai.config.WIKISEEALSO': ('config.html#wikiseealso', 'xcai/config.py'),
                             'xcai.config.WIKISEEALSOTITLES': ('config.html#wikiseealsotitles', 'xcai/config.py'),
                             'xcai.config.WIKITITLES': ('config.html#wikititles', 'xcai/config.py')},
            'xcai.core': { 'xcai.core.Filterer': ('core.html#filterer', 'xcai/core.py'),
                           'xcai.core.Filterer.apply': ('core.html#filterer.apply', 'xcai/core.py'),
                           'xcai.core.Filterer.generate': ('core.html#filterer.generate', 'xcai/core.py'),
                           'xcai.core.Filterer.load_filter': ('core.html#filterer.load_filter', 'xcai/core.py'),
                           'xcai.core.Filterer.prune': ('core.html#filterer.prune', 'xcai/core.py'),
                           'xcai.core.Filterer.sample': ('core.html#filterer.sample', 'xcai/core.py'),
                           'xcai.core.Info': ('core.html#info', 'xcai/core.py'),
                           'xcai.core.Info.__init__': ('core.html#info.__init__', 'xcai/core.py'),
                           'xcai.core.Info.__len__': ('core.html#info.__len__', 'xcai/core.py'),
                           'xcai.core.Info._read_info': ('core.html#info._read_info', 'xcai/core.py'),
                           'xcai.core.Info._read_text': ('core.html#info._read_text', 'xcai/core.py'),
                           'xcai.core.Info.from_txt': ('core.html#info.from_txt', 'xcai/core.py'),
                           'xcai.core.Info.read_info': ('core.html#info.read_info', 'xcai/core.py'),
                           'xcai.core.Info.show_data': ('core.html#info.show_data', 'xcai/core.py'),
                           'xcai.core.Info.tokenize': ('core.html#info.tokenize', 'xcai/core.py'),
                           'xcai.core.ScoreFusion': ('core.html#scorefusion', 'xcai/core.py'),
                           'xcai.core.ScoreFusion.__init__': ('core.html#scorefusion.__init__', 'xcai/core.py'),
                           'xcai.core.ScoreFusion.fit': ('core.html#scorefusion.fit', 'xcai/core.py'),
                           'xcai.core.ScoreFusion.get_inp': ('core.html#scorefusion.get_inp', 'xcai/core.py'),
                           'xcai.core.ScoreFusion.predict': ('core.html#scorefusion.predict', 'xcai/core.py'),
                           'xcai.core.ScoreFusion.prepare_inputs': ('core.html#scorefusion.prepare_inputs', 'xcai/core.py'),
                           'xcai.core.ScoreFusion.sample': ('core.html#scorefusion.sample', 'xcai/core.py'),
                           'xcai.core._store_attr': ('core.html#_store_attr', 'xcai/core.py'),
                           'xcai.core.compute_inv_doc_freq': ('core.html#compute_inv_doc_freq', 'xcai/core.py'),
                           'xcai.core.display_metric': ('core.html#display_metric', 'xcai/core.py'),
                           'xcai.core.get_attr': ('core.html#get_attr', 'xcai/core.py'),
                           'xcai.core.get_best_model': ('core.html#get_best_model', 'xcai/core.py'),
                           'xcai.core.get_output': ('core.html#get_output', 'xcai/core.py'),
                           'xcai.core.get_output_sparse': ('core.html#get_output_sparse', 'xcai/core.py'),
                           'xcai.core.get_tensor_statistics': ('core.html#get_tensor_statistics', 'xcai/core.py'),
                           'xcai.core.get_tok_idf': ('core.html#get_tok_idf', 'xcai/core.py'),
                           'xcai.core.get_tok_sparse': ('core.html#get_tok_sparse', 'xcai/core.py'),
                           'xcai.core.load_config': ('core.html#load_config', 'xcai/core.py'),
                           'xcai.core.prepare_batch': ('core.html#prepare_batch', 'xcai/core.py'),
                           'xcai.core.random_topk': ('core.html#random_topk', 'xcai/core.py'),
                           'xcai.core.retain_randk': ('core.html#retain_randk', 'xcai/core.py'),
                           'xcai.core.robustness_analysis': ('core.html#robustness_analysis', 'xcai/core.py'),
                           'xcai.core.show_data': ('core.html#show_data', 'xcai/core.py'),
                           'xcai.core.sorted_metric': ('core.html#sorted_metric', 'xcai/core.py'),
                           'xcai.core.store_attr': ('core.html#store_attr', 'xcai/core.py'),
                           'xcai.core.total_recall': ('core.html#total_recall', 'xcai/core.py')},
            'xcai.data': { 'xcai.data.BaseXCDataBlock': ('data.html#basexcdatablock', 'xcai/data.py'),
                           'xcai.data.BaseXCDataBlock.__init__': ('data.html#basexcdatablock.__init__', 'xcai/data.py'),
                           'xcai.data.BaseXCDataBlock.__len__': ('data.html#basexcdatablock.__len__', 'xcai/data.py'),
                           'xcai.data.BaseXCDataBlock._get_dl_kwargs': ('data.html#basexcdatablock._get_dl_kwargs', 'xcai/data.py'),
                           'xcai.data.BaseXCDataBlock._getitems': ('data.html#basexcdatablock._getitems', 'xcai/data.py'),
                           'xcai.data.BaseXCDataBlock.bsz': ('data.html#basexcdatablock.bsz', 'xcai/data.py'),
                           'xcai.data.BaseXCDataBlock.data_lbl_filterer': ('data.html#basexcdatablock.data_lbl_filterer', 'xcai/data.py'),
                           'xcai.data.BaseXCDataBlock.filterer': ('data.html#basexcdatablock.filterer', 'xcai/data.py'),
                           'xcai.data.BaseXCDataBlock.from_file': ('data.html#basexcdatablock.from_file', 'xcai/data.py'),
                           'xcai.data.BaseXCDataBlock.one_batch': ('data.html#basexcdatablock.one_batch', 'xcai/data.py'),
                           'xcai.data.BaseXCDataBlock.sample': ('data.html#basexcdatablock.sample', 'xcai/data.py'),
                           'xcai.data.BaseXCDataBlock.splitter': ('data.html#basexcdatablock.splitter', 'xcai/data.py'),
                           'xcai.data.BaseXCDataset': ('data.html#basexcdataset', 'xcai/data.py'),
                           'xcai.data.BaseXCDataset.__init__': ('data.html#basexcdataset.__init__', 'xcai/data.py'),
                           'xcai.data.BaseXCDataset.__len__': ('data.html#basexcdataset.__len__', 'xcai/data.py'),
                           'xcai.data.BaseXCDataset._verify_info': ('data.html#basexcdataset._verify_info', 'xcai/data.py'),
                           'xcai.data.BaseXCDataset.extract_items': ('data.html#basexcdataset.extract_items', 'xcai/data.py'),
                           'xcai.data.BaseXCDataset.get_info': ('data.html#basexcdataset.get_info', 'xcai/data.py'),
                           'xcai.data.BaseXCDataset.prune_data_lbl': ('data.html#basexcdataset.prune_data_lbl', 'xcai/data.py'),
                           'xcai.data.BaseXCDataset.sample': ('data.html#basexcdataset.sample', 'xcai/data.py'),
                           'xcai.data.BaseXCDataset.show_data': ('data.html#basexcdataset.show_data', 'xcai/data.py'),
                           'xcai.data.BaseXCDataset.splitter': ('data.html#basexcdataset.splitter', 'xcai/data.py'),
                           'xcai.data.MainXCData': ('data.html#mainxcdata', 'xcai/data.py'),
                           'xcai.data.MainXCData.from_file': ('data.html#mainxcdata.from_file', 'xcai/data.py'),
                           'xcai.data.MainXCDataset': ('data.html#mainxcdataset', 'xcai/data.py'),
                           'xcai.data.MainXCDataset.__getitem__': ('data.html#mainxcdataset.__getitem__', 'xcai/data.py'),
                           'xcai.data.MainXCDataset.__init__': ('data.html#mainxcdataset.__init__', 'xcai/data.py'),
                           'xcai.data.MainXCDataset._getitems': ('data.html#mainxcdataset._getitems', 'xcai/data.py'),
                           'xcai.data.MainXCDataset._store_indices': ('data.html#mainxcdataset._store_indices', 'xcai/data.py'),
                           'xcai.data.MainXCDataset._verify_inputs': ('data.html#mainxcdataset._verify_inputs', 'xcai/data.py'),
                           'xcai.data.MainXCDataset.from_file': ('data.html#mainxcdataset.from_file', 'xcai/data.py'),
                           'xcai.data.MetaXCData': ('data.html#metaxcdata', 'xcai/data.py'),
                           'xcai.data.MetaXCData.from_file': ('data.html#metaxcdata.from_file', 'xcai/data.py'),
                           'xcai.data.MetaXCDataset': ('data.html#metaxcdataset', 'xcai/data.py'),
                           'xcai.data.MetaXCDataset.__init__': ('data.html#metaxcdataset.__init__', 'xcai/data.py'),
                           'xcai.data.MetaXCDataset._getitems': ('data.html#metaxcdataset._getitems', 'xcai/data.py'),
                           'xcai.data.MetaXCDataset._sample_meta_items': ('data.html#metaxcdataset._sample_meta_items', 'xcai/data.py'),
                           'xcai.data.MetaXCDataset._store_indices': ('data.html#metaxcdataset._store_indices', 'xcai/data.py'),
                           'xcai.data.MetaXCDataset._verify_inputs': ('data.html#metaxcdataset._verify_inputs', 'xcai/data.py'),
                           'xcai.data.MetaXCDataset.from_file': ('data.html#metaxcdataset.from_file', 'xcai/data.py'),
                           'xcai.data.MetaXCDataset.get_data_meta': ('data.html#metaxcdataset.get_data_meta', 'xcai/data.py'),
                           'xcai.data.MetaXCDataset.get_lbl_meta': ('data.html#metaxcdataset.get_lbl_meta', 'xcai/data.py'),
                           'xcai.data.MetaXCDataset.prune_data_meta': ('data.html#metaxcdataset.prune_data_meta', 'xcai/data.py'),
                           'xcai.data.MetaXCDataset.prune_lbl_meta': ('data.html#metaxcdataset.prune_lbl_meta', 'xcai/data.py'),
                           'xcai.data.MetaXCDataset.shape': ('data.html#metaxcdataset.shape', 'xcai/data.py'),
                           'xcai.data.MetaXCDataset.show_data': ('data.html#metaxcdataset.show_data', 'xcai/data.py'),
                           'xcai.data.MetaXCDataset.update_meta_matrix': ('data.html#metaxcdataset.update_meta_matrix', 'xcai/data.py'),
                           'xcai.data.MetaXCDatasets': ('data.html#metaxcdatasets', 'xcai/data.py'),
                           'xcai.data.MetaXCDatasets.__delitem__': ('data.html#metaxcdatasets.__delitem__', 'xcai/data.py'),
                           'xcai.data.MetaXCDatasets.__init__': ('data.html#metaxcdatasets.__init__', 'xcai/data.py'),
                           'xcai.data.MetaXCDatasets.__setitem__': ('data.html#metaxcdatasets.__setitem__', 'xcai/data.py'),
                           'xcai.data.XCCollator': ('data.html#xccollator', 'xcai/data.py'),
                           'xcai.data.XCCollator.__call__': ('data.html#xccollator.__call__', 'xcai/data.py'),
                           'xcai.data.XCCollator.__init__': ('data.html#xccollator.__init__', 'xcai/data.py'),
                           'xcai.data.XCDataBlock': ('data.html#xcdatablock', 'xcai/data.py'),
                           'xcai.data.XCDataBlock.__init__': ('data.html#xcdatablock.__init__', 'xcai/data.py'),
                           'xcai.data.XCDataBlock.collator': ('data.html#xcdatablock.collator', 'xcai/data.py'),
                           'xcai.data.XCDataBlock.from_cfg': ('data.html#xcdatablock.from_cfg', 'xcai/data.py'),
                           'xcai.data.XCDataBlock.inference_dset': ('data.html#xcdatablock.inference_dset', 'xcai/data.py'),
                           'xcai.data.XCDataBlock.lbl_dset': ('data.html#xcdatablock.lbl_dset', 'xcai/data.py'),
                           'xcai.data.XCDataBlock.lbl_info': ('data.html#xcdatablock.lbl_info', 'xcai/data.py'),
                           'xcai.data.XCDataBlock.linker_dset': ('data.html#xcdatablock.linker_dset', 'xcai/data.py'),
                           'xcai.data.XCDataBlock.load_cfg': ('data.html#xcdatablock.load_cfg', 'xcai/data.py'),
                           'xcai.data.XCDataBlock.n_lbl': ('data.html#xcdatablock.n_lbl', 'xcai/data.py'),
                           'xcai.data.XCDataBlock.sample_info': ('data.html#xcdatablock.sample_info', 'xcai/data.py'),
                           'xcai.data.XCDataset': ('data.html#xcdataset', 'xcai/data.py'),
                           'xcai.data.XCDataset.__getitem__': ('data.html#xcdataset.__getitem__', 'xcai/data.py'),
                           'xcai.data.XCDataset.__init__': ('data.html#xcdataset.__init__', 'xcai/data.py'),
                           'xcai.data.XCDataset._getitems': ('data.html#xcdataset._getitems', 'xcai/data.py'),
                           'xcai.data.XCDataset._mix_meta_matrix': ('data.html#xcdataset._mix_meta_matrix', 'xcai/data.py'),
                           'xcai.data.XCDataset._remove_data': ('data.html#xcdataset._remove_data', 'xcai/data.py'),
                           'xcai.data.XCDataset._retain_randk': ('data.html#xcdataset._retain_randk', 'xcai/data.py'),
                           'xcai.data.XCDataset._verify_inputs': ('data.html#xcdataset._verify_inputs', 'xcai/data.py'),
                           'xcai.data.XCDataset.data_dset': ('data.html#xcdataset.data_dset', 'xcai/data.py'),
                           'xcai.data.XCDataset.data_info': ('data.html#xcdataset.data_info', 'xcai/data.py'),
                           'xcai.data.XCDataset.from_file': ('data.html#xcdataset.from_file', 'xcai/data.py'),
                           'xcai.data.XCDataset.get_meta_args': ('data.html#xcdataset.get_meta_args', 'xcai/data.py'),
                           'xcai.data.XCDataset.lbl_dset': ('data.html#xcdataset.lbl_dset', 'xcai/data.py'),
                           'xcai.data.XCDataset.lbl_info': ('data.html#xcdataset.lbl_info', 'xcai/data.py'),
                           'xcai.data.XCDataset.mix_meta_dataset': ('data.html#xcdataset.mix_meta_dataset', 'xcai/data.py'),
                           'xcai.data.XCDataset.one_batch': ('data.html#xcdataset.one_batch', 'xcai/data.py'),
                           'xcai.data._read_sparse_file': ('data.html#_read_sparse_file', 'xcai/data.py')},
            'xcai.data_sampler': { 'xcai.data_sampler.OAKSamplerFeatTfm': ('data_sampler.html#oaksamplerfeattfm', 'xcai/data_sampler.py'),
                                   'xcai.data_sampler.OAKSamplerFeatTfm.__call__': ( 'data_sampler.html#oaksamplerfeattfm.__call__',
                                                                                     'xcai/data_sampler.py'),
                                   'xcai.data_sampler.OAKSamplerFeatTfm.__init__': ( 'data_sampler.html#oaksamplerfeattfm.__init__',
                                                                                     'xcai/data_sampler.py'),
                                   'xcai.data_sampler.OAKSamplerFeatTfm.collate_data': ( 'data_sampler.html#oaksamplerfeattfm.collate_data',
                                                                                         'xcai/data_sampler.py'),
                                   'xcai.data_sampler.OAKSamplerFeatTfm.collate_labels': ( 'data_sampler.html#oaksamplerfeattfm.collate_labels',
                                                                                           'xcai/data_sampler.py'),
                                   'xcai.data_sampler.OAKSamplerFeatTfm.collate_metadata': ( 'data_sampler.html#oaksamplerfeattfm.collate_metadata',
                                                                                             'xcai/data_sampler.py'),
                                   'xcai.data_sampler.XCSamplerFeatTfm': ('data_sampler.html#xcsamplerfeattfm', 'xcai/data_sampler.py'),
                                   'xcai.data_sampler.XCSamplerFeatTfm.__call__': ( 'data_sampler.html#xcsamplerfeattfm.__call__',
                                                                                    'xcai/data_sampler.py'),
                                   'xcai.data_sampler.XCSamplerFeatTfm.__init__': ( 'data_sampler.html#xcsamplerfeattfm.__init__',
                                                                                    'xcai/data_sampler.py'),
                                   'xcai.data_sampler.XCSamplerFeatTfm.collate_feature_idx': ( 'data_sampler.html#xcsamplerfeattfm.collate_feature_idx',
                                                                                               'xcai/data_sampler.py'),
                                   'xcai.data_sampler.XCSamplerFeatTfm.collate_features': ( 'data_sampler.html#xcsamplerfeattfm.collate_features',
                                                                                            'xcai/data_sampler.py'),
                                   'xcai.data_sampler.XCSamplerFeatTfm.get_features': ( 'data_sampler.html#xcsamplerfeattfm.get_features',
                                                                                        'xcai/data_sampler.py'),
                                   'xcai.data_sampler.XCSamplerFeatTfm.get_rnd_idx_from_ptr': ( 'data_sampler.html#xcsamplerfeattfm.get_rnd_idx_from_ptr',
                                                                                                'xcai/data_sampler.py'),
                                   'xcai.data_sampler.XCSamplerFeatTfm.process_features': ( 'data_sampler.html#xcsamplerfeattfm.process_features',
                                                                                            'xcai/data_sampler.py'),
                                   'xcai.data_sampler.XCSamplerFeatTfm.remove_unwanted_ptr': ( 'data_sampler.html#xcsamplerfeattfm.remove_unwanted_ptr',
                                                                                               'xcai/data_sampler.py'),
                                   'xcai.data_sampler.XCSamplerFeatTfm.rename_idx_ptr': ( 'data_sampler.html#xcsamplerfeattfm.rename_idx_ptr',
                                                                                          'xcai/data_sampler.py'),
                                   'xcai.data_sampler.XCSamplerFeatTfm.rename_keys': ( 'data_sampler.html#xcsamplerfeattfm.rename_keys',
                                                                                       'xcai/data_sampler.py'),
                                   'xcai.data_sampler.XCSamplerFeatTfm.sample_base_feature': ( 'data_sampler.html#xcsamplerfeattfm.sample_base_feature',
                                                                                               'xcai/data_sampler.py'),
                                   'xcai.data_sampler.XCSamplerFeatTfm.sample_batch': ( 'data_sampler.html#xcsamplerfeattfm.sample_batch',
                                                                                        'xcai/data_sampler.py'),
                                   'xcai.data_sampler.XCSamplerFeatTfm.sample_dep_features': ( 'data_sampler.html#xcsamplerfeattfm.sample_dep_features',
                                                                                               'xcai/data_sampler.py'),
                                   'xcai.data_sampler.XCSamplerFeatTfm.sample_feature': ( 'data_sampler.html#xcsamplerfeattfm.sample_feature',
                                                                                          'xcai/data_sampler.py'),
                                   'xcai.data_sampler.XCSamplerFeatTfm.sample_sbatch': ( 'data_sampler.html#xcsamplerfeattfm.sample_sbatch',
                                                                                         'xcai/data_sampler.py')},
            'xcai.generation.generate': { 'xcai.generation.generate.Hypothesis': ( 'generation.generate.html#hypothesis',
                                                                                   'xcai/generation/generate.py'),
                                          'xcai.generation.generate.Hypothesis.__init__': ( 'generation.generate.html#hypothesis.__init__',
                                                                                            'xcai/generation/generate.py'),
                                          'xcai.generation.generate.Hypothesis.__len__': ( 'generation.generate.html#hypothesis.__len__',
                                                                                           'xcai/generation/generate.py'),
                                          'xcai.generation.generate.Hypothesis.add': ( 'generation.generate.html#hypothesis.add',
                                                                                       'xcai/generation/generate.py'),
                                          'xcai.generation.generate.Hypothesis.is_done': ( 'generation.generate.html#hypothesis.is_done',
                                                                                           'xcai/generation/generate.py'),
                                          'xcai.generation.generate.TrieBeam': ( 'generation.generate.html#triebeam',
                                                                                 'xcai/generation/generate.py'),
                                          'xcai.generation.generate.TrieBeam.__init__': ( 'generation.generate.html#triebeam.__init__',
                                                                                          'xcai/generation/generate.py'),
                                          'xcai.generation.generate.TrieBeam.finalize': ( 'generation.generate.html#triebeam.finalize',
                                                                                          'xcai/generation/generate.py'),
                                          'xcai.generation.generate.TrieBeam.next': ( 'generation.generate.html#triebeam.next',
                                                                                      'xcai/generation/generate.py'),
                                          'xcai.generation.generate.TrieBeam.proc': ( 'generation.generate.html#triebeam.proc',
                                                                                      'xcai/generation/generate.py'),
                                          'xcai.generation.generate.TrieBeam.topk': ( 'generation.generate.html#triebeam.topk',
                                                                                      'xcai/generation/generate.py'),
                                          'xcai.generation.generate.TrieBeam.valid': ( 'generation.generate.html#triebeam.valid',
                                                                                       'xcai/generation/generate.py'),
                                          'xcai.generation.generate.TrieBeamSearch': ( 'generation.generate.html#triebeamsearch',
                                                                                       'xcai/generation/generate.py'),
                                          'xcai.generation.generate.TrieBeamSearch.__init__': ( 'generation.generate.html#triebeamsearch.__init__',
                                                                                                'xcai/generation/generate.py'),
                                          'xcai.generation.generate.TrieBeamSearch.proc': ( 'generation.generate.html#triebeamsearch.proc',
                                                                                            'xcai/generation/generate.py'),
                                          'xcai.generation.generate.TriePtr': ( 'generation.generate.html#trieptr',
                                                                                'xcai/generation/generate.py'),
                                          'xcai.generation.generate.TriePtr.__init__': ( 'generation.generate.html#trieptr.__init__',
                                                                                         'xcai/generation/generate.py'),
                                          'xcai.generation.generate.TriePtr.copy': ( 'generation.generate.html#trieptr.copy',
                                                                                     'xcai/generation/generate.py'),
                                          'xcai.generation.generate.TriePtr.is_end': ( 'generation.generate.html#trieptr.is_end',
                                                                                       'xcai/generation/generate.py'),
                                          'xcai.generation.generate.TriePtr.next': ( 'generation.generate.html#trieptr.next',
                                                                                     'xcai/generation/generate.py'),
                                          'xcai.generation.generate.TriePtr.suffixes': ( 'generation.generate.html#trieptr.suffixes',
                                                                                         'xcai/generation/generate.py'),
                                          'xcai.generation.generate.TriePtr.tokens': ( 'generation.generate.html#trieptr.tokens',
                                                                                       'xcai/generation/generate.py'),
                                          'xcai.generation.generate.TriePtr.value': ( 'generation.generate.html#trieptr.value',
                                                                                      'xcai/generation/generate.py'),
                                          'xcai.generation.generate.pad_tensor': ( 'generation.generate.html#pad_tensor',
                                                                                   'xcai/generation/generate.py')},
            'xcai.generation.trie': { 'xcai.generation.trie.Trie': ('generation.trie.html#trie', 'xcai/generation/trie.py'),
                                      'xcai.generation.trie.Trie.__contains__': ( 'generation.trie.html#trie.__contains__',
                                                                                  'xcai/generation/trie.py'),
                                      'xcai.generation.trie.Trie.__init__': ( 'generation.trie.html#trie.__init__',
                                                                              'xcai/generation/trie.py'),
                                      'xcai.generation.trie.Trie._add_info': ( 'generation.trie.html#trie._add_info',
                                                                               'xcai/generation/trie.py'),
                                      'xcai.generation.trie.Trie._prune': ('generation.trie.html#trie._prune', 'xcai/generation/trie.py'),
                                      'xcai.generation.trie.Trie._search': ('generation.trie.html#trie._search', 'xcai/generation/trie.py'),
                                      'xcai.generation.trie.Trie.bos_tok': ('generation.trie.html#trie.bos_tok', 'xcai/generation/trie.py'),
                                      'xcai.generation.trie.Trie.from_list': ( 'generation.trie.html#trie.from_list',
                                                                               'xcai/generation/trie.py'),
                                      'xcai.generation.trie.Trie.insert': ('generation.trie.html#trie.insert', 'xcai/generation/trie.py'),
                                      'xcai.generation.trie.Trie.prefix': ('generation.trie.html#trie.prefix', 'xcai/generation/trie.py'),
                                      'xcai.generation.trie.Trie.prune': ('generation.trie.html#trie.prune', 'xcai/generation/trie.py'),
                                      'xcai.generation.trie.Trie.suffixes': ( 'generation.trie.html#trie.suffixes',
                                                                              'xcai/generation/trie.py'),
                                      'xcai.generation.trie.Trie.update': ('generation.trie.html#trie.update', 'xcai/generation/trie.py'),
                                      'xcai.generation.trie.TrieNode': ('generation.trie.html#trienode', 'xcai/generation/trie.py'),
                                      'xcai.generation.trie.TrieNode.__init__': ( 'generation.trie.html#trienode.__init__',
                                                                                  'xcai/generation/trie.py'),
                                      'xcai.generation.trie.TrieNode.data': ( 'generation.trie.html#trienode.data',
                                                                              'xcai/generation/trie.py'),
                                      'xcai.generation.trie.TrieOutput': ('generation.trie.html#trieoutput', 'xcai/generation/trie.py'),
                                      'xcai.generation.trie.XCTrie': ('generation.trie.html#xctrie', 'xcai/generation/trie.py'),
                                      'xcai.generation.trie.XCTrie.from_block': ( 'generation.trie.html#xctrie.from_block',
                                                                                  'xcai/generation/trie.py')},
            'xcai.graph.random_walk': { 'xcai.graph.random_walk.Prune': ('graph.random_walk.html#prune', 'xcai/graph/random_walk.py'),
                                        'xcai.graph.random_walk.PrunedWalk': ( 'graph.random_walk.html#prunedwalk',
                                                                               'xcai/graph/random_walk.py'),
                                        'xcai.graph.random_walk.PrunedWalk.__init__': ( 'graph.random_walk.html#prunedwalk.__init__',
                                                                                        'xcai/graph/random_walk.py'),
                                        'xcai.graph.random_walk.PrunedWalk.simulate': ( 'graph.random_walk.html#prunedwalk.simulate',
                                                                                        'xcai/graph/random_walk.py'),
                                        'xcai.graph.random_walk.WalkItOff': ( 'graph.random_walk.html#walkitoff',
                                                                              'xcai/graph/random_walk.py'),
                                        'xcai.graph.random_walk._random_walk': ( 'graph.random_walk.html#_random_walk',
                                                                                 'xcai/graph/random_walk.py'),
                                        'xcai.graph.random_walk.clean_graphs': ( 'graph.random_walk.html#clean_graphs',
                                                                                 'xcai/graph/random_walk.py'),
                                        'xcai.graph.random_walk.csr_stats': ( 'graph.random_walk.html#csr_stats',
                                                                              'xcai/graph/random_walk.py'),
                                        'xcai.graph.random_walk.normalize_graph': ( 'graph.random_walk.html#normalize_graph',
                                                                                    'xcai/graph/random_walk.py'),
                                        'xcai.graph.random_walk.print_stats': ( 'graph.random_walk.html#print_stats',
                                                                                'xcai/graph/random_walk.py'),
                                        'xcai.graph.random_walk.trim_rows': ( 'graph.random_walk.html#trim_rows',
                                                                              'xcai/graph/random_walk.py')},
            'xcai.learner': { 'xcai.learner.ParallelMode': ('learner.html#parallelmode', 'xcai/learner.py'),
                              'xcai.learner.RemoveColumnsCollator.__call__': ( 'learner.html#removecolumnscollator.__call__',
                                                                               'xcai/learner.py'),
                              'xcai.learner.XCDataParallel': ('learner.html#xcdataparallel', 'xcai/learner.py'),
                              'xcai.learner.XCDataParallel.__init__': ('learner.html#xcdataparallel.__init__', 'xcai/learner.py'),
                              'xcai.learner.XCDataParallel._extract_feat': ('learner.html#xcdataparallel._extract_feat', 'xcai/learner.py'),
                              'xcai.learner.XCDataParallel._get_feat_name': ( 'learner.html#xcdataparallel._get_feat_name',
                                                                              'xcai/learner.py'),
                              'xcai.learner.XCDataParallel.scatter': ('learner.html#xcdataparallel.scatter', 'xcai/learner.py'),
                              'xcai.learner.XCEvalLoopOutput': ('learner.html#xcevalloopoutput', 'xcai/learner.py'),
                              'xcai.learner.XCLearner': ('learner.html#xclearner', 'xcai/learner.py'),
                              'xcai.learner.XCLearner.__init__': ('learner.html#xclearner.__init__', 'xcai/learner.py'),
                              'xcai.learner.XCLearner._build_aug_index': ('learner.html#xclearner._build_aug_index', 'xcai/learner.py'),
                              'xcai.learner.XCLearner._build_lbl_index': ('learner.html#xclearner._build_lbl_index', 'xcai/learner.py'),
                              'xcai.learner.XCLearner._gather_all_output': ('learner.html#xclearner._gather_all_output', 'xcai/learner.py'),
                              'xcai.learner.XCLearner._gather_host_output': ( 'learner.html#xclearner._gather_host_output',
                                                                              'xcai/learner.py'),
                              'xcai.learner.XCLearner._get_data_representation': ( 'learner.html#xclearner._get_data_representation',
                                                                                   'xcai/learner.py'),
                              'xcai.learner.XCLearner._get_dataset': ('learner.html#xclearner._get_dataset', 'xcai/learner.py'),
                              'xcai.learner.XCLearner._get_lbl_representation': ( 'learner.html#xclearner._get_lbl_representation',
                                                                                  'xcai/learner.py'),
                              'xcai.learner.XCLearner._get_min_cluster_sz': ( 'learner.html#xclearner._get_min_cluster_sz',
                                                                              'xcai/learner.py'),
                              'xcai.learner.XCLearner._get_train_data_cluster': ( 'learner.html#xclearner._get_train_data_cluster',
                                                                                  'xcai/learner.py'),
                              'xcai.learner.XCLearner._get_train_sampler': ('learner.html#xclearner._get_train_sampler', 'xcai/learner.py'),
                              'xcai.learner.XCLearner._inner_training_loop': ( 'learner.html#xclearner._inner_training_loop',
                                                                               'xcai/learner.py'),
                              'xcai.learner.XCLearner._perform_augmentation': ( 'learner.html#xclearner._perform_augmentation',
                                                                                'xcai/learner.py'),
                              'xcai.learner.XCLearner._perform_generation': ( 'learner.html#xclearner._perform_generation',
                                                                              'xcai/learner.py'),
                              'xcai.learner.XCLearner._perform_representation': ( 'learner.html#xclearner._perform_representation',
                                                                                  'xcai/learner.py'),
                              'xcai.learner.XCLearner._validate_group_by_cluster': ( 'learner.html#xclearner._validate_group_by_cluster',
                                                                                     'xcai/learner.py'),
                              'xcai.learner.XCLearner._wrap_model': ('learner.html#xclearner._wrap_model', 'xcai/learner.py'),
                              'xcai.learner.XCLearner.augmentation_output': ( 'learner.html#xclearner.augmentation_output',
                                                                              'xcai/learner.py'),
                              'xcai.learner.XCLearner.concatenate_output': ('learner.html#xclearner.concatenate_output', 'xcai/learner.py'),
                              'xcai.learner.XCLearner.evaluate': ('learner.html#xclearner.evaluate', 'xcai/learner.py'),
                              'xcai.learner.XCLearner.evaluation_loop': ('learner.html#xclearner.evaluation_loop', 'xcai/learner.py'),
                              'xcai.learner.XCLearner.generation_output': ('learner.html#xclearner.generation_output', 'xcai/learner.py'),
                              'xcai.learner.XCLearner.get_aug_data_meta': ('learner.html#xclearner.get_aug_data_meta', 'xcai/learner.py'),
                              'xcai.learner.XCLearner.get_augmentation_metadata': ( 'learner.html#xclearner.get_augmentation_metadata',
                                                                                    'xcai/learner.py'),
                              'xcai.learner.XCLearner.get_data_and_lbl_representation': ( 'learner.html#xclearner.get_data_and_lbl_representation',
                                                                                          'xcai/learner.py'),
                              'xcai.learner.XCLearner.get_label_representation': ( 'learner.html#xclearner.get_label_representation',
                                                                                   'xcai/learner.py'),
                              'xcai.learner.XCLearner.get_meta_representation': ( 'learner.html#xclearner.get_meta_representation',
                                                                                  'xcai/learner.py'),
                              'xcai.learner.XCLearner.get_representation': ('learner.html#xclearner.get_representation', 'xcai/learner.py'),
                              'xcai.learner.XCLearner.get_train_dataloader': ( 'learner.html#xclearner.get_train_dataloader',
                                                                               'xcai/learner.py'),
                              'xcai.learner.XCLearner.mix_metadata': ('learner.html#xclearner.mix_metadata', 'xcai/learner.py'),
                              'xcai.learner.XCLearner.output_mask': ('learner.html#xclearner.output_mask', 'xcai/learner.py'),
                              'xcai.learner.XCLearner.predict': ('learner.html#xclearner.predict', 'xcai/learner.py'),
                              'xcai.learner.XCLearner.prediction_step': ('learner.html#xclearner.prediction_step', 'xcai/learner.py'),
                              'xcai.learner.XCLearner.prune_metadata': ('learner.html#xclearner.prune_metadata', 'xcai/learner.py'),
                              'xcai.learner.XCLearner.representation_output': ( 'learner.html#xclearner.representation_output',
                                                                                'xcai/learner.py'),
                              'xcai.learner.XCLearner.resize_output': ('learner.html#xclearner.resize_output', 'xcai/learner.py'),
                              'xcai.learner.XCLearner.resize_pred': ('learner.html#xclearner.resize_pred', 'xcai/learner.py'),
                              'xcai.learner.XCLearner.update_dataloader_sampler': ( 'learner.html#xclearner.update_dataloader_sampler',
                                                                                    'xcai/learner.py'),
                              'xcai.learner.XCLearningArguments': ('learner.html#xclearningarguments', 'xcai/learner.py'),
                              'xcai.learner.XCLearningArguments.__init__': ('learner.html#xclearningarguments.__init__', 'xcai/learner.py'),
                              'xcai.learner.XCPredictionOutput': ('learner.html#xcpredictionoutput', 'xcai/learner.py'),
                              'xcai.learner.scatter': ('learner.html#scatter', 'xcai/learner.py'),
                              'xcai.learner.scatter_kwargs': ('learner.html#scatter_kwargs', 'xcai/learner.py')},
            'xcai.losses': { 'xcai.losses.BaseLoss': ('losses.html#baseloss', 'xcai/losses.py'),
                             'xcai.losses.BaseLoss.__init__': ('losses.html#baseloss.__init__', 'xcai/losses.py'),
                             'xcai.losses.BaseLoss.reduction': ('losses.html#baseloss.reduction', 'xcai/losses.py'),
                             'xcai.losses.Calibration': ('losses.html#calibration', 'xcai/losses.py'),
                             'xcai.losses.Calibration.__init__': ('losses.html#calibration.__init__', 'xcai/losses.py'),
                             'xcai.losses.Calibration.forward': ('losses.html#calibration.forward', 'xcai/losses.py'),
                             'xcai.losses.Cosine': ('losses.html#cosine', 'xcai/losses.py'),
                             'xcai.losses.Cosine.__init__': ('losses.html#cosine.__init__', 'xcai/losses.py'),
                             'xcai.losses.Cosine.forward': ('losses.html#cosine.forward', 'xcai/losses.py'),
                             'xcai.losses.Entropy': ('losses.html#entropy', 'xcai/losses.py'),
                             'xcai.losses.Entropy.__init__': ('losses.html#entropy.__init__', 'xcai/losses.py'),
                             'xcai.losses.Entropy.forward': ('losses.html#entropy.forward', 'xcai/losses.py'),
                             'xcai.losses.MultiCrossEntropy': ('losses.html#multicrossentropy', 'xcai/losses.py'),
                             'xcai.losses.MultiCrossEntropy.__init__': ('losses.html#multicrossentropy.__init__', 'xcai/losses.py'),
                             'xcai.losses.MultiCrossEntropy.forward': ('losses.html#multicrossentropy.forward', 'xcai/losses.py'),
                             'xcai.losses.MultiTriplet': ('losses.html#multitriplet', 'xcai/losses.py'),
                             'xcai.losses.MultiTriplet.__init__': ('losses.html#multitriplet.__init__', 'xcai/losses.py'),
                             'xcai.losses.MultiTriplet.forward': ('losses.html#multitriplet.forward', 'xcai/losses.py'),
                             'xcai.losses.SoupCon': ('losses.html#soupcon', 'xcai/losses.py'),
                             'xcai.losses.SoupCon.__init__': ('losses.html#soupcon.__init__', 'xcai/losses.py'),
                             'xcai.losses.SoupCon.forward': ('losses.html#soupcon.forward', 'xcai/losses.py'),
                             'xcai.losses.Triplet': ('losses.html#triplet', 'xcai/losses.py'),
                             'xcai.losses.Triplet.__init__': ('losses.html#triplet.__init__', 'xcai/losses.py'),
                             'xcai.losses.Triplet.forward': ('losses.html#triplet.forward', 'xcai/losses.py'),
                             'xcai.losses.get_sparse_matrix': ('losses.html#get_sparse_matrix', 'xcai/losses.py')},
            'xcai.metrics': { 'xcai.metrics.Mrr': ('metrics.html#mrr', 'xcai/metrics.py'),
                              'xcai.metrics.PrecRecl': ('metrics.html#precrecl', 'xcai/metrics.py'),
                              'xcai.metrics.PrecReclMrr': ('metrics.html#precreclmrr', 'xcai/metrics.py'),
                              'xcai.metrics.Precision': ('metrics.html#precision', 'xcai/metrics.py'),
                              'xcai.metrics.Recall': ('metrics.html#recall', 'xcai/metrics.py'),
                              'xcai.metrics.XCMetric': ('metrics.html#xcmetric', 'xcai/metrics.py'),
                              'xcai.metrics.XCMetric.__call__': ('metrics.html#xcmetric.__call__', 'xcai/metrics.py'),
                              'xcai.metrics.XCMetric.__init__': ('metrics.html#xcmetric.__init__', 'xcai/metrics.py'),
                              'xcai.metrics.XCMetric.accumulate': ('metrics.html#xcmetric.accumulate', 'xcai/metrics.py'),
                              'xcai.metrics.XCMetric.apply_filter': ('metrics.html#xcmetric.apply_filter', 'xcai/metrics.py'),
                              'xcai.metrics.XCMetric.get_pred': ('metrics.html#xcmetric.get_pred', 'xcai/metrics.py'),
                              'xcai.metrics.XCMetric.get_targ': ('metrics.html#xcmetric.get_targ', 'xcai/metrics.py'),
                              'xcai.metrics.XCMetric.reset': ('metrics.html#xcmetric.reset', 'xcai/metrics.py'),
                              'xcai.metrics.XCMetric.value': ('metrics.html#xcmetric.value', 'xcai/metrics.py'),
                              'xcai.metrics.mrr': ('metrics.html#mrr', 'xcai/metrics.py'),
                              'xcai.metrics.prec_recl': ('metrics.html#prec_recl', 'xcai/metrics.py'),
                              'xcai.metrics.prec_recl_mrr': ('metrics.html#prec_recl_mrr', 'xcai/metrics.py'),
                              'xcai.metrics.precision': ('metrics.html#precision', 'xcai/metrics.py'),
                              'xcai.metrics.recall': ('metrics.html#recall', 'xcai/metrics.py'),
                              'xcai.metrics.sort_xc_metrics': ('metrics.html#sort_xc_metrics', 'xcai/metrics.py')},
            'xcai.models.BBB0XX': { 'xcai.models.BBB0XX.BRT009': ('models.bbb0xx.html#brt009', 'xcai/models/BBB0XX.py'),
                                    'xcai.models.BBB0XX.BRT009.__init__': ('models.bbb0xx.html#brt009.__init__', 'xcai/models/BBB0XX.py'),
                                    'xcai.models.BBB0XX.BRT009.forward': ('models.bbb0xx.html#brt009.forward', 'xcai/models/BBB0XX.py'),
                                    'xcai.models.BBB0XX.BRT009.init_dr_head': ( 'models.bbb0xx.html#brt009.init_dr_head',
                                                                                'xcai/models/BBB0XX.py'),
                                    'xcai.models.BBB0XX.BRT009.remap_post_init': ( 'models.bbb0xx.html#brt009.remap_post_init',
                                                                                   'xcai/models/BBB0XX.py'),
                                    'xcai.models.BBB0XX.BRT009Encoder': ('models.bbb0xx.html#brt009encoder', 'xcai/models/BBB0XX.py'),
                                    'xcai.models.BBB0XX.BRT009Encoder.__init__': ( 'models.bbb0xx.html#brt009encoder.__init__',
                                                                                   'xcai/models/BBB0XX.py'),
                                    'xcai.models.BBB0XX.BRT009Encoder.forward': ( 'models.bbb0xx.html#brt009encoder.forward',
                                                                                  'xcai/models/BBB0XX.py'),
                                    'xcai.models.BBB0XX.BRT009Encoder.init_dr_head': ( 'models.bbb0xx.html#brt009encoder.init_dr_head',
                                                                                       'xcai/models/BBB0XX.py')},
            'xcai.models.LLL0XX': { 'xcai.models.LLL0XX.LAM009': ('models.lll0xx.html#lam009', 'xcai/models/LLL0XX.py'),
                                    'xcai.models.LLL0XX.LAM009.__init__': ('models.lll0xx.html#lam009.__init__', 'xcai/models/LLL0XX.py'),
                                    'xcai.models.LLL0XX.LAM009.forward': ('models.lll0xx.html#lam009.forward', 'xcai/models/LLL0XX.py'),
                                    'xcai.models.LLL0XX.LAM009.init_retrieval_head': ( 'models.lll0xx.html#lam009.init_retrieval_head',
                                                                                       'xcai/models/LLL0XX.py'),
                                    'xcai.models.LLL0XX.LAM009.remap_post_init': ( 'models.lll0xx.html#lam009.remap_post_init',
                                                                                   'xcai/models/LLL0XX.py'),
                                    'xcai.models.LLL0XX.LAM009Encoder': ('models.lll0xx.html#lam009encoder', 'xcai/models/LLL0XX.py'),
                                    'xcai.models.LLL0XX.LAM009Encoder.__init__': ( 'models.lll0xx.html#lam009encoder.__init__',
                                                                                   'xcai/models/LLL0XX.py'),
                                    'xcai.models.LLL0XX.LAM009Encoder.forward': ( 'models.lll0xx.html#lam009encoder.forward',
                                                                                  'xcai/models/LLL0XX.py'),
                                    'xcai.models.LLL0XX.Pooling': ('models.lll0xx.html#pooling', 'xcai/models/LLL0XX.py'),
                                    'xcai.models.LLL0XX.Pooling.last_pooling': ( 'models.lll0xx.html#pooling.last_pooling',
                                                                                 'xcai/models/LLL0XX.py'),
                                    'xcai.models.LLL0XX.Pooling.mean_pooling': ( 'models.lll0xx.html#pooling.mean_pooling',
                                                                                 'xcai/models/LLL0XX.py'),
                                    'xcai.models.LLL0XX.RepresentationHead': ( 'models.lll0xx.html#representationhead',
                                                                               'xcai/models/LLL0XX.py'),
                                    'xcai.models.LLL0XX.RepresentationHead.__init__': ( 'models.lll0xx.html#representationhead.__init__',
                                                                                        'xcai/models/LLL0XX.py'),
                                    'xcai.models.LLL0XX.RepresentationHead.forward': ( 'models.lll0xx.html#representationhead.forward',
                                                                                       'xcai/models/LLL0XX.py'),
                                    'xcai.models.LLL0XX.RepresentationHead.post_init': ( 'models.lll0xx.html#representationhead.post_init',
                                                                                         'xcai/models/LLL0XX.py')},
            'xcai.models.MMM00X': { 'xcai.models.MMM00X.BT0001': ('models.mmm00x.html#bt0001', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.BT0001.__init__': ('models.mmm00x.html#bt0001.__init__', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.BT0001.forward': ('models.mmm00x.html#bt0001.forward', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.BT0002': ('models.mmm00x.html#bt0002', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.BT0002.__init__': ('models.mmm00x.html#bt0002.__init__', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.BT0002.forward': ('models.mmm00x.html#bt0002.forward', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.BT0003': ('models.mmm00x.html#bt0003', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.BT0003.__init__': ('models.mmm00x.html#bt0003.__init__', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.BT0003.forward': ('models.mmm00x.html#bt0003.forward', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.BT0003.get_repr': ('models.mmm00x.html#bt0003.get_repr', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.BT0004': ('models.mmm00x.html#bt0004', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.BT0004.__init__': ('models.mmm00x.html#bt0004.__init__', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.BT0004.forward': ('models.mmm00x.html#bt0004.forward', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.BT0004.get_repr': ('models.mmm00x.html#bt0004.get_repr', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.BT0006': ('models.mmm00x.html#bt0006', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.BT0006.__init__': ('models.mmm00x.html#bt0006.__init__', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.DBT007': ('models.mmm00x.html#dbt007', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.DBT007.__init__': ('models.mmm00x.html#dbt007.__init__', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.DBT007.forward': ('models.mmm00x.html#dbt007.forward', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.DBT008': ('models.mmm00x.html#dbt008', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.DBT008.__init__': ('models.mmm00x.html#dbt008.__init__', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.DBT008.forward': ('models.mmm00x.html#dbt008.forward', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.DBT008.get_repr': ('models.mmm00x.html#dbt008.get_repr', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.DBT009': ('models.mmm00x.html#dbt009', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.DBT009.__init__': ('models.mmm00x.html#dbt009.__init__', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.DBT009.loss_fn': ('models.mmm00x.html#dbt009.loss_fn', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.DBT010': ('models.mmm00x.html#dbt010', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.DBT010.__init__': ('models.mmm00x.html#dbt010.__init__', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.DBT010.get_repr': ('models.mmm00x.html#dbt010.get_repr', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.Pooling': ('models.mmm00x.html#pooling', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.Pooling.mean_pooling': ( 'models.mmm00x.html#pooling.mean_pooling',
                                                                                 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.RT0005': ('models.mmm00x.html#rt0005', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.RT0005.__init__': ('models.mmm00x.html#rt0005.__init__', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.RT0005.forward': ('models.mmm00x.html#rt0005.forward', 'xcai/models/MMM00X.py'),
                                    'xcai.models.MMM00X.XCModelOutput': ('models.mmm00x.html#xcmodeloutput', 'xcai/models/MMM00X.py')},
            'xcai.models.MMM0XX': { 'xcai.models.MMM0XX.BT0001': ('models.mmm0xx.html#bt0001', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.BT0001.__init__': ('models.mmm0xx.html#bt0001.__init__', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.BT0001.forward': ('models.mmm0xx.html#bt0001.forward', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.BT0002': ('models.mmm0xx.html#bt0002', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.BT0002.__init__': ('models.mmm0xx.html#bt0002.__init__', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.BT0002.forward': ('models.mmm0xx.html#bt0002.forward', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.BT0003': ('models.mmm0xx.html#bt0003', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.BT0003.__init__': ('models.mmm0xx.html#bt0003.__init__', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.BT0003.forward': ('models.mmm0xx.html#bt0003.forward', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.BT0003.get_repr': ('models.mmm0xx.html#bt0003.get_repr', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.BT0004': ('models.mmm0xx.html#bt0004', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.BT0004.__init__': ('models.mmm0xx.html#bt0004.__init__', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.BT0004.forward': ('models.mmm0xx.html#bt0004.forward', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.BT0004.get_repr': ('models.mmm0xx.html#bt0004.get_repr', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.BT0006': ('models.mmm0xx.html#bt0006', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.BT0006.__init__': ('models.mmm0xx.html#bt0006.__init__', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT007': ('models.mmm0xx.html#dbt007', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT007.__init__': ('models.mmm0xx.html#dbt007.__init__', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT007.forward': ('models.mmm0xx.html#dbt007.forward', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT008': ('models.mmm0xx.html#dbt008', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT008.__init__': ('models.mmm0xx.html#dbt008.__init__', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT008.forward': ('models.mmm0xx.html#dbt008.forward', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT008.get_repr': ('models.mmm0xx.html#dbt008.get_repr', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT008.init_dr_head': ( 'models.mmm0xx.html#dbt008.init_dr_head',
                                                                                'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT009': ('models.mmm0xx.html#dbt009', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT009.__init__': ('models.mmm0xx.html#dbt009.__init__', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT009.get_repr': ('models.mmm0xx.html#dbt009.get_repr', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT010': ('models.mmm0xx.html#dbt010', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT010.__init__': ('models.mmm0xx.html#dbt010.__init__', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT011': ('models.mmm0xx.html#dbt011', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT011.__init__': ('models.mmm0xx.html#dbt011.__init__', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT011.loss_fn': ('models.mmm0xx.html#dbt011.loss_fn', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT012': ('models.mmm0xx.html#dbt012', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT012.__init__': ('models.mmm0xx.html#dbt012.__init__', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT012.loss_fn': ('models.mmm0xx.html#dbt012.loss_fn', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT013': ('models.mmm0xx.html#dbt013', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT013.__init__': ('models.mmm0xx.html#dbt013.__init__', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT013.forward': ('models.mmm0xx.html#dbt013.forward', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT013.get_generation': ( 'models.mmm0xx.html#dbt013.get_generation',
                                                                                  'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT013.get_genrep': ( 'models.mmm0xx.html#dbt013.get_genrep',
                                                                              'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT013.get_representation': ( 'models.mmm0xx.html#dbt013.get_representation',
                                                                                      'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT013.init_dr_head': ( 'models.mmm0xx.html#dbt013.init_dr_head',
                                                                                'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT014': ('models.mmm0xx.html#dbt014', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT014.__init__': ('models.mmm0xx.html#dbt014.__init__', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT014._get_meta_inputs': ( 'models.mmm0xx.html#dbt014._get_meta_inputs',
                                                                                    'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT014.forward': ('models.mmm0xx.html#dbt014.forward', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT015': ('models.mmm0xx.html#dbt015', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT015.__init__': ('models.mmm0xx.html#dbt015.__init__', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT015._get_meta_inputs': ( 'models.mmm0xx.html#dbt015._get_meta_inputs',
                                                                                    'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT015.forward': ('models.mmm0xx.html#dbt015.forward', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT016': ('models.mmm0xx.html#dbt016', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT016.__init__': ('models.mmm0xx.html#dbt016.__init__', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT016.get_generation': ( 'models.mmm0xx.html#dbt016.get_generation',
                                                                                  'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT016.get_genrep': ( 'models.mmm0xx.html#dbt016.get_genrep',
                                                                              'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT017': ('models.mmm0xx.html#dbt017', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT017.__init__': ('models.mmm0xx.html#dbt017.__init__', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT017._get_meta_inputs': ( 'models.mmm0xx.html#dbt017._get_meta_inputs',
                                                                                    'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT017.forward': ('models.mmm0xx.html#dbt017.forward', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT018': ('models.mmm0xx.html#dbt018', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT018.__init__': ('models.mmm0xx.html#dbt018.__init__', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT018._get_meta_inputs': ( 'models.mmm0xx.html#dbt018._get_meta_inputs',
                                                                                    'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT018.forward': ('models.mmm0xx.html#dbt018.forward', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT018.get_meta_fused_genrep': ( 'models.mmm0xx.html#dbt018.get_meta_fused_genrep',
                                                                                         'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT018.get_meta_fused_output': ( 'models.mmm0xx.html#dbt018.get_meta_fused_output',
                                                                                         'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT018.get_output': ( 'models.mmm0xx.html#dbt018.get_output',
                                                                              'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT018.resize_meta': ( 'models.mmm0xx.html#dbt018.resize_meta',
                                                                               'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT019': ('models.mmm0xx.html#dbt019', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT019.__init__': ('models.mmm0xx.html#dbt019.__init__', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT019.forward': ('models.mmm0xx.html#dbt019.forward', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT020': ('models.mmm0xx.html#dbt020', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT020.__init__': ('models.mmm0xx.html#dbt020.__init__', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.DBT020.forward': ('models.mmm0xx.html#dbt020.forward', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.Fuser': ('models.mmm0xx.html#fuser', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.Fuser.__init__': ('models.mmm0xx.html#fuser.__init__', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.Fuser.forward': ('models.mmm0xx.html#fuser.forward', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.Pooling': ('models.mmm0xx.html#pooling', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.Pooling.mean_pooling': ( 'models.mmm0xx.html#pooling.mean_pooling',
                                                                                 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.RT0005': ('models.mmm0xx.html#rt0005', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.RT0005.__init__': ('models.mmm0xx.html#rt0005.__init__', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.RT0005.forward': ('models.mmm0xx.html#rt0005.forward', 'xcai/models/MMM0XX.py'),
                                    'xcai.models.MMM0XX.XCModelOutput': ('models.mmm0xx.html#xcmodeloutput', 'xcai/models/MMM0XX.py')},
            'xcai.models.NVM0XX': { 'xcai.models.NVM0XX.NVM009': ('models.nvm0xx.html#nvm009', 'xcai/models/NVM0XX.py'),
                                    'xcai.models.NVM0XX.NVM009.__init__': ('models.nvm0xx.html#nvm009.__init__', 'xcai/models/NVM0XX.py'),
                                    'xcai.models.NVM0XX.NVM009.forward': ('models.nvm0xx.html#nvm009.forward', 'xcai/models/NVM0XX.py'),
                                    'xcai.models.NVM0XX.NVM009.remap_post_init': ( 'models.nvm0xx.html#nvm009.remap_post_init',
                                                                                   'xcai/models/NVM0XX.py'),
                                    'xcai.models.NVM0XX.NVM009Encoder': ('models.nvm0xx.html#nvm009encoder', 'xcai/models/NVM0XX.py'),
                                    'xcai.models.NVM0XX.NVM009Encoder.__init__': ( 'models.nvm0xx.html#nvm009encoder.__init__',
                                                                                   'xcai/models/NVM0XX.py'),
                                    'xcai.models.NVM0XX.NVM009Encoder.forward': ( 'models.nvm0xx.html#nvm009encoder.forward',
                                                                                  'xcai/models/NVM0XX.py'),
                                    'xcai.models.NVM0XX.Pooling': ('models.nvm0xx.html#pooling', 'xcai/models/NVM0XX.py'),
                                    'xcai.models.NVM0XX.Pooling.last_pooling': ( 'models.nvm0xx.html#pooling.last_pooling',
                                                                                 'xcai/models/NVM0XX.py'),
                                    'xcai.models.NVM0XX.Pooling.mean_pooling': ( 'models.nvm0xx.html#pooling.mean_pooling',
                                                                                 'xcai/models/NVM0XX.py'),
                                    'xcai.models.NVM0XX.RepresentationHead': ( 'models.nvm0xx.html#representationhead',
                                                                               'xcai/models/NVM0XX.py'),
                                    'xcai.models.NVM0XX.RepresentationHead.__init__': ( 'models.nvm0xx.html#representationhead.__init__',
                                                                                        'xcai/models/NVM0XX.py'),
                                    'xcai.models.NVM0XX.RepresentationHead.forward': ( 'models.nvm0xx.html#representationhead.forward',
                                                                                       'xcai/models/NVM0XX.py'),
                                    'xcai.models.NVM0XX.RepresentationHead.post_init': ( 'models.nvm0xx.html#representationhead.post_init',
                                                                                         'xcai/models/NVM0XX.py')},
            'xcai.models.PPP0XX': { 'xcai.models.PPP0XX.DBT007': ('models.ppp0xx.html#dbt007', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT007.__init__': ('models.ppp0xx.html#dbt007.__init__', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT007.forward': ('models.ppp0xx.html#dbt007.forward', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT007.remap_post_init': ( 'models.ppp0xx.html#dbt007.remap_post_init',
                                                                                   'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT007Encoder': ('models.ppp0xx.html#dbt007encoder', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT007Encoder.__init__': ( 'models.ppp0xx.html#dbt007encoder.__init__',
                                                                                   'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT007Encoder.forward': ( 'models.ppp0xx.html#dbt007encoder.forward',
                                                                                  'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT009': ('models.ppp0xx.html#dbt009', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT009.__init__': ('models.ppp0xx.html#dbt009.__init__', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT009.forward': ('models.ppp0xx.html#dbt009.forward', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT009.init_dr_head': ( 'models.ppp0xx.html#dbt009.init_dr_head',
                                                                                'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT009.remap_post_init': ( 'models.ppp0xx.html#dbt009.remap_post_init',
                                                                                   'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT009Encoder': ('models.ppp0xx.html#dbt009encoder', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT009Encoder.__init__': ( 'models.ppp0xx.html#dbt009encoder.__init__',
                                                                                   'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT009Encoder.forward': ( 'models.ppp0xx.html#dbt009encoder.forward',
                                                                                  'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT009Encoder.init_dr_head': ( 'models.ppp0xx.html#dbt009encoder.init_dr_head',
                                                                                       'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT010': ('models.ppp0xx.html#dbt010', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT010.__init__': ('models.ppp0xx.html#dbt010.__init__', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT010.forward': ('models.ppp0xx.html#dbt010.forward', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT010Encoder': ('models.ppp0xx.html#dbt010encoder', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT010Encoder.__init__': ( 'models.ppp0xx.html#dbt010encoder.__init__',
                                                                                   'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT010Encoder.forward': ( 'models.ppp0xx.html#dbt010encoder.forward',
                                                                                  'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT011': ('models.ppp0xx.html#dbt011', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT011.__init__': ('models.ppp0xx.html#dbt011.__init__', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT011.forward': ('models.ppp0xx.html#dbt011.forward', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT011.init_dr_head': ( 'models.ppp0xx.html#dbt011.init_dr_head',
                                                                                'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT011.remap_post_init': ( 'models.ppp0xx.html#dbt011.remap_post_init',
                                                                                   'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT012': ('models.ppp0xx.html#dbt012', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT012.__init__': ('models.ppp0xx.html#dbt012.__init__', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT012.forward': ('models.ppp0xx.html#dbt012.forward', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT012.init_dr_head': ( 'models.ppp0xx.html#dbt012.init_dr_head',
                                                                                'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT012.remap_post_init': ( 'models.ppp0xx.html#dbt012.remap_post_init',
                                                                                   'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT012Encoder': ('models.ppp0xx.html#dbt012encoder', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT012Encoder.forward': ( 'models.ppp0xx.html#dbt012encoder.forward',
                                                                                  'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT013': ('models.ppp0xx.html#dbt013', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT013.__init__': ('models.ppp0xx.html#dbt013.__init__', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT013.forward': ('models.ppp0xx.html#dbt013.forward', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT013.init_dr_head': ( 'models.ppp0xx.html#dbt013.init_dr_head',
                                                                                'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT013.remap_post_init': ( 'models.ppp0xx.html#dbt013.remap_post_init',
                                                                                   'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT013Encoder': ('models.ppp0xx.html#dbt013encoder', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT013Encoder.__init__': ( 'models.ppp0xx.html#dbt013encoder.__init__',
                                                                                   'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT013Encoder.forward': ( 'models.ppp0xx.html#dbt013encoder.forward',
                                                                                  'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT013Encoder.init_dr_head': ( 'models.ppp0xx.html#dbt013encoder.init_dr_head',
                                                                                       'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT014': ('models.ppp0xx.html#dbt014', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT014.__init__': ('models.ppp0xx.html#dbt014.__init__', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT014.forward': ('models.ppp0xx.html#dbt014.forward', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT014Encoder': ('models.ppp0xx.html#dbt014encoder', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT014Encoder.__init__': ( 'models.ppp0xx.html#dbt014encoder.__init__',
                                                                                   'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT014Encoder.forward': ( 'models.ppp0xx.html#dbt014encoder.forward',
                                                                                  'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT017': ('models.ppp0xx.html#dbt017', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT017.__init__': ('models.ppp0xx.html#dbt017.__init__', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT017._get_meta_inputs': ( 'models.ppp0xx.html#dbt017._get_meta_inputs',
                                                                                    'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT017.forward': ('models.ppp0xx.html#dbt017.forward', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT018': ('models.ppp0xx.html#dbt018', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT018.__init__': ('models.ppp0xx.html#dbt018.__init__', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT018._get_meta_kwargs': ( 'models.ppp0xx.html#dbt018._get_meta_kwargs',
                                                                                    'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT018.forward': ('models.ppp0xx.html#dbt018.forward', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT018Encoder': ('models.ppp0xx.html#dbt018encoder', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT018Encoder.__init__': ( 'models.ppp0xx.html#dbt018encoder.__init__',
                                                                                   'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT018Encoder._get_meta_inputs': ( 'models.ppp0xx.html#dbt018encoder._get_meta_inputs',
                                                                                           'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT018Encoder.forward': ( 'models.ppp0xx.html#dbt018encoder.forward',
                                                                                  'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT018Encoder.get_meta_fused_output': ( 'models.ppp0xx.html#dbt018encoder.get_meta_fused_output',
                                                                                                'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT018Encoder.get_output': ( 'models.ppp0xx.html#dbt018encoder.get_output',
                                                                                     'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT018Encoder.resize_meta': ( 'models.ppp0xx.html#dbt018encoder.resize_meta',
                                                                                      'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT020': ('models.ppp0xx.html#dbt020', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT020.__init__': ('models.ppp0xx.html#dbt020.__init__', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT020._get_meta_inputs': ( 'models.ppp0xx.html#dbt020._get_meta_inputs',
                                                                                    'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT020.forward': ('models.ppp0xx.html#dbt020.forward', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT021': ('models.ppp0xx.html#dbt021', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT021.__init__': ('models.ppp0xx.html#dbt021.__init__', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT021._get_meta_inputs': ( 'models.ppp0xx.html#dbt021._get_meta_inputs',
                                                                                    'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT021._get_meta_loss_weights': ( 'models.ppp0xx.html#dbt021._get_meta_loss_weights',
                                                                                          'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT021.compute_meta_loss': ( 'models.ppp0xx.html#dbt021.compute_meta_loss',
                                                                                     'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT021.forward': ('models.ppp0xx.html#dbt021.forward', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT021Encoder': ('models.ppp0xx.html#dbt021encoder', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT021Encoder.__init__': ( 'models.ppp0xx.html#dbt021encoder.__init__',
                                                                                   'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT021Encoder.dr': ('models.ppp0xx.html#dbt021encoder.dr', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT021Encoder.forward': ( 'models.ppp0xx.html#dbt021encoder.forward',
                                                                                  'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT021Encoder.init_dr_head': ( 'models.ppp0xx.html#dbt021encoder.init_dr_head',
                                                                                       'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT021Encoder.meta': ( 'models.ppp0xx.html#dbt021encoder.meta',
                                                                               'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT022': ('models.ppp0xx.html#dbt022', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT022.__init__': ('models.ppp0xx.html#dbt022.__init__', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.DBT022.forward': ('models.ppp0xx.html#dbt022.forward', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.Fuser': ('models.ppp0xx.html#fuser', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.Fuser.__init__': ('models.ppp0xx.html#fuser.__init__', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.Fuser.forward': ('models.ppp0xx.html#fuser.forward', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.Pooling': ('models.ppp0xx.html#pooling', 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.Pooling.mean_pooling': ( 'models.ppp0xx.html#pooling.mean_pooling',
                                                                                 'xcai/models/PPP0XX.py'),
                                    'xcai.models.PPP0XX.XCModelOutput': ('models.ppp0xx.html#xcmodeloutput', 'xcai/models/PPP0XX.py')},
            'xcai.models.classifiers': { 'xcai.models.classifiers.CLS001': ('models.classifiers.html#cls001', 'xcai/models/classifiers.py'),
                                         'xcai.models.classifiers.CLS001.__init__': ( 'models.classifiers.html#cls001.__init__',
                                                                                      'xcai/models/classifiers.py'),
                                         'xcai.models.classifiers.CLS001.compute_loss': ( 'models.classifiers.html#cls001.compute_loss',
                                                                                          'xcai/models/classifiers.py'),
                                         'xcai.models.classifiers.CLS001.forward': ( 'models.classifiers.html#cls001.forward',
                                                                                     'xcai/models/classifiers.py'),
                                         'xcai.models.classifiers.CLS001.freeze_representation': ( 'models.classifiers.html#cls001.freeze_representation',
                                                                                                   'xcai/models/classifiers.py'),
                                         'xcai.models.classifiers.CLS001.get_label_representation': ( 'models.classifiers.html#cls001.get_label_representation',
                                                                                                      'xcai/models/classifiers.py'),
                                         'xcai.models.classifiers.CLS001.init_lbl_embeddings': ( 'models.classifiers.html#cls001.init_lbl_embeddings',
                                                                                                 'xcai/models/classifiers.py'),
                                         'xcai.models.classifiers.CLS001.init_representation': ( 'models.classifiers.html#cls001.init_representation',
                                                                                                 'xcai/models/classifiers.py'),
                                         'xcai.models.classifiers.CLS001.perform_train_inference': ( 'models.classifiers.html#cls001.perform_train_inference',
                                                                                                     'xcai/models/classifiers.py'),
                                         'xcai.models.classifiers.CLS001.unfreeze_representation': ( 'models.classifiers.html#cls001.unfreeze_representation',
                                                                                                     'xcai/models/classifiers.py')},
            'xcai.models.configuration_nvembed': {},
            'xcai.models.dexa': { 'xcai.models.dexa.DEX001': ('models.dexa.html#dex001', 'xcai/models/dexa.py'),
                                  'xcai.models.dexa.DEX001.__init__': ('models.dexa.html#dex001.__init__', 'xcai/models/dexa.py'),
                                  'xcai.models.dexa.DEX001.compute_loss': ('models.dexa.html#dex001.compute_loss', 'xcai/models/dexa.py'),
                                  'xcai.models.dexa.DEX001.forward': ('models.dexa.html#dex001.forward', 'xcai/models/dexa.py'),
                                  'xcai.models.dexa.DEX001.get_label_representation': ( 'models.dexa.html#dex001.get_label_representation',
                                                                                        'xcai/models/dexa.py'),
                                  'xcai.models.dexa.DEX001.init_label_embeddings': ( 'models.dexa.html#dex001.init_label_embeddings',
                                                                                     'xcai/models/dexa.py'),
                                  'xcai.models.dexa.DEX001.init_retrieval_head': ( 'models.dexa.html#dex001.init_retrieval_head',
                                                                                   'xcai/models/dexa.py'),
                                  'xcai.models.dexa.DEX001.remap_post_init': ( 'models.dexa.html#dex001.remap_post_init',
                                                                               'xcai/models/dexa.py'),
                                  'xcai.models.dexa.DEX001.set_label_embeddings': ( 'models.dexa.html#dex001.set_label_embeddings',
                                                                                    'xcai/models/dexa.py'),
                                  'xcai.models.dexa.DEX001.set_label_remap': ( 'models.dexa.html#dex001.set_label_remap',
                                                                               'xcai/models/dexa.py'),
                                  'xcai.models.dexa.DEX002': ('models.dexa.html#dex002', 'xcai/models/dexa.py'),
                                  'xcai.models.dexa.DEX002.__init__': ('models.dexa.html#dex002.__init__', 'xcai/models/dexa.py'),
                                  'xcai.models.dexa.Encoder': ('models.dexa.html#encoder', 'xcai/models/dexa.py'),
                                  'xcai.models.dexa.Encoder.__init__': ('models.dexa.html#encoder.__init__', 'xcai/models/dexa.py'),
                                  'xcai.models.dexa.Encoder.dr': ('models.dexa.html#encoder.dr', 'xcai/models/dexa.py'),
                                  'xcai.models.dexa.Encoder.encode': ('models.dexa.html#encoder.encode', 'xcai/models/dexa.py'),
                                  'xcai.models.dexa.Encoder.forward': ('models.dexa.html#encoder.forward', 'xcai/models/dexa.py'),
                                  'xcai.models.dexa.Encoder.get_position_embeddings': ( 'models.dexa.html#encoder.get_position_embeddings',
                                                                                        'xcai/models/dexa.py'),
                                  'xcai.models.dexa.Encoder.resize_position_embeddings': ( 'models.dexa.html#encoder.resize_position_embeddings',
                                                                                           'xcai/models/dexa.py')},
            'xcai.models.distillation': { 'xcai.models.distillation.DTL001': ( 'models.distillation.html#dtl001',
                                                                               'xcai/models/distillation.py'),
                                          'xcai.models.distillation.DTL001.__init__': ( 'models.distillation.html#dtl001.__init__',
                                                                                        'xcai/models/distillation.py'),
                                          'xcai.models.distillation.DTL001.forward': ( 'models.distillation.html#dtl001.forward',
                                                                                       'xcai/models/distillation.py'),
                                          'xcai.models.distillation.DTL002': ( 'models.distillation.html#dtl002',
                                                                               'xcai/models/distillation.py'),
                                          'xcai.models.distillation.DTL002.__init__': ( 'models.distillation.html#dtl002.__init__',
                                                                                        'xcai/models/distillation.py'),
                                          'xcai.models.distillation.DTL002.forward': ( 'models.distillation.html#dtl002.forward',
                                                                                       'xcai/models/distillation.py'),
                                          'xcai.models.distillation.DTL003': ( 'models.distillation.html#dtl003',
                                                                               'xcai/models/distillation.py'),
                                          'xcai.models.distillation.DTL003.__init__': ( 'models.distillation.html#dtl003.__init__',
                                                                                        'xcai/models/distillation.py'),
                                          'xcai.models.distillation.DTL003.forward': ( 'models.distillation.html#dtl003.forward',
                                                                                       'xcai/models/distillation.py'),
                                          'xcai.models.distillation.DTL004': ( 'models.distillation.html#dtl004',
                                                                               'xcai/models/distillation.py'),
                                          'xcai.models.distillation.DTL004.__init__': ( 'models.distillation.html#dtl004.__init__',
                                                                                        'xcai/models/distillation.py'),
                                          'xcai.models.distillation.DTL004.forward': ( 'models.distillation.html#dtl004.forward',
                                                                                       'xcai/models/distillation.py'),
                                          'xcai.models.distillation.DTL005': ( 'models.distillation.html#dtl005',
                                                                               'xcai/models/distillation.py'),
                                          'xcai.models.distillation.DTL005.__init__': ( 'models.distillation.html#dtl005.__init__',
                                                                                        'xcai/models/distillation.py'),
                                          'xcai.models.distillation.DTL005.forward': ( 'models.distillation.html#dtl005.forward',
                                                                                       'xcai/models/distillation.py'),
                                          'xcai.models.distillation.DTL006': ( 'models.distillation.html#dtl006',
                                                                               'xcai/models/distillation.py'),
                                          'xcai.models.distillation.DTL006.__init__': ( 'models.distillation.html#dtl006.__init__',
                                                                                        'xcai/models/distillation.py'),
                                          'xcai.models.distillation.DTL006.forward': ( 'models.distillation.html#dtl006.forward',
                                                                                       'xcai/models/distillation.py'),
                                          'xcai.models.distillation.DTL006.get_label_representation': ( 'models.distillation.html#dtl006.get_label_representation',
                                                                                                        'xcai/models/distillation.py'),
                                          'xcai.models.distillation.DTL007': ( 'models.distillation.html#dtl007',
                                                                               'xcai/models/distillation.py'),
                                          'xcai.models.distillation.DTL007.__init__': ( 'models.distillation.html#dtl007.__init__',
                                                                                        'xcai/models/distillation.py'),
                                          'xcai.models.distillation.DTL007.forward': ( 'models.distillation.html#dtl007.forward',
                                                                                       'xcai/models/distillation.py'),
                                          'xcai.models.distillation.DTL008': ( 'models.distillation.html#dtl008',
                                                                               'xcai/models/distillation.py'),
                                          'xcai.models.distillation.DTL008.__init__': ( 'models.distillation.html#dtl008.__init__',
                                                                                        'xcai/models/distillation.py'),
                                          'xcai.models.distillation.DTL008.forward': ( 'models.distillation.html#dtl008.forward',
                                                                                       'xcai/models/distillation.py'),
                                          'xcai.models.distillation.DTL009': ( 'models.distillation.html#dtl009',
                                                                               'xcai/models/distillation.py'),
                                          'xcai.models.distillation.DTL009.__init__': ( 'models.distillation.html#dtl009.__init__',
                                                                                        'xcai/models/distillation.py'),
                                          'xcai.models.distillation.DTL009.forward': ( 'models.distillation.html#dtl009.forward',
                                                                                       'xcai/models/distillation.py'),
                                          'xcai.models.distillation.DTL010': ( 'models.distillation.html#dtl010',
                                                                               'xcai/models/distillation.py'),
                                          'xcai.models.distillation.DTL010.__init__': ( 'models.distillation.html#dtl010.__init__',
                                                                                        'xcai/models/distillation.py'),
                                          'xcai.models.distillation.DTL010.forward': ( 'models.distillation.html#dtl010.forward',
                                                                                       'xcai/models/distillation.py'),
                                          'xcai.models.distillation.DTL011': ( 'models.distillation.html#dtl011',
                                                                               'xcai/models/distillation.py'),
                                          'xcai.models.distillation.DTL011.__init__': ( 'models.distillation.html#dtl011.__init__',
                                                                                        'xcai/models/distillation.py'),
                                          'xcai.models.distillation.DTL011.forward': ( 'models.distillation.html#dtl011.forward',
                                                                                       'xcai/models/distillation.py'),
                                          'xcai.models.distillation.DTL012': ( 'models.distillation.html#dtl012',
                                                                               'xcai/models/distillation.py'),
                                          'xcai.models.distillation.DTL012.__init__': ( 'models.distillation.html#dtl012.__init__',
                                                                                        'xcai/models/distillation.py'),
                                          'xcai.models.distillation.DTL012.forward': ( 'models.distillation.html#dtl012.forward',
                                                                                       'xcai/models/distillation.py'),
                                          'xcai.models.distillation.DTL012.init_transform': ( 'models.distillation.html#dtl012.init_transform',
                                                                                              'xcai/models/distillation.py'),
                                          'xcai.models.distillation.TCH001': ( 'models.distillation.html#tch001',
                                                                               'xcai/models/distillation.py'),
                                          'xcai.models.distillation.TCH001.__init__': ( 'models.distillation.html#tch001.__init__',
                                                                                        'xcai/models/distillation.py'),
                                          'xcai.models.distillation.TCH001.forward': ( 'models.distillation.html#tch001.forward',
                                                                                       'xcai/models/distillation.py'),
                                          'xcai.models.distillation.TCH001.freeze_data_embeddings': ( 'models.distillation.html#tch001.freeze_data_embeddings',
                                                                                                      'xcai/models/distillation.py'),
                                          'xcai.models.distillation.TCH001.freeze_embeddings': ( 'models.distillation.html#tch001.freeze_embeddings',
                                                                                                 'xcai/models/distillation.py'),
                                          'xcai.models.distillation.TCH001.get_data_embeddings': ( 'models.distillation.html#tch001.get_data_embeddings',
                                                                                                   'xcai/models/distillation.py'),
                                          'xcai.models.distillation.TCH001.get_lbl_embeddings': ( 'models.distillation.html#tch001.get_lbl_embeddings',
                                                                                                  'xcai/models/distillation.py'),
                                          'xcai.models.distillation.TCH001.init_embeddings': ( 'models.distillation.html#tch001.init_embeddings',
                                                                                               'xcai/models/distillation.py'),
                                          'xcai.models.distillation.TCH001.unfreeze_embeddings': ( 'models.distillation.html#tch001.unfreeze_embeddings',
                                                                                                   'xcai/models/distillation.py'),
                                          'xcai.models.distillation.TCH002': ( 'models.distillation.html#tch002',
                                                                               'xcai/models/distillation.py'),
                                          'xcai.models.distillation.TCH002.__init__': ( 'models.distillation.html#tch002.__init__',
                                                                                        'xcai/models/distillation.py'),
                                          'xcai.models.distillation.TCH002.forward': ( 'models.distillation.html#tch002.forward',
                                                                                       'xcai/models/distillation.py'),
                                          'xcai.models.distillation.TCH002.freeze_representations': ( 'models.distillation.html#tch002.freeze_representations',
                                                                                                      'xcai/models/distillation.py'),
                                          'xcai.models.distillation.TCH002.get_data_embeddings': ( 'models.distillation.html#tch002.get_data_embeddings',
                                                                                                   'xcai/models/distillation.py'),
                                          'xcai.models.distillation.TCH002.get_lbl_embeddings': ( 'models.distillation.html#tch002.get_lbl_embeddings',
                                                                                                  'xcai/models/distillation.py'),
                                          'xcai.models.distillation.TCH002.init_lbl_embeddings': ( 'models.distillation.html#tch002.init_lbl_embeddings',
                                                                                                   'xcai/models/distillation.py'),
                                          'xcai.models.distillation.TCH002.init_representations': ( 'models.distillation.html#tch002.init_representations',
                                                                                                    'xcai/models/distillation.py'),
                                          'xcai.models.distillation.TCH002.unfreeze_representations': ( 'models.distillation.html#tch002.unfreeze_representations',
                                                                                                        'xcai/models/distillation.py'),
                                          'xcai.models.distillation.TCH003': ( 'models.distillation.html#tch003',
                                                                               'xcai/models/distillation.py'),
                                          'xcai.models.distillation.TCH003.__init__': ( 'models.distillation.html#tch003.__init__',
                                                                                        'xcai/models/distillation.py'),
                                          'xcai.models.distillation.TCH003.forward': ( 'models.distillation.html#tch003.forward',
                                                                                       'xcai/models/distillation.py'),
                                          'xcai.models.distillation.TCH003.freeze_embeddings': ( 'models.distillation.html#tch003.freeze_embeddings',
                                                                                                 'xcai/models/distillation.py'),
                                          'xcai.models.distillation.TCH003.get_data_embeddings': ( 'models.distillation.html#tch003.get_data_embeddings',
                                                                                                   'xcai/models/distillation.py'),
                                          'xcai.models.distillation.TCH003.init_embeddings': ( 'models.distillation.html#tch003.init_embeddings',
                                                                                               'xcai/models/distillation.py'),
                                          'xcai.models.distillation.TCH003.unfreeze_representations': ( 'models.distillation.html#tch003.unfreeze_representations',
                                                                                                        'xcai/models/distillation.py'),
                                          'xcai.models.distillation.TCH004': ( 'models.distillation.html#tch004',
                                                                               'xcai/models/distillation.py'),
                                          'xcai.models.distillation.TCH004.__init__': ( 'models.distillation.html#tch004.__init__',
                                                                                        'xcai/models/distillation.py'),
                                          'xcai.models.distillation.TCH004.forward': ( 'models.distillation.html#tch004.forward',
                                                                                       'xcai/models/distillation.py'),
                                          'xcai.models.distillation.TCH004.freeze_embeddings': ( 'models.distillation.html#tch004.freeze_embeddings',
                                                                                                 'xcai/models/distillation.py'),
                                          'xcai.models.distillation.TCH004.get_data_embeddings': ( 'models.distillation.html#tch004.get_data_embeddings',
                                                                                                   'xcai/models/distillation.py'),
                                          'xcai.models.distillation.TCH004.init_embeddings': ( 'models.distillation.html#tch004.init_embeddings',
                                                                                               'xcai/models/distillation.py'),
                                          'xcai.models.distillation.TCH004.init_transform': ( 'models.distillation.html#tch004.init_transform',
                                                                                              'xcai/models/distillation.py'),
                                          'xcai.models.distillation.TCH004.unfreeze_representations': ( 'models.distillation.html#tch004.unfreeze_representations',
                                                                                                        'xcai/models/distillation.py'),
                                          'xcai.models.distillation.TCHOutput': ( 'models.distillation.html#tchoutput',
                                                                                  'xcai/models/distillation.py')},
            'xcai.models.lora': { 'xcai.models.lora.LOR001': ('models.lora.html#lor001', 'xcai/models/lora.py'),
                                  'xcai.models.lora.LOR001.__init__': ('models.lora.html#lor001.__init__', 'xcai/models/lora.py'),
                                  'xcai.models.lora.LOR001._mark_entire_model_as_trainable': ( 'models.lora.html#lor001._mark_entire_model_as_trainable',
                                                                                               'xcai/models/lora.py'),
                                  'xcai.models.lora.LOR001._mark_only_adapters_as_trainable': ( 'models.lora.html#lor001._mark_only_adapters_as_trainable',
                                                                                                'xcai/models/lora.py'),
                                  'xcai.models.lora.LOR001.forward': ('models.lora.html#lor001.forward', 'xcai/models/lora.py')},
            'xcai.models.modeling_nvembed': {},
            'xcai.models.modeling_utils': { 'xcai.models.modeling_utils.CrossAttention': ( 'models.modeling_utils.html#crossattention',
                                                                                           'xcai/models/modeling_utils.py'),
                                            'xcai.models.modeling_utils.CrossAttention.__init__': ( 'models.modeling_utils.html#crossattention.__init__',
                                                                                                    'xcai/models/modeling_utils.py'),
                                            'xcai.models.modeling_utils.CrossAttention.forward': ( 'models.modeling_utils.html#crossattention.forward',
                                                                                                   'xcai/models/modeling_utils.py'),
                                            'xcai.models.modeling_utils.CrossAttention.post_init': ( 'models.modeling_utils.html#crossattention.post_init',
                                                                                                     'xcai/models/modeling_utils.py'),
                                            'xcai.models.modeling_utils.EncoderOutput': ( 'models.modeling_utils.html#encoderoutput',
                                                                                          'xcai/models/modeling_utils.py'),
                                            'xcai.models.modeling_utils.GenerationHead': ( 'models.modeling_utils.html#generationhead',
                                                                                           'xcai/models/modeling_utils.py'),
                                            'xcai.models.modeling_utils.GenerationHead.__init__': ( 'models.modeling_utils.html#generationhead.__init__',
                                                                                                    'xcai/models/modeling_utils.py'),
                                            'xcai.models.modeling_utils.GenerationHead.forward': ( 'models.modeling_utils.html#generationhead.forward',
                                                                                                   'xcai/models/modeling_utils.py'),
                                            'xcai.models.modeling_utils.Parameters': ( 'models.modeling_utils.html#parameters',
                                                                                       'xcai/models/modeling_utils.py'),
                                            'xcai.models.modeling_utils.Parameters.from_feat_meta_aug_prefix': ( 'models.modeling_utils.html#parameters.from_feat_meta_aug_prefix',
                                                                                                                 'xcai/models/modeling_utils.py'),
                                            'xcai.models.modeling_utils.Parameters.from_meta_aug_prefix': ( 'models.modeling_utils.html#parameters.from_meta_aug_prefix',
                                                                                                            'xcai/models/modeling_utils.py'),
                                            'xcai.models.modeling_utils.Parameters.from_meta_pred_prefix': ( 'models.modeling_utils.html#parameters.from_meta_pred_prefix',
                                                                                                             'xcai/models/modeling_utils.py'),
                                            'xcai.models.modeling_utils.Parameters.get_meta_loss_weights': ( 'models.modeling_utils.html#parameters.get_meta_loss_weights',
                                                                                                             'xcai/models/modeling_utils.py'),
                                            'xcai.models.modeling_utils.Pooling': ( 'models.modeling_utils.html#pooling',
                                                                                    'xcai/models/modeling_utils.py'),
                                            'xcai.models.modeling_utils.Pooling.mean_pooling': ( 'models.modeling_utils.html#pooling.mean_pooling',
                                                                                                 'xcai/models/modeling_utils.py'),
                                            'xcai.models.modeling_utils.RepresentationHead': ( 'models.modeling_utils.html#representationhead',
                                                                                               'xcai/models/modeling_utils.py'),
                                            'xcai.models.modeling_utils.RepresentationHead.__init__': ( 'models.modeling_utils.html#representationhead.__init__',
                                                                                                        'xcai/models/modeling_utils.py'),
                                            'xcai.models.modeling_utils.RepresentationHead.forward': ( 'models.modeling_utils.html#representationhead.forward',
                                                                                                       'xcai/models/modeling_utils.py'),
                                            'xcai.models.modeling_utils.RepresentationHead.post_init': ( 'models.modeling_utils.html#representationhead.post_init',
                                                                                                         'xcai/models/modeling_utils.py'),
                                            'xcai.models.modeling_utils.XCModelOutput': ( 'models.modeling_utils.html#xcmodeloutput',
                                                                                          'xcai/models/modeling_utils.py')},
            'xcai.models.oak': { 'xcai.models.oak.CrossAttention': ('models.oak.html#crossattention', 'xcai/models/oak.py'),
                                 'xcai.models.oak.CrossAttention.__init__': ( 'models.oak.html#crossattention.__init__',
                                                                              'xcai/models/oak.py'),
                                 'xcai.models.oak.CrossAttention.forward': ('models.oak.html#crossattention.forward', 'xcai/models/oak.py'),
                                 'xcai.models.oak.CrossAttention.post_init': ( 'models.oak.html#crossattention.post_init',
                                                                               'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder': ('models.oak.html#encoder', 'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder.__init__': ('models.oak.html#encoder.__init__', 'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder.dr': ('models.oak.html#encoder.dr', 'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder.dr_fused': ('models.oak.html#encoder.dr_fused', 'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder.encode': ('models.oak.html#encoder.encode', 'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder.forward': ('models.oak.html#encoder.forward', 'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder.freeze_meta_embeddings': ( 'models.oak.html#encoder.freeze_meta_embeddings',
                                                                                     'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder.fuse_meta_into_embeddings': ( 'models.oak.html#encoder.fuse_meta_into_embeddings',
                                                                                        'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder.get_position_embeddings': ( 'models.oak.html#encoder.get_position_embeddings',
                                                                                      'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder.meta': ('models.oak.html#encoder.meta', 'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder.meta_unnormalized': ( 'models.oak.html#encoder.meta_unnormalized',
                                                                                'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder.resize': ('models.oak.html#encoder.resize', 'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder.resize_position_embeddings': ( 'models.oak.html#encoder.resize_position_embeddings',
                                                                                         'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder.set_meta_embeddings': ( 'models.oak.html#encoder.set_meta_embeddings',
                                                                                  'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder.unfreeze_meta_embeddings': ( 'models.oak.html#encoder.unfreeze_meta_embeddings',
                                                                                       'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder002': ('models.oak.html#encoder002', 'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder002.__init__': ('models.oak.html#encoder002.__init__', 'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder003': ('models.oak.html#encoder003', 'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder003.__init__': ('models.oak.html#encoder003.__init__', 'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder003.freeze_pretrained_meta_embeddings': ( 'models.oak.html#encoder003.freeze_pretrained_meta_embeddings',
                                                                                                   'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder003.fuse_meta_into_embeddings': ( 'models.oak.html#encoder003.fuse_meta_into_embeddings',
                                                                                           'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder003.init_meta_embeddings': ( 'models.oak.html#encoder003.init_meta_embeddings',
                                                                                      'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder003.set_pretrained_meta_embeddings': ( 'models.oak.html#encoder003.set_pretrained_meta_embeddings',
                                                                                                'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder003.unfreeze_pretrained_meta_embeddings': ( 'models.oak.html#encoder003.unfreeze_pretrained_meta_embeddings',
                                                                                                     'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder004': ('models.oak.html#encoder004', 'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder004.__init__': ('models.oak.html#encoder004.__init__', 'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder005': ('models.oak.html#encoder005', 'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder005.__init__': ('models.oak.html#encoder005.__init__', 'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder005.forward': ('models.oak.html#encoder005.forward', 'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder005.gen': ('models.oak.html#encoder005.gen', 'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder005.get_output_embeddings': ( 'models.oak.html#encoder005.get_output_embeddings',
                                                                                       'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder005.set_output_embeddings': ( 'models.oak.html#encoder005.set_output_embeddings',
                                                                                       'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder006': ('models.oak.html#encoder006', 'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder006.__init__': ('models.oak.html#encoder006.__init__', 'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder006.dr': ('models.oak.html#encoder006.dr', 'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder006.dr_fused': ('models.oak.html#encoder006.dr_fused', 'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder006.encode': ('models.oak.html#encoder006.encode', 'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder006.forward': ('models.oak.html#encoder006.forward', 'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder006.freeze_meta_embeddings': ( 'models.oak.html#encoder006.freeze_meta_embeddings',
                                                                                        'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder006.freeze_pretrained_meta_embeddings': ( 'models.oak.html#encoder006.freeze_pretrained_meta_embeddings',
                                                                                                   'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder006.fuse_meta_into_embeddings': ( 'models.oak.html#encoder006.fuse_meta_into_embeddings',
                                                                                           'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder006.get_position_embeddings': ( 'models.oak.html#encoder006.get_position_embeddings',
                                                                                         'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder006.init_meta_embeddings': ( 'models.oak.html#encoder006.init_meta_embeddings',
                                                                                      'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder006.meta': ('models.oak.html#encoder006.meta', 'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder006.meta_unnormalized': ( 'models.oak.html#encoder006.meta_unnormalized',
                                                                                   'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder006.resize': ('models.oak.html#encoder006.resize', 'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder006.resize_position_embeddings': ( 'models.oak.html#encoder006.resize_position_embeddings',
                                                                                            'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder006.set_meta_embeddings': ( 'models.oak.html#encoder006.set_meta_embeddings',
                                                                                     'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder006.set_pretrained_meta_embeddings': ( 'models.oak.html#encoder006.set_pretrained_meta_embeddings',
                                                                                                'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder006.unfreeze_meta_embeddings': ( 'models.oak.html#encoder006.unfreeze_meta_embeddings',
                                                                                          'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder006.unfreeze_pretrained_meta_embeddings': ( 'models.oak.html#encoder006.unfreeze_pretrained_meta_embeddings',
                                                                                                     'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder010': ('models.oak.html#encoder010', 'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder010.__init__': ('models.oak.html#encoder010.__init__', 'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder010.fuse_meta_into_embeddings': ( 'models.oak.html#encoder010.fuse_meta_into_embeddings',
                                                                                           'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder010.set_metadata_remap': ( 'models.oak.html#encoder010.set_metadata_remap',
                                                                                    'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder011': ('models.oak.html#encoder011', 'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder011.__init__': ('models.oak.html#encoder011.__init__', 'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder011.fuse_meta_into_embeddings': ( 'models.oak.html#encoder011.fuse_meta_into_embeddings',
                                                                                           'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder011.set_metadata_remap': ( 'models.oak.html#encoder011.set_metadata_remap',
                                                                                    'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder012': ('models.oak.html#encoder012', 'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder012.__init__': ('models.oak.html#encoder012.__init__', 'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder012.fuse_meta_into_embeddings': ( 'models.oak.html#encoder012.fuse_meta_into_embeddings',
                                                                                           'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder013': ('models.oak.html#encoder013', 'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder013.__init__': ('models.oak.html#encoder013.__init__', 'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder013.fuse_meta_into_embeddings': ( 'models.oak.html#encoder013.fuse_meta_into_embeddings',
                                                                                           'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder013.init_meta_encoder': ( 'models.oak.html#encoder013.init_meta_encoder',
                                                                                   'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder013.meta_encode': ('models.oak.html#encoder013.meta_encode', 'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder014': ('models.oak.html#encoder014', 'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder014.__init__': ('models.oak.html#encoder014.__init__', 'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder014.fuse_meta_into_embeddings': ( 'models.oak.html#encoder014.fuse_meta_into_embeddings',
                                                                                           'xcai/models/oak.py'),
                                 'xcai.models.oak.Encoder014.set_metadata_remap': ( 'models.oak.html#encoder014.set_metadata_remap',
                                                                                    'xcai/models/oak.py'),
                                 'xcai.models.oak.NormCrossAttention': ('models.oak.html#normcrossattention', 'xcai/models/oak.py'),
                                 'xcai.models.oak.NormCrossAttention.__init__': ( 'models.oak.html#normcrossattention.__init__',
                                                                                  'xcai/models/oak.py'),
                                 'xcai.models.oak.NormCrossAttention.forward': ( 'models.oak.html#normcrossattention.forward',
                                                                                 'xcai/models/oak.py'),
                                 'xcai.models.oak.NormCrossAttention.post_init': ( 'models.oak.html#normcrossattention.post_init',
                                                                                   'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK000': ('models.oak.html#oak000', 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK000.__init__': ('models.oak.html#oak000.__init__', 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK000.calibration_loss': ( 'models.oak.html#oak000.calibration_loss',
                                                                              'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK000.compute_fusion_loss': ( 'models.oak.html#oak000.compute_fusion_loss',
                                                                                 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK000.compute_loss': ('models.oak.html#oak000.compute_loss', 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK000.compute_meta_loss': ( 'models.oak.html#oak000.compute_meta_loss',
                                                                               'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK000.forward': ('models.oak.html#oak000.forward', 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK000.get_meta_representation': ( 'models.oak.html#oak000.get_meta_representation',
                                                                                     'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK000.init_cross_head': ('models.oak.html#oak000.init_cross_head', 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK000.init_retrieval_head': ( 'models.oak.html#oak000.init_retrieval_head',
                                                                                 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK001': ('models.oak.html#oak001', 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK001.__init__': ('models.oak.html#oak001.__init__', 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK001.remap_post_init': ('models.oak.html#oak001.remap_post_init', 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK002': ('models.oak.html#oak002', 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK002.__init__': ('models.oak.html#oak002.__init__', 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK002.remap_post_init': ('models.oak.html#oak002.remap_post_init', 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK003': ('models.oak.html#oak003', 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK003.__init__': ('models.oak.html#oak003.__init__', 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK003.init_meta_embeddings': ( 'models.oak.html#oak003.init_meta_embeddings',
                                                                                  'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK003.remap_post_init': ('models.oak.html#oak003.remap_post_init', 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK004': ('models.oak.html#oak004', 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK004.__init__': ('models.oak.html#oak004.__init__', 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK004.remap_post_init': ('models.oak.html#oak004.remap_post_init', 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK005': ('models.oak.html#oak005', 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK005.__init__': ('models.oak.html#oak005.__init__', 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK005.compute_gen_loss': ( 'models.oak.html#oak005.compute_gen_loss',
                                                                              'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK005.forward': ('models.oak.html#oak005.forward', 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK005.freeze': ('models.oak.html#oak005.freeze', 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK005.get_last_item_mask': ( 'models.oak.html#oak005.get_last_item_mask',
                                                                                'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK005.init_generation_head': ( 'models.oak.html#oak005.init_generation_head',
                                                                                  'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK005.remap_post_init': ('models.oak.html#oak005.remap_post_init', 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK005.unfreeze': ('models.oak.html#oak005.unfreeze', 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK005.unfreeze_head': ('models.oak.html#oak005.unfreeze_head', 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK006': ('models.oak.html#oak006', 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK006.__init__': ('models.oak.html#oak006.__init__', 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK006.init_meta_embeddings': ( 'models.oak.html#oak006.init_meta_embeddings',
                                                                                  'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK006.remap_post_init': ('models.oak.html#oak006.remap_post_init', 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK007': ('models.oak.html#oak007', 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK007.__init__': ('models.oak.html#oak007.__init__', 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK007.forward': ('models.oak.html#oak007.forward', 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK007.get_label_representation': ( 'models.oak.html#oak007.get_label_representation',
                                                                                      'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK007.init_label_embeddings': ( 'models.oak.html#oak007.init_label_embeddings',
                                                                                   'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK008': ('models.oak.html#oak008', 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK008.__init__': ('models.oak.html#oak008.__init__', 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK008.forward': ('models.oak.html#oak008.forward', 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK008.get_label_representation': ( 'models.oak.html#oak008.get_label_representation',
                                                                                      'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK008.init_label_embeddings': ( 'models.oak.html#oak008.init_label_embeddings',
                                                                                   'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK008.set_label_embeddings': ( 'models.oak.html#oak008.set_label_embeddings',
                                                                                  'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK008.set_label_remap': ('models.oak.html#oak008.set_label_remap', 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK009': ('models.oak.html#oak009', 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK009.__init__': ('models.oak.html#oak009.__init__', 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK009.forward': ('models.oak.html#oak009.forward', 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK009.get_label_representation': ( 'models.oak.html#oak009.get_label_representation',
                                                                                      'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK009.init_transform': ('models.oak.html#oak009.init_transform', 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK010': ('models.oak.html#oak010', 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK010.__init__': ('models.oak.html#oak010.__init__', 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK010.init_meta_embeddings': ( 'models.oak.html#oak010.init_meta_embeddings',
                                                                                  'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK010.remap_post_init': ('models.oak.html#oak010.remap_post_init', 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK011': ('models.oak.html#oak011', 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK011.__init__': ('models.oak.html#oak011.__init__', 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK011.init_meta_embeddings': ( 'models.oak.html#oak011.init_meta_embeddings',
                                                                                  'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK011.remap_post_init': ('models.oak.html#oak011.remap_post_init', 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK012': ('models.oak.html#oak012', 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK012.__init__': ('models.oak.html#oak012.__init__', 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK012.remap_post_init': ('models.oak.html#oak012.remap_post_init', 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK013': ('models.oak.html#oak013', 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK013.__init__': ('models.oak.html#oak013.__init__', 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK013.init_meta_encoder': ( 'models.oak.html#oak013.init_meta_encoder',
                                                                               'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK013.remap_post_init': ('models.oak.html#oak013.remap_post_init', 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK014': ('models.oak.html#oak014', 'xcai/models/oak.py'),
                                 'xcai.models.oak.OAK014.__init__': ('models.oak.html#oak014.__init__', 'xcai/models/oak.py')},
            'xcai.models.oakX': { 'xcai.models.oakX.Encoder': ('models.oakx.html#encoder', 'xcai/models/oakX.py'),
                                  'xcai.models.oakX.Encoder.__init__': ('models.oakx.html#encoder.__init__', 'xcai/models/oakX.py'),
                                  'xcai.models.oakX.Encoder.dr': ('models.oakx.html#encoder.dr', 'xcai/models/oakX.py'),
                                  'xcai.models.oakX.Encoder.dr_fused': ('models.oakx.html#encoder.dr_fused', 'xcai/models/oakX.py'),
                                  'xcai.models.oakX.Encoder.encode': ('models.oakx.html#encoder.encode', 'xcai/models/oakX.py'),
                                  'xcai.models.oakX.Encoder.forward': ('models.oakx.html#encoder.forward', 'xcai/models/oakX.py'),
                                  'xcai.models.oakX.Encoder.freeze_pretrained_meta_embeddings': ( 'models.oakx.html#encoder.freeze_pretrained_meta_embeddings',
                                                                                                  'xcai/models/oakX.py'),
                                  'xcai.models.oakX.Encoder.fuse_meta_into_embeddings': ( 'models.oakx.html#encoder.fuse_meta_into_embeddings',
                                                                                          'xcai/models/oakX.py'),
                                  'xcai.models.oakX.Encoder.get_position_embeddings': ( 'models.oakx.html#encoder.get_position_embeddings',
                                                                                        'xcai/models/oakX.py'),
                                  'xcai.models.oakX.Encoder.meta': ('models.oakx.html#encoder.meta', 'xcai/models/oakX.py'),
                                  'xcai.models.oakX.Encoder.meta_unnormalized': ( 'models.oakx.html#encoder.meta_unnormalized',
                                                                                  'xcai/models/oakX.py'),
                                  'xcai.models.oakX.Encoder.resize': ('models.oakx.html#encoder.resize', 'xcai/models/oakX.py'),
                                  'xcai.models.oakX.Encoder.resize_position_embeddings': ( 'models.oakx.html#encoder.resize_position_embeddings',
                                                                                           'xcai/models/oakX.py'),
                                  'xcai.models.oakX.Encoder.set_pretrained_meta_embeddings': ( 'models.oakx.html#encoder.set_pretrained_meta_embeddings',
                                                                                               'xcai/models/oakX.py'),
                                  'xcai.models.oakX.Encoder.unfreeze_pretrained_meta_embeddings': ( 'models.oakx.html#encoder.unfreeze_pretrained_meta_embeddings',
                                                                                                    'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK000': ('models.oakx.html#oak000', 'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK000.__init__': ('models.oakx.html#oak000.__init__', 'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK000._get_encoder_meta_kwargs': ( 'models.oakx.html#oak000._get_encoder_meta_kwargs',
                                                                                        'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK000.calibration_loss': ( 'models.oakx.html#oak000.calibration_loss',
                                                                                'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK000.compute_fusion_loss': ( 'models.oakx.html#oak000.compute_fusion_loss',
                                                                                   'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK000.compute_loss': ('models.oakx.html#oak000.compute_loss', 'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK000.compute_meta_loss': ( 'models.oakx.html#oak000.compute_meta_loss',
                                                                                 'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK000.forward': ('models.oakx.html#oak000.forward', 'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK000.freeze_meta_embeddings': ( 'models.oakx.html#oak000.freeze_meta_embeddings',
                                                                                      'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK000.get_meta_representation': ( 'models.oakx.html#oak000.get_meta_representation',
                                                                                       'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK000.init_cross_head': ( 'models.oakx.html#oak000.init_cross_head',
                                                                               'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK000.init_meta_embeddings': ( 'models.oakx.html#oak000.init_meta_embeddings',
                                                                                    'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK000.init_retrieval_head': ( 'models.oakx.html#oak000.init_retrieval_head',
                                                                                   'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK000.set_meta_embeddings': ( 'models.oakx.html#oak000.set_meta_embeddings',
                                                                                   'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK000.unfreeze_meta_embeddings': ( 'models.oakx.html#oak000.unfreeze_meta_embeddings',
                                                                                        'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK001': ('models.oakx.html#oak001', 'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK001.__init__': ('models.oakx.html#oak001.__init__', 'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK001.remap_post_init': ( 'models.oakx.html#oak001.remap_post_init',
                                                                               'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK002': ('models.oakx.html#oak002', 'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK002.__init__': ('models.oakx.html#oak002.__init__', 'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK002.forward': ('models.oakx.html#oak002.forward', 'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK002.get_label_representation': ( 'models.oakx.html#oak002.get_label_representation',
                                                                                        'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK002.init_label_embeddings': ( 'models.oakx.html#oak002.init_label_embeddings',
                                                                                     'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK003': ('models.oakx.html#oak003', 'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK003.__init__': ('models.oakx.html#oak003.__init__', 'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK003.forward': ('models.oakx.html#oak003.forward', 'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK003.get_label_representation': ( 'models.oakx.html#oak003.get_label_representation',
                                                                                        'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK003.init_label_embeddings': ( 'models.oakx.html#oak003.init_label_embeddings',
                                                                                     'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK003.set_label_embeddings': ( 'models.oakx.html#oak003.set_label_embeddings',
                                                                                    'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK003.set_label_remap': ( 'models.oakx.html#oak003.set_label_remap',
                                                                               'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK004': ('models.oakx.html#oak004', 'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK004.__init__': ('models.oakx.html#oak004.__init__', 'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK004.forward': ('models.oakx.html#oak004.forward', 'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK004.get_label_representation': ( 'models.oakx.html#oak004.get_label_representation',
                                                                                        'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK004.init_label_embeddings': ( 'models.oakx.html#oak004.init_label_embeddings',
                                                                                     'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK004.set_label_embeddings': ( 'models.oakx.html#oak004.set_label_embeddings',
                                                                                    'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK004.set_label_remap': ( 'models.oakx.html#oak004.set_label_remap',
                                                                               'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK005': ('models.oakx.html#oak005', 'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK005.__init__': ('models.oakx.html#oak005.__init__', 'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK005.remap_post_init': ( 'models.oakx.html#oak005.remap_post_init',
                                                                               'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK005Encoder': ('models.oakx.html#oak005encoder', 'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK005Encoder.__init__': ( 'models.oakx.html#oak005encoder.__init__',
                                                                               'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK005Encoder.fuse_meta_into_embeddings': ( 'models.oakx.html#oak005encoder.fuse_meta_into_embeddings',
                                                                                                'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK006': ('models.oakx.html#oak006', 'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK006.__init__': ('models.oakx.html#oak006.__init__', 'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK006._get_encoder_meta_kwargs': ( 'models.oakx.html#oak006._get_encoder_meta_kwargs',
                                                                                        'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK006.remap_post_init': ( 'models.oakx.html#oak006.remap_post_init',
                                                                               'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK006Encoder': ('models.oakx.html#oak006encoder', 'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK006Encoder.__init__': ( 'models.oakx.html#oak006encoder.__init__',
                                                                               'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK006Encoder.fuse_meta_into_embeddings': ( 'models.oakx.html#oak006encoder.fuse_meta_into_embeddings',
                                                                                                'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK006Encoder.init_embedding_projector': ( 'models.oakx.html#oak006encoder.init_embedding_projector',
                                                                                               'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK006Encoder.resize': ('models.oakx.html#oak006encoder.resize', 'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK007': ('models.oakx.html#oak007', 'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK007.__init__': ('models.oakx.html#oak007.__init__', 'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK007.remap_post_init': ( 'models.oakx.html#oak007.remap_post_init',
                                                                               'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK007Encoder': ('models.oakx.html#oak007encoder', 'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK007Encoder.__init__': ( 'models.oakx.html#oak007encoder.__init__',
                                                                               'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK007Encoder.fuse_meta_into_embeddings': ( 'models.oakx.html#oak007encoder.fuse_meta_into_embeddings',
                                                                                                'xcai/models/oakX.py'),
                                  'xcai.models.oakX.OAK007Encoder.init_embedding_projector': ( 'models.oakx.html#oak007encoder.init_embedding_projector',
                                                                                               'xcai/models/oakX.py')},
            'xcai.models.oakY': { 'xcai.models.oakY.CrossAttention003': ('models.oaky.html#crossattention003', 'xcai/models/oakY.py'),
                                  'xcai.models.oakY.CrossAttention003.__init__': ( 'models.oaky.html#crossattention003.__init__',
                                                                                   'xcai/models/oakY.py'),
                                  'xcai.models.oakY.CrossAttention003.forward': ( 'models.oaky.html#crossattention003.forward',
                                                                                  'xcai/models/oakY.py'),
                                  'xcai.models.oakY.CrossAttention003.post_init': ( 'models.oaky.html#crossattention003.post_init',
                                                                                    'xcai/models/oakY.py'),
                                  'xcai.models.oakY.Encoder': ('models.oaky.html#encoder', 'xcai/models/oakY.py'),
                                  'xcai.models.oakY.Encoder.__init__': ('models.oaky.html#encoder.__init__', 'xcai/models/oakY.py'),
                                  'xcai.models.oakY.Encoder.dr': ('models.oaky.html#encoder.dr', 'xcai/models/oakY.py'),
                                  'xcai.models.oakY.Encoder.dr_fused': ('models.oaky.html#encoder.dr_fused', 'xcai/models/oakY.py'),
                                  'xcai.models.oakY.Encoder.encode': ('models.oaky.html#encoder.encode', 'xcai/models/oakY.py'),
                                  'xcai.models.oakY.Encoder.forward': ('models.oaky.html#encoder.forward', 'xcai/models/oakY.py'),
                                  'xcai.models.oakY.Encoder.freeze_meta_embeddings': ( 'models.oaky.html#encoder.freeze_meta_embeddings',
                                                                                       'xcai/models/oakY.py'),
                                  'xcai.models.oakY.Encoder.fuse_meta_into_embeddings': ( 'models.oaky.html#encoder.fuse_meta_into_embeddings',
                                                                                          'xcai/models/oakY.py'),
                                  'xcai.models.oakY.Encoder.get_position_embeddings': ( 'models.oaky.html#encoder.get_position_embeddings',
                                                                                        'xcai/models/oakY.py'),
                                  'xcai.models.oakY.Encoder.meta': ('models.oaky.html#encoder.meta', 'xcai/models/oakY.py'),
                                  'xcai.models.oakY.Encoder.meta_unnormalized': ( 'models.oaky.html#encoder.meta_unnormalized',
                                                                                  'xcai/models/oakY.py'),
                                  'xcai.models.oakY.Encoder.resize_position_embeddings': ( 'models.oaky.html#encoder.resize_position_embeddings',
                                                                                           'xcai/models/oakY.py'),
                                  'xcai.models.oakY.Encoder.set_meta_embeddings': ( 'models.oaky.html#encoder.set_meta_embeddings',
                                                                                    'xcai/models/oakY.py'),
                                  'xcai.models.oakY.Encoder.unfreeze_meta_embeddings': ( 'models.oaky.html#encoder.unfreeze_meta_embeddings',
                                                                                         'xcai/models/oakY.py'),
                                  'xcai.models.oakY.Encoder002': ('models.oaky.html#encoder002', 'xcai/models/oakY.py'),
                                  'xcai.models.oakY.Encoder002.__init__': ('models.oaky.html#encoder002.__init__', 'xcai/models/oakY.py'),
                                  'xcai.models.oakY.Encoder002.fuse_meta_into_embeddings': ( 'models.oaky.html#encoder002.fuse_meta_into_embeddings',
                                                                                             'xcai/models/oakY.py'),
                                  'xcai.models.oakY.Encoder003': ('models.oaky.html#encoder003', 'xcai/models/oakY.py'),
                                  'xcai.models.oakY.Encoder003.__init__': ('models.oaky.html#encoder003.__init__', 'xcai/models/oakY.py'),
                                  'xcai.models.oakY.Encoder003.dr': ('models.oaky.html#encoder003.dr', 'xcai/models/oakY.py'),
                                  'xcai.models.oakY.Encoder003.dr_encode': ('models.oaky.html#encoder003.dr_encode', 'xcai/models/oakY.py'),
                                  'xcai.models.oakY.Encoder003.forward': ('models.oaky.html#encoder003.forward', 'xcai/models/oakY.py'),
                                  'xcai.models.oakY.Encoder003.fuse_meta_into_embeddings': ( 'models.oaky.html#encoder003.fuse_meta_into_embeddings',
                                                                                             'xcai/models/oakY.py'),
                                  'xcai.models.oakY.Encoder003.init_meta_encoder': ( 'models.oaky.html#encoder003.init_meta_encoder',
                                                                                     'xcai/models/oakY.py'),
                                  'xcai.models.oakY.Encoder003.meta_encode': ( 'models.oaky.html#encoder003.meta_encode',
                                                                               'xcai/models/oakY.py'),
                                  'xcai.models.oakY.Encoder004': ('models.oaky.html#encoder004', 'xcai/models/oakY.py'),
                                  'xcai.models.oakY.Encoder004.__init__': ('models.oaky.html#encoder004.__init__', 'xcai/models/oakY.py'),
                                  'xcai.models.oakY.Encoder004.dr': ('models.oaky.html#encoder004.dr', 'xcai/models/oakY.py'),
                                  'xcai.models.oakY.Encoder004.encode': ('models.oaky.html#encoder004.encode', 'xcai/models/oakY.py'),
                                  'xcai.models.oakY.Encoder004.forward': ('models.oaky.html#encoder004.forward', 'xcai/models/oakY.py'),
                                  'xcai.models.oakY.Encoder004.fuse_meta_into_embeddings': ( 'models.oaky.html#encoder004.fuse_meta_into_embeddings',
                                                                                             'xcai/models/oakY.py'),
                                  'xcai.models.oakY.Encoder005': ('models.oaky.html#encoder005', 'xcai/models/oakY.py'),
                                  'xcai.models.oakY.Encoder005.__init__': ('models.oaky.html#encoder005.__init__', 'xcai/models/oakY.py'),
                                  'xcai.models.oakY.Encoder005.fuse_meta_into_embeddings': ( 'models.oaky.html#encoder005.fuse_meta_into_embeddings',
                                                                                             'xcai/models/oakY.py'),
                                  'xcai.models.oakY.Encoder006': ('models.oaky.html#encoder006', 'xcai/models/oakY.py'),
                                  'xcai.models.oakY.Encoder006.__init__': ('models.oaky.html#encoder006.__init__', 'xcai/models/oakY.py'),
                                  'xcai.models.oakY.Encoder006.dr_encode': ('models.oaky.html#encoder006.dr_encode', 'xcai/models/oakY.py'),
                                  'xcai.models.oakY.Encoder006.forward': ('models.oaky.html#encoder006.forward', 'xcai/models/oakY.py'),
                                  'xcai.models.oakY.Encoder006.fuse_meta_into_embeddings': ( 'models.oaky.html#encoder006.fuse_meta_into_embeddings',
                                                                                             'xcai/models/oakY.py'),
                                  'xcai.models.oakY.Encoder006.meta_encode': ( 'models.oaky.html#encoder006.meta_encode',
                                                                               'xcai/models/oakY.py'),
                                  'xcai.models.oakY.Encoder006.params_from_meta_aug_prefix': ( 'models.oaky.html#encoder006.params_from_meta_aug_prefix',
                                                                                               'xcai/models/oakY.py'),
                                  'xcai.models.oakY.OAK000': ('models.oaky.html#oak000', 'xcai/models/oakY.py'),
                                  'xcai.models.oakY.OAK000.__init__': ('models.oaky.html#oak000.__init__', 'xcai/models/oakY.py'),
                                  'xcai.models.oakY.OAK000.calibration_loss': ( 'models.oaky.html#oak000.calibration_loss',
                                                                                'xcai/models/oakY.py'),
                                  'xcai.models.oakY.OAK000.compute_fusion_loss': ( 'models.oaky.html#oak000.compute_fusion_loss',
                                                                                   'xcai/models/oakY.py'),
                                  'xcai.models.oakY.OAK000.compute_loss': ('models.oaky.html#oak000.compute_loss', 'xcai/models/oakY.py'),
                                  'xcai.models.oakY.OAK000.compute_meta_loss': ( 'models.oaky.html#oak000.compute_meta_loss',
                                                                                 'xcai/models/oakY.py'),
                                  'xcai.models.oakY.OAK000.forward': ('models.oaky.html#oak000.forward', 'xcai/models/oakY.py'),
                                  'xcai.models.oakY.OAK000.get_meta_representation': ( 'models.oaky.html#oak000.get_meta_representation',
                                                                                       'xcai/models/oakY.py'),
                                  'xcai.models.oakY.OAK000.init_cross_head': ( 'models.oaky.html#oak000.init_cross_head',
                                                                               'xcai/models/oakY.py'),
                                  'xcai.models.oakY.OAK000.init_retrieval_head': ( 'models.oaky.html#oak000.init_retrieval_head',
                                                                                   'xcai/models/oakY.py'),
                                  'xcai.models.oakY.OAK001': ('models.oaky.html#oak001', 'xcai/models/oakY.py'),
                                  'xcai.models.oakY.OAK001.__init__': ('models.oaky.html#oak001.__init__', 'xcai/models/oakY.py'),
                                  'xcai.models.oakY.OAK001.remap_post_init': ( 'models.oaky.html#oak001.remap_post_init',
                                                                               'xcai/models/oakY.py'),
                                  'xcai.models.oakY.OAK002': ('models.oaky.html#oak002', 'xcai/models/oakY.py'),
                                  'xcai.models.oakY.OAK002.__init__': ('models.oaky.html#oak002.__init__', 'xcai/models/oakY.py'),
                                  'xcai.models.oakY.OAK002.remap_post_init': ( 'models.oaky.html#oak002.remap_post_init',
                                                                               'xcai/models/oakY.py'),
                                  'xcai.models.oakY.OAK003': ('models.oaky.html#oak003', 'xcai/models/oakY.py'),
                                  'xcai.models.oakY.OAK003.__init__': ('models.oaky.html#oak003.__init__', 'xcai/models/oakY.py'),
                                  'xcai.models.oakY.OAK003.init_meta_encoder': ( 'models.oaky.html#oak003.init_meta_encoder',
                                                                                 'xcai/models/oakY.py'),
                                  'xcai.models.oakY.OAK003.init_retrieval_head': ( 'models.oaky.html#oak003.init_retrieval_head',
                                                                                   'xcai/models/oakY.py'),
                                  'xcai.models.oakY.OAK003.remap_post_init': ( 'models.oaky.html#oak003.remap_post_init',
                                                                               'xcai/models/oakY.py'),
                                  'xcai.models.oakY.OAK004': ('models.oaky.html#oak004', 'xcai/models/oakY.py'),
                                  'xcai.models.oakY.OAK004.__init__': ('models.oaky.html#oak004.__init__', 'xcai/models/oakY.py'),
                                  'xcai.models.oakY.OAK004._get_encoder_meta_kwargs': ( 'models.oaky.html#oak004._get_encoder_meta_kwargs',
                                                                                        'xcai/models/oakY.py'),
                                  'xcai.models.oakY.OAK004.forward': ('models.oaky.html#oak004.forward', 'xcai/models/oakY.py'),
                                  'xcai.models.oakY.OAK004.freeze_meta_embeddings': ( 'models.oaky.html#oak004.freeze_meta_embeddings',
                                                                                      'xcai/models/oakY.py'),
                                  'xcai.models.oakY.OAK004.init_meta_embeddings': ( 'models.oaky.html#oak004.init_meta_embeddings',
                                                                                    'xcai/models/oakY.py'),
                                  'xcai.models.oakY.OAK004.init_retrieval_head': ( 'models.oaky.html#oak004.init_retrieval_head',
                                                                                   'xcai/models/oakY.py'),
                                  'xcai.models.oakY.OAK004.remap_post_init': ( 'models.oaky.html#oak004.remap_post_init',
                                                                               'xcai/models/oakY.py'),
                                  'xcai.models.oakY.OAK004.set_meta_embeddings': ( 'models.oaky.html#oak004.set_meta_embeddings',
                                                                                   'xcai/models/oakY.py'),
                                  'xcai.models.oakY.OAK004.unfreeze_meta_embeddings': ( 'models.oaky.html#oak004.unfreeze_meta_embeddings',
                                                                                        'xcai/models/oakY.py'),
                                  'xcai.models.oakY.OAK005': ('models.oaky.html#oak005', 'xcai/models/oakY.py'),
                                  'xcai.models.oakY.OAK005.__init__': ('models.oaky.html#oak005.__init__', 'xcai/models/oakY.py'),
                                  'xcai.models.oakY.OAK005._get_encoder_meta_kwargs': ( 'models.oaky.html#oak005._get_encoder_meta_kwargs',
                                                                                        'xcai/models/oakY.py'),
                                  'xcai.models.oakY.OAK005.forward': ('models.oaky.html#oak005.forward', 'xcai/models/oakY.py'),
                                  'xcai.models.oakY.OAK005.init_meta_embeddings': ( 'models.oaky.html#oak005.init_meta_embeddings',
                                                                                    'xcai/models/oakY.py'),
                                  'xcai.models.oakY.OAK005.init_meta_encoder': ( 'models.oaky.html#oak005.init_meta_encoder',
                                                                                 'xcai/models/oakY.py'),
                                  'xcai.models.oakY.OAK005.init_retrieval_head': ( 'models.oaky.html#oak005.init_retrieval_head',
                                                                                   'xcai/models/oakY.py'),
                                  'xcai.models.oakY.OAK005.remap_post_init': ( 'models.oaky.html#oak005.remap_post_init',
                                                                               'xcai/models/oakY.py'),
                                  'xcai.models.oakY.OAK005.set_meta_embeddings': ( 'models.oaky.html#oak005.set_meta_embeddings',
                                                                                   'xcai/models/oakY.py'),
                                  'xcai.models.oakY.OAK005.set_metadata_cluster_mapping': ( 'models.oaky.html#oak005.set_metadata_cluster_mapping',
                                                                                            'xcai/models/oakY.py'),
                                  'xcai.models.oakY.OAK006': ('models.oaky.html#oak006', 'xcai/models/oakY.py'),
                                  'xcai.models.oakY.OAK006.__init__': ('models.oaky.html#oak006.__init__', 'xcai/models/oakY.py'),
                                  'xcai.models.oakY.OAK006._get_encoder_meta_kwargs': ( 'models.oaky.html#oak006._get_encoder_meta_kwargs',
                                                                                        'xcai/models/oakY.py'),
                                  'xcai.models.oakY.OAK007': ('models.oaky.html#oak007', 'xcai/models/oakY.py'),
                                  'xcai.models.oakY.OAK007.__init__': ('models.oaky.html#oak007.__init__', 'xcai/models/oakY.py'),
                                  'xcai.models.oakY.OAK007.forward': ('models.oaky.html#oak007.forward', 'xcai/models/oakY.py'),
                                  'xcai.models.oakY.OAK007.get_label_representation': ( 'models.oaky.html#oak007.get_label_representation',
                                                                                        'xcai/models/oakY.py'),
                                  'xcai.models.oakY.OAK007.init_label_embeddings': ( 'models.oaky.html#oak007.init_label_embeddings',
                                                                                     'xcai/models/oakY.py'),
                                  'xcai.models.oakY.OAK007.set_label_cluster_mapping': ( 'models.oaky.html#oak007.set_label_cluster_mapping',
                                                                                         'xcai/models/oakY.py'),
                                  'xcai.models.oakY.OAK007.set_label_embeddings': ( 'models.oaky.html#oak007.set_label_embeddings',
                                                                                    'xcai/models/oakY.py')},
            'xcai.models.pais': { 'xcai.models.pais.CrossAttention': ('models.pais.html#crossattention', 'xcai/models/pais.py'),
                                  'xcai.models.pais.CrossAttention.__init__': ( 'models.pais.html#crossattention.__init__',
                                                                                'xcai/models/pais.py'),
                                  'xcai.models.pais.CrossAttention.forward': ( 'models.pais.html#crossattention.forward',
                                                                               'xcai/models/pais.py'),
                                  'xcai.models.pais.CrossAttention.post_init': ( 'models.pais.html#crossattention.post_init',
                                                                                 'xcai/models/pais.py'),
                                  'xcai.models.pais.Encoder': ('models.pais.html#encoder', 'xcai/models/pais.py'),
                                  'xcai.models.pais.Encoder.__init__': ('models.pais.html#encoder.__init__', 'xcai/models/pais.py'),
                                  'xcai.models.pais.Encoder.dr': ('models.pais.html#encoder.dr', 'xcai/models/pais.py'),
                                  'xcai.models.pais.Encoder.dr_fused': ('models.pais.html#encoder.dr_fused', 'xcai/models/pais.py'),
                                  'xcai.models.pais.Encoder.encode': ('models.pais.html#encoder.encode', 'xcai/models/pais.py'),
                                  'xcai.models.pais.Encoder.forward': ('models.pais.html#encoder.forward', 'xcai/models/pais.py'),
                                  'xcai.models.pais.Encoder.freeze_meta_embeddings': ( 'models.pais.html#encoder.freeze_meta_embeddings',
                                                                                       'xcai/models/pais.py'),
                                  'xcai.models.pais.Encoder.freeze_pretrained_meta_embeddings': ( 'models.pais.html#encoder.freeze_pretrained_meta_embeddings',
                                                                                                  'xcai/models/pais.py'),
                                  'xcai.models.pais.Encoder.fuse_meta_into_embeddings': ( 'models.pais.html#encoder.fuse_meta_into_embeddings',
                                                                                          'xcai/models/pais.py'),
                                  'xcai.models.pais.Encoder.get_position_embeddings': ( 'models.pais.html#encoder.get_position_embeddings',
                                                                                        'xcai/models/pais.py'),
                                  'xcai.models.pais.Encoder.init_meta_embeddings': ( 'models.pais.html#encoder.init_meta_embeddings',
                                                                                     'xcai/models/pais.py'),
                                  'xcai.models.pais.Encoder.meta': ('models.pais.html#encoder.meta', 'xcai/models/pais.py'),
                                  'xcai.models.pais.Encoder.meta_unnormalized': ( 'models.pais.html#encoder.meta_unnormalized',
                                                                                  'xcai/models/pais.py'),
                                  'xcai.models.pais.Encoder.resize': ('models.pais.html#encoder.resize', 'xcai/models/pais.py'),
                                  'xcai.models.pais.Encoder.resize_position_embeddings': ( 'models.pais.html#encoder.resize_position_embeddings',
                                                                                           'xcai/models/pais.py'),
                                  'xcai.models.pais.Encoder.set_meta_embeddings': ( 'models.pais.html#encoder.set_meta_embeddings',
                                                                                    'xcai/models/pais.py'),
                                  'xcai.models.pais.Encoder.set_pretrained_meta_embeddings': ( 'models.pais.html#encoder.set_pretrained_meta_embeddings',
                                                                                               'xcai/models/pais.py'),
                                  'xcai.models.pais.Encoder.unfreeze_meta_embeddings': ( 'models.pais.html#encoder.unfreeze_meta_embeddings',
                                                                                         'xcai/models/pais.py'),
                                  'xcai.models.pais.Encoder.unfreeze_pretrained_meta_embeddings': ( 'models.pais.html#encoder.unfreeze_pretrained_meta_embeddings',
                                                                                                    'xcai/models/pais.py'),
                                  'xcai.models.pais.PAI000': ('models.pais.html#pai000', 'xcai/models/pais.py'),
                                  'xcai.models.pais.PAI000.__init__': ('models.pais.html#pai000.__init__', 'xcai/models/pais.py'),
                                  'xcai.models.pais.PAI000.calibration_loss': ( 'models.pais.html#pai000.calibration_loss',
                                                                                'xcai/models/pais.py'),
                                  'xcai.models.pais.PAI000.compute_fusion_loss': ( 'models.pais.html#pai000.compute_fusion_loss',
                                                                                   'xcai/models/pais.py'),
                                  'xcai.models.pais.PAI000.compute_loss': ('models.pais.html#pai000.compute_loss', 'xcai/models/pais.py'),
                                  'xcai.models.pais.PAI000.compute_meta_loss': ( 'models.pais.html#pai000.compute_meta_loss',
                                                                                 'xcai/models/pais.py'),
                                  'xcai.models.pais.PAI000.forward': ('models.pais.html#pai000.forward', 'xcai/models/pais.py'),
                                  'xcai.models.pais.PAI000.get_meta_representation': ( 'models.pais.html#pai000.get_meta_representation',
                                                                                       'xcai/models/pais.py'),
                                  'xcai.models.pais.PAI000.init_cross_head': ( 'models.pais.html#pai000.init_cross_head',
                                                                               'xcai/models/pais.py'),
                                  'xcai.models.pais.PAI000.init_meta_embeddings': ( 'models.pais.html#pai000.init_meta_embeddings',
                                                                                    'xcai/models/pais.py'),
                                  'xcai.models.pais.PAI000.init_retrieval_head': ( 'models.pais.html#pai000.init_retrieval_head',
                                                                                   'xcai/models/pais.py'),
                                  'xcai.models.pais.PAI001': ('models.pais.html#pai001', 'xcai/models/pais.py'),
                                  'xcai.models.pais.PAI001.__init__': ('models.pais.html#pai001.__init__', 'xcai/models/pais.py'),
                                  'xcai.models.pais.PAI001.forward': ('models.pais.html#pai001.forward', 'xcai/models/pais.py'),
                                  'xcai.models.pais.PAI001.freeze_label_embeddings': ( 'models.pais.html#pai001.freeze_label_embeddings',
                                                                                       'xcai/models/pais.py'),
                                  'xcai.models.pais.PAI001.remap_post_init': ( 'models.pais.html#pai001.remap_post_init',
                                                                               'xcai/models/pais.py'),
                                  'xcai.models.pais.PAI001.set_label_embeddings': ( 'models.pais.html#pai001.set_label_embeddings',
                                                                                    'xcai/models/pais.py'),
                                  'xcai.models.pais.PAI001.unfreeze_label_embeddings': ( 'models.pais.html#pai001.unfreeze_label_embeddings',
                                                                                         'xcai/models/pais.py')},
            'xcai.models.radga': { 'xcai.models.radga.CrossAttention': ('models.radga.html#crossattention', 'xcai/models/radga.py'),
                                   'xcai.models.radga.CrossAttention.__init__': ( 'models.radga.html#crossattention.__init__',
                                                                                  'xcai/models/radga.py'),
                                   'xcai.models.radga.CrossAttention.forward': ( 'models.radga.html#crossattention.forward',
                                                                                 'xcai/models/radga.py'),
                                   'xcai.models.radga.CrossAttention.post_init': ( 'models.radga.html#crossattention.post_init',
                                                                                   'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder': ('models.radga.html#encoder', 'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder.__init__': ('models.radga.html#encoder.__init__', 'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder.add_noise': ('models.radga.html#encoder.add_noise', 'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder.dr': ('models.radga.html#encoder.dr', 'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder.dr_fused': ('models.radga.html#encoder.dr_fused', 'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder.encode': ('models.radga.html#encoder.encode', 'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder.forward': ('models.radga.html#encoder.forward', 'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder.fuse_meta_into_embeddings': ( 'models.radga.html#encoder.fuse_meta_into_embeddings',
                                                                                            'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder.get_position_embeddings': ( 'models.radga.html#encoder.get_position_embeddings',
                                                                                          'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder.meta': ('models.radga.html#encoder.meta', 'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder.meta_unnormalized': ( 'models.radga.html#encoder.meta_unnormalized',
                                                                                    'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder.resize': ('models.radga.html#encoder.resize', 'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder.resize_position_embeddings': ( 'models.radga.html#encoder.resize_position_embeddings',
                                                                                             'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder003': ('models.radga.html#encoder003', 'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder003.__init__': ( 'models.radga.html#encoder003.__init__',
                                                                              'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder003.forward': ('models.radga.html#encoder003.forward', 'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder003.fuse_meta_into_embeddings': ( 'models.radga.html#encoder003.fuse_meta_into_embeddings',
                                                                                               'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder004': ('models.radga.html#encoder004', 'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder004.__init__': ( 'models.radga.html#encoder004.__init__',
                                                                              'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder004.fuse_meta_into_embeddings': ( 'models.radga.html#encoder004.fuse_meta_into_embeddings',
                                                                                               'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder005': ('models.radga.html#encoder005', 'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder005.__init__': ( 'models.radga.html#encoder005.__init__',
                                                                              'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder005.fuse_meta_into_embeddings': ( 'models.radga.html#encoder005.fuse_meta_into_embeddings',
                                                                                               'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder006': ('models.radga.html#encoder006', 'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder006.__init__': ( 'models.radga.html#encoder006.__init__',
                                                                              'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder006.add_noise': ( 'models.radga.html#encoder006.add_noise',
                                                                               'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder006.fuse_meta_into_embeddings': ( 'models.radga.html#encoder006.fuse_meta_into_embeddings',
                                                                                               'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder007': ('models.radga.html#encoder007', 'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder007.__init__': ( 'models.radga.html#encoder007.__init__',
                                                                              'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder007.fuse_meta_into_embeddings': ( 'models.radga.html#encoder007.fuse_meta_into_embeddings',
                                                                                               'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder008': ('models.radga.html#encoder008', 'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder008.__init__': ( 'models.radga.html#encoder008.__init__',
                                                                              'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder008.forward': ('models.radga.html#encoder008.forward', 'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder008.freeze_meta_embeddings': ( 'models.radga.html#encoder008.freeze_meta_embeddings',
                                                                                            'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder008.fuse_meta_into_embeddings': ( 'models.radga.html#encoder008.fuse_meta_into_embeddings',
                                                                                               'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder008.resize': ('models.radga.html#encoder008.resize', 'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder008.set_meta_embeddings': ( 'models.radga.html#encoder008.set_meta_embeddings',
                                                                                         'xcai/models/radga.py'),
                                   'xcai.models.radga.Encoder008.unfreeze_meta_embeddings': ( 'models.radga.html#encoder008.unfreeze_meta_embeddings',
                                                                                              'xcai/models/radga.py'),
                                   'xcai.models.radga.EncoderOutput': ('models.radga.html#encoderoutput', 'xcai/models/radga.py'),
                                   'xcai.models.radga.GatedCrossAttention': ( 'models.radga.html#gatedcrossattention',
                                                                              'xcai/models/radga.py'),
                                   'xcai.models.radga.GatedCrossAttention.__init__': ( 'models.radga.html#gatedcrossattention.__init__',
                                                                                       'xcai/models/radga.py'),
                                   'xcai.models.radga.GatedCrossAttention.forward': ( 'models.radga.html#gatedcrossattention.forward',
                                                                                      'xcai/models/radga.py'),
                                   'xcai.models.radga.GatedCrossAttention.post_init': ( 'models.radga.html#gatedcrossattention.post_init',
                                                                                        'xcai/models/radga.py'),
                                   'xcai.models.radga.GatedCrossAttention2': ( 'models.radga.html#gatedcrossattention2',
                                                                               'xcai/models/radga.py'),
                                   'xcai.models.radga.GatedCrossAttention2.__init__': ( 'models.radga.html#gatedcrossattention2.__init__',
                                                                                        'xcai/models/radga.py'),
                                   'xcai.models.radga.GatedCrossAttention2.forward': ( 'models.radga.html#gatedcrossattention2.forward',
                                                                                       'xcai/models/radga.py'),
                                   'xcai.models.radga.GatedCrossAttention2.post_init': ( 'models.radga.html#gatedcrossattention2.post_init',
                                                                                         'xcai/models/radga.py'),
                                   'xcai.models.radga.GenerationHead': ('models.radga.html#generationhead', 'xcai/models/radga.py'),
                                   'xcai.models.radga.GenerationHead.__init__': ( 'models.radga.html#generationhead.__init__',
                                                                                  'xcai/models/radga.py'),
                                   'xcai.models.radga.GenerationHead.forward': ( 'models.radga.html#generationhead.forward',
                                                                                 'xcai/models/radga.py'),
                                   'xcai.models.radga.Parameters': ('models.radga.html#parameters', 'xcai/models/radga.py'),
                                   'xcai.models.radga.Parameters.from_feat_meta_aug_prefix': ( 'models.radga.html#parameters.from_feat_meta_aug_prefix',
                                                                                               'xcai/models/radga.py'),
                                   'xcai.models.radga.Parameters.from_meta_aug_prefix': ( 'models.radga.html#parameters.from_meta_aug_prefix',
                                                                                          'xcai/models/radga.py'),
                                   'xcai.models.radga.Parameters.from_meta_pred_prefix': ( 'models.radga.html#parameters.from_meta_pred_prefix',
                                                                                           'xcai/models/radga.py'),
                                   'xcai.models.radga.Parameters.get_meta_loss_weights': ( 'models.radga.html#parameters.get_meta_loss_weights',
                                                                                           'xcai/models/radga.py'),
                                   'xcai.models.radga.Pooling': ('models.radga.html#pooling', 'xcai/models/radga.py'),
                                   'xcai.models.radga.Pooling.mean_pooling': ( 'models.radga.html#pooling.mean_pooling',
                                                                               'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD000': ('models.radga.html#rad000', 'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD000.__init__': ('models.radga.html#rad000.__init__', 'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD000.compute_fusion_loss': ( 'models.radga.html#rad000.compute_fusion_loss',
                                                                                     'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD000.compute_loss': ( 'models.radga.html#rad000.compute_loss',
                                                                              'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD000.compute_meta_loss': ( 'models.radga.html#rad000.compute_meta_loss',
                                                                                   'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD000.disable_noise': ( 'models.radga.html#rad000.disable_noise',
                                                                               'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD000.forward': ('models.radga.html#rad000.forward', 'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD000.get_meta_representation': ( 'models.radga.html#rad000.get_meta_representation',
                                                                                         'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD000.get_noise': ('models.radga.html#rad000.get_noise', 'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD000.init_cross_head': ( 'models.radga.html#rad000.init_cross_head',
                                                                                 'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD000.init_retrieval_head': ( 'models.radga.html#rad000.init_retrieval_head',
                                                                                     'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD000.set_noise': ('models.radga.html#rad000.set_noise', 'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD001': ('models.radga.html#rad001', 'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD001.__init__': ('models.radga.html#rad001.__init__', 'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD001.compute_loss': ( 'models.radga.html#rad001.compute_loss',
                                                                              'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD001.forward': ('models.radga.html#rad001.forward', 'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD001.get_last_item_mask': ( 'models.radga.html#rad001.get_last_item_mask',
                                                                                    'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD001.init_generation_head': ( 'models.radga.html#rad001.init_generation_head',
                                                                                      'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD001.remap_post_init': ( 'models.radga.html#rad001.remap_post_init',
                                                                                 'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD001Encoder': ('models.radga.html#rad001encoder', 'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD001Encoder.__init__': ( 'models.radga.html#rad001encoder.__init__',
                                                                                 'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD001Encoder.forward': ( 'models.radga.html#rad001encoder.forward',
                                                                                'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD001Encoder.gen': ('models.radga.html#rad001encoder.gen', 'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD001Encoder.get_output_embeddings': ( 'models.radga.html#rad001encoder.get_output_embeddings',
                                                                                              'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD001Encoder.set_output_embeddings': ( 'models.radga.html#rad001encoder.set_output_embeddings',
                                                                                              'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD002': ('models.radga.html#rad002', 'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD002.__init__': ('models.radga.html#rad002.__init__', 'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD002.remap_post_init': ( 'models.radga.html#rad002.remap_post_init',
                                                                                 'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD003': ('models.radga.html#rad003', 'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD003.__init__': ('models.radga.html#rad003.__init__', 'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD003.calibration_loss': ( 'models.radga.html#rad003.calibration_loss',
                                                                                  'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD003.forward': ('models.radga.html#rad003.forward', 'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD003.init_cross_gate': ( 'models.radga.html#rad003.init_cross_gate',
                                                                                 'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD003.remap_post_init': ( 'models.radga.html#rad003.remap_post_init',
                                                                                 'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD004': ('models.radga.html#rad004', 'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD004.__init__': ('models.radga.html#rad004.__init__', 'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD004.init_cross_gate': ( 'models.radga.html#rad004.init_cross_gate',
                                                                                 'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD004.remap_post_init': ( 'models.radga.html#rad004.remap_post_init',
                                                                                 'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD005': ('models.radga.html#rad005', 'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD005.__init__': ('models.radga.html#rad005.__init__', 'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD005.init_cross_gate': ( 'models.radga.html#rad005.init_cross_gate',
                                                                                 'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD005.remap_post_init': ( 'models.radga.html#rad005.remap_post_init',
                                                                                 'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD006': ('models.radga.html#rad006', 'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD006.__init__': ('models.radga.html#rad006.__init__', 'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD006.calibration_loss': ( 'models.radga.html#rad006.calibration_loss',
                                                                                  'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD006.forward': ('models.radga.html#rad006.forward', 'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD006.remap_post_init': ( 'models.radga.html#rad006.remap_post_init',
                                                                                 'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD007': ('models.radga.html#rad007', 'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD007.__init__': ('models.radga.html#rad007.__init__', 'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD007.init_cross_gate': ( 'models.radga.html#rad007.init_cross_gate',
                                                                                 'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD007.remap_post_init': ( 'models.radga.html#rad007.remap_post_init',
                                                                                 'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD008': ('models.radga.html#rad008', 'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD008.__init__': ('models.radga.html#rad008.__init__', 'xcai/models/radga.py'),
                                   'xcai.models.radga.RAD008.remap_post_init': ( 'models.radga.html#rad008.remap_post_init',
                                                                                 'xcai/models/radga.py'),
                                   'xcai.models.radga.RADOutput': ('models.radga.html#radoutput', 'xcai/models/radga.py'),
                                   'xcai.models.radga.RepresentationHead': ('models.radga.html#representationhead', 'xcai/models/radga.py'),
                                   'xcai.models.radga.RepresentationHead.__init__': ( 'models.radga.html#representationhead.__init__',
                                                                                      'xcai/models/radga.py'),
                                   'xcai.models.radga.RepresentationHead.forward': ( 'models.radga.html#representationhead.forward',
                                                                                     'xcai/models/radga.py'),
                                   'xcai.models.radga.RepresentationHead.post_init': ( 'models.radga.html#representationhead.post_init',
                                                                                       'xcai/models/radga.py')},
            'xcai.models.radgaX': { 'xcai.models.radgaX.CrossAttention': ('models.radgax.html#crossattention', 'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.CrossAttention.__init__': ( 'models.radgax.html#crossattention.__init__',
                                                                                    'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.CrossAttention.forward': ( 'models.radgax.html#crossattention.forward',
                                                                                   'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.CrossAttention.post_init': ( 'models.radgax.html#crossattention.post_init',
                                                                                     'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Encoder': ('models.radgax.html#encoder', 'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Encoder.__init__': ('models.radgax.html#encoder.__init__', 'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Encoder.add_noise': ( 'models.radgax.html#encoder.add_noise',
                                                                              'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Encoder.dr': ('models.radgax.html#encoder.dr', 'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Encoder.encode': ('models.radgax.html#encoder.encode', 'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Encoder.forward': ('models.radgax.html#encoder.forward', 'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Encoder.fuse_meta_into_embeddings': ( 'models.radgax.html#encoder.fuse_meta_into_embeddings',
                                                                                              'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Encoder.gen': ('models.radgax.html#encoder.gen', 'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Encoder.get_noise': ( 'models.radgax.html#encoder.get_noise',
                                                                              'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Encoder.get_output_embeddings': ( 'models.radgax.html#encoder.get_output_embeddings',
                                                                                          'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Encoder.get_position_embeddings': ( 'models.radgax.html#encoder.get_position_embeddings',
                                                                                            'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Encoder.meta': ('models.radgax.html#encoder.meta', 'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Encoder.meta_unnormalized': ( 'models.radgax.html#encoder.meta_unnormalized',
                                                                                      'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Encoder.resize': ('models.radgax.html#encoder.resize', 'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Encoder.resize_position_embeddings': ( 'models.radgax.html#encoder.resize_position_embeddings',
                                                                                               'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Encoder.set_output_embeddings': ( 'models.radgax.html#encoder.set_output_embeddings',
                                                                                          'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Encoder002': ('models.radgax.html#encoder002', 'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Encoder002.__init__': ( 'models.radgax.html#encoder002.__init__',
                                                                                'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Encoder002.add_noise': ( 'models.radgax.html#encoder002.add_noise',
                                                                                 'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Encoder002.dr': ('models.radgax.html#encoder002.dr', 'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Encoder002.encode': ( 'models.radgax.html#encoder002.encode',
                                                                              'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Encoder002.forward': ( 'models.radgax.html#encoder002.forward',
                                                                               'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Encoder002.fuse_meta_into_embeddings': ( 'models.radgax.html#encoder002.fuse_meta_into_embeddings',
                                                                                                 'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Encoder002.get_noise': ( 'models.radgax.html#encoder002.get_noise',
                                                                                 'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Encoder002.get_position_embeddings': ( 'models.radgax.html#encoder002.get_position_embeddings',
                                                                                               'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Encoder002.meta': ('models.radgax.html#encoder002.meta', 'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Encoder002.meta_unnormalized': ( 'models.radgax.html#encoder002.meta_unnormalized',
                                                                                         'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Encoder002.resize': ( 'models.radgax.html#encoder002.resize',
                                                                              'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Encoder002.resize_position_embeddings': ( 'models.radgax.html#encoder002.resize_position_embeddings',
                                                                                                  'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Encoder003': ('models.radgax.html#encoder003', 'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Encoder003.__init__': ( 'models.radgax.html#encoder003.__init__',
                                                                                'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Encoder003.dr': ('models.radgax.html#encoder003.dr', 'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Encoder003.encode': ( 'models.radgax.html#encoder003.encode',
                                                                              'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Encoder003.forward': ( 'models.radgax.html#encoder003.forward',
                                                                               'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Encoder003.fuse_meta_into_embeddings': ( 'models.radgax.html#encoder003.fuse_meta_into_embeddings',
                                                                                                 'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Encoder003.fused_dr': ( 'models.radgax.html#encoder003.fused_dr',
                                                                                'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Encoder003.get_position_embeddings': ( 'models.radgax.html#encoder003.get_position_embeddings',
                                                                                               'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Encoder003.meta': ('models.radgax.html#encoder003.meta', 'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Encoder003.meta_unnormalized': ( 'models.radgax.html#encoder003.meta_unnormalized',
                                                                                         'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Encoder003.resize_position_embeddings': ( 'models.radgax.html#encoder003.resize_position_embeddings',
                                                                                                  'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Encoder004': ('models.radgax.html#encoder004', 'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Encoder004.__init__': ( 'models.radgax.html#encoder004.__init__',
                                                                                'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Encoder004.add_noise': ( 'models.radgax.html#encoder004.add_noise',
                                                                                 'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Encoder004.dr': ('models.radgax.html#encoder004.dr', 'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Encoder004.encode': ( 'models.radgax.html#encoder004.encode',
                                                                              'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Encoder004.forward': ( 'models.radgax.html#encoder004.forward',
                                                                               'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Encoder004.fuse_meta_into_embeddings': ( 'models.radgax.html#encoder004.fuse_meta_into_embeddings',
                                                                                                 'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Encoder004.get_position_embeddings': ( 'models.radgax.html#encoder004.get_position_embeddings',
                                                                                               'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Encoder004.meta': ('models.radgax.html#encoder004.meta', 'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Encoder004.meta_unnormalized': ( 'models.radgax.html#encoder004.meta_unnormalized',
                                                                                         'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Encoder004.resize': ( 'models.radgax.html#encoder004.resize',
                                                                              'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Encoder004.resize_position_embeddings': ( 'models.radgax.html#encoder004.resize_position_embeddings',
                                                                                                  'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.EncoderOutput': ('models.radgax.html#encoderoutput', 'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.GatedCrossAttention': ( 'models.radgax.html#gatedcrossattention',
                                                                                'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.GatedCrossAttention.__init__': ( 'models.radgax.html#gatedcrossattention.__init__',
                                                                                         'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.GatedCrossAttention.forward': ( 'models.radgax.html#gatedcrossattention.forward',
                                                                                        'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.GatedCrossAttention.post_init': ( 'models.radgax.html#gatedcrossattention.post_init',
                                                                                          'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.GenerationHead': ('models.radgax.html#generationhead', 'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.GenerationHead.__init__': ( 'models.radgax.html#generationhead.__init__',
                                                                                    'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.GenerationHead.forward': ( 'models.radgax.html#generationhead.forward',
                                                                                   'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Parameters': ('models.radgax.html#parameters', 'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Parameters.from_feat_meta_aug_prefix': ( 'models.radgax.html#parameters.from_feat_meta_aug_prefix',
                                                                                                 'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Parameters.from_meta_aug_prefix': ( 'models.radgax.html#parameters.from_meta_aug_prefix',
                                                                                            'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Parameters.from_meta_pred_prefix': ( 'models.radgax.html#parameters.from_meta_pred_prefix',
                                                                                             'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Parameters.get_meta_loss_weights': ( 'models.radgax.html#parameters.get_meta_loss_weights',
                                                                                             'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Pooling': ('models.radgax.html#pooling', 'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.Pooling.mean_pooling': ( 'models.radgax.html#pooling.mean_pooling',
                                                                                 'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RAD001': ('models.radgax.html#rad001', 'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RAD001.__init__': ('models.radgax.html#rad001.__init__', 'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RAD001.compute_fusion_loss': ( 'models.radgax.html#rad001.compute_fusion_loss',
                                                                                       'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RAD001.compute_loss': ( 'models.radgax.html#rad001.compute_loss',
                                                                                'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RAD001.compute_meta_loss': ( 'models.radgax.html#rad001.compute_meta_loss',
                                                                                     'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RAD001.disable_noise': ( 'models.radgax.html#rad001.disable_noise',
                                                                                 'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RAD001.forward': ('models.radgax.html#rad001.forward', 'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RAD001.get_last_item_mask': ( 'models.radgax.html#rad001.get_last_item_mask',
                                                                                      'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RAD001.get_meta_representation': ( 'models.radgax.html#rad001.get_meta_representation',
                                                                                           'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RAD001.get_noise': ('models.radgax.html#rad001.get_noise', 'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RAD001.init_generation_head': ( 'models.radgax.html#rad001.init_generation_head',
                                                                                        'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RAD001.init_retrieval_head': ( 'models.radgax.html#rad001.init_retrieval_head',
                                                                                       'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RAD001.remap_post_init': ( 'models.radgax.html#rad001.remap_post_init',
                                                                                   'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RAD001.set_noise': ('models.radgax.html#rad001.set_noise', 'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RAD002': ('models.radgax.html#rad002', 'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RAD002.__init__': ('models.radgax.html#rad002.__init__', 'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RAD002.compute_fusion_loss': ( 'models.radgax.html#rad002.compute_fusion_loss',
                                                                                       'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RAD002.compute_loss': ( 'models.radgax.html#rad002.compute_loss',
                                                                                'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RAD002.compute_meta_loss': ( 'models.radgax.html#rad002.compute_meta_loss',
                                                                                     'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RAD002.disable_noise': ( 'models.radgax.html#rad002.disable_noise',
                                                                                 'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RAD002.forward': ('models.radgax.html#rad002.forward', 'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RAD002.get_last_item_mask': ( 'models.radgax.html#rad002.get_last_item_mask',
                                                                                      'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RAD002.get_meta_representation': ( 'models.radgax.html#rad002.get_meta_representation',
                                                                                           'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RAD002.get_noise': ('models.radgax.html#rad002.get_noise', 'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RAD002.init_cross_head': ( 'models.radgax.html#rad002.init_cross_head',
                                                                                   'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RAD002.init_retrieval_head': ( 'models.radgax.html#rad002.init_retrieval_head',
                                                                                       'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RAD002.remap_post_init': ( 'models.radgax.html#rad002.remap_post_init',
                                                                                   'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RAD002.set_noise': ('models.radgax.html#rad002.set_noise', 'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RAD003': ('models.radgax.html#rad003', 'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RAD003.__init__': ('models.radgax.html#rad003.__init__', 'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RAD003.calibration_loss': ( 'models.radgax.html#rad003.calibration_loss',
                                                                                    'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RAD003.compute_loss': ( 'models.radgax.html#rad003.compute_loss',
                                                                                'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RAD003.compute_meta_loss': ( 'models.radgax.html#rad003.compute_meta_loss',
                                                                                     'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RAD003.forward': ('models.radgax.html#rad003.forward', 'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RAD003.get_meta_representation': ( 'models.radgax.html#rad003.get_meta_representation',
                                                                                           'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RAD003.init_cross_gate': ( 'models.radgax.html#rad003.init_cross_gate',
                                                                                   'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RAD003.init_cross_head': ( 'models.radgax.html#rad003.init_cross_head',
                                                                                   'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RAD003.init_retrieval_head': ( 'models.radgax.html#rad003.init_retrieval_head',
                                                                                       'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RAD003.remap_post_init': ( 'models.radgax.html#rad003.remap_post_init',
                                                                                   'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RAD004': ('models.radgax.html#rad004', 'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RAD004.__init__': ('models.radgax.html#rad004.__init__', 'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RAD004.compute_loss': ( 'models.radgax.html#rad004.compute_loss',
                                                                                'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RAD004.compute_meta_loss': ( 'models.radgax.html#rad004.compute_meta_loss',
                                                                                     'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RAD004.disable_noise': ( 'models.radgax.html#rad004.disable_noise',
                                                                                 'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RAD004.forward': ('models.radgax.html#rad004.forward', 'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RAD004.get_meta_representation': ( 'models.radgax.html#rad004.get_meta_representation',
                                                                                           'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RAD004.get_noise': ('models.radgax.html#rad004.get_noise', 'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RAD004.init_cross_gate': ( 'models.radgax.html#rad004.init_cross_gate',
                                                                                   'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RAD004.init_cross_head': ( 'models.radgax.html#rad004.init_cross_head',
                                                                                   'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RAD004.init_retrieval_head': ( 'models.radgax.html#rad004.init_retrieval_head',
                                                                                       'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RAD004.remap_post_init': ( 'models.radgax.html#rad004.remap_post_init',
                                                                                   'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RAD004.set_noise': ('models.radgax.html#rad004.set_noise', 'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RADOutput': ('models.radgax.html#radoutput', 'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RepresentationHead': ( 'models.radgax.html#representationhead',
                                                                               'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RepresentationHead.__init__': ( 'models.radgax.html#representationhead.__init__',
                                                                                        'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RepresentationHead.forward': ( 'models.radgax.html#representationhead.forward',
                                                                                       'xcai/models/radgaX.py'),
                                    'xcai.models.radgaX.RepresentationHead.post_init': ( 'models.radgax.html#representationhead.post_init',
                                                                                         'xcai/models/radgaX.py')},
            'xcai.models.radga_lora': { 'xcai.models.radga_lora.CrossAttention': ( 'models.radga_lora.html#crossattention',
                                                                                   'xcai/models/radga_lora.py'),
                                        'xcai.models.radga_lora.CrossAttention.__init__': ( 'models.radga_lora.html#crossattention.__init__',
                                                                                            'xcai/models/radga_lora.py'),
                                        'xcai.models.radga_lora.CrossAttention.forward': ( 'models.radga_lora.html#crossattention.forward',
                                                                                           'xcai/models/radga_lora.py'),
                                        'xcai.models.radga_lora.CrossAttention.post_init': ( 'models.radga_lora.html#crossattention.post_init',
                                                                                             'xcai/models/radga_lora.py'),
                                        'xcai.models.radga_lora.Encoder': ('models.radga_lora.html#encoder', 'xcai/models/radga_lora.py'),
                                        'xcai.models.radga_lora.Encoder.__init__': ( 'models.radga_lora.html#encoder.__init__',
                                                                                     'xcai/models/radga_lora.py'),
                                        'xcai.models.radga_lora.Encoder._mark_entire_encoder_as_trainable': ( 'models.radga_lora.html#encoder._mark_entire_encoder_as_trainable',
                                                                                                              'xcai/models/radga_lora.py'),
                                        'xcai.models.radga_lora.Encoder._mark_only_adapters_as_trainable': ( 'models.radga_lora.html#encoder._mark_only_adapters_as_trainable',
                                                                                                             'xcai/models/radga_lora.py'),
                                        'xcai.models.radga_lora.Encoder.dr': ( 'models.radga_lora.html#encoder.dr',
                                                                               'xcai/models/radga_lora.py'),
                                        'xcai.models.radga_lora.Encoder.dr_fused': ( 'models.radga_lora.html#encoder.dr_fused',
                                                                                     'xcai/models/radga_lora.py'),
                                        'xcai.models.radga_lora.Encoder.encode': ( 'models.radga_lora.html#encoder.encode',
                                                                                   'xcai/models/radga_lora.py'),
                                        'xcai.models.radga_lora.Encoder.forward': ( 'models.radga_lora.html#encoder.forward',
                                                                                    'xcai/models/radga_lora.py'),
                                        'xcai.models.radga_lora.Encoder.fuse_meta_into_embeddings': ( 'models.radga_lora.html#encoder.fuse_meta_into_embeddings',
                                                                                                      'xcai/models/radga_lora.py'),
                                        'xcai.models.radga_lora.Encoder.get_position_embeddings': ( 'models.radga_lora.html#encoder.get_position_embeddings',
                                                                                                    'xcai/models/radga_lora.py'),
                                        'xcai.models.radga_lora.Encoder.meta': ( 'models.radga_lora.html#encoder.meta',
                                                                                 'xcai/models/radga_lora.py'),
                                        'xcai.models.radga_lora.Encoder.meta_unnormalized': ( 'models.radga_lora.html#encoder.meta_unnormalized',
                                                                                              'xcai/models/radga_lora.py'),
                                        'xcai.models.radga_lora.Encoder.resize': ( 'models.radga_lora.html#encoder.resize',
                                                                                   'xcai/models/radga_lora.py'),
                                        'xcai.models.radga_lora.Encoder.resize_position_embeddings': ( 'models.radga_lora.html#encoder.resize_position_embeddings',
                                                                                                       'xcai/models/radga_lora.py'),
                                        'xcai.models.radga_lora.Encoder002': ( 'models.radga_lora.html#encoder002',
                                                                               'xcai/models/radga_lora.py'),
                                        'xcai.models.radga_lora.Encoder002.__init__': ( 'models.radga_lora.html#encoder002.__init__',
                                                                                        'xcai/models/radga_lora.py'),
                                        'xcai.models.radga_lora.Encoder002.forward': ( 'models.radga_lora.html#encoder002.forward',
                                                                                       'xcai/models/radga_lora.py'),
                                        'xcai.models.radga_lora.EncoderOutput': ( 'models.radga_lora.html#encoderoutput',
                                                                                  'xcai/models/radga_lora.py'),
                                        'xcai.models.radga_lora.GenerationHead': ( 'models.radga_lora.html#generationhead',
                                                                                   'xcai/models/radga_lora.py'),
                                        'xcai.models.radga_lora.GenerationHead.__init__': ( 'models.radga_lora.html#generationhead.__init__',
                                                                                            'xcai/models/radga_lora.py'),
                                        'xcai.models.radga_lora.GenerationHead.forward': ( 'models.radga_lora.html#generationhead.forward',
                                                                                           'xcai/models/radga_lora.py'),
                                        'xcai.models.radga_lora.Parameters': ( 'models.radga_lora.html#parameters',
                                                                               'xcai/models/radga_lora.py'),
                                        'xcai.models.radga_lora.Parameters.from_feat_meta_aug_prefix': ( 'models.radga_lora.html#parameters.from_feat_meta_aug_prefix',
                                                                                                         'xcai/models/radga_lora.py'),
                                        'xcai.models.radga_lora.Parameters.from_meta_aug_prefix': ( 'models.radga_lora.html#parameters.from_meta_aug_prefix',
                                                                                                    'xcai/models/radga_lora.py'),
                                        'xcai.models.radga_lora.Parameters.from_meta_pred_prefix': ( 'models.radga_lora.html#parameters.from_meta_pred_prefix',
                                                                                                     'xcai/models/radga_lora.py'),
                                        'xcai.models.radga_lora.Parameters.get_meta_loss_weights': ( 'models.radga_lora.html#parameters.get_meta_loss_weights',
                                                                                                     'xcai/models/radga_lora.py'),
                                        'xcai.models.radga_lora.Pooling': ('models.radga_lora.html#pooling', 'xcai/models/radga_lora.py'),
                                        'xcai.models.radga_lora.Pooling.mean_pooling': ( 'models.radga_lora.html#pooling.mean_pooling',
                                                                                         'xcai/models/radga_lora.py'),
                                        'xcai.models.radga_lora.RAD001': ('models.radga_lora.html#rad001', 'xcai/models/radga_lora.py'),
                                        'xcai.models.radga_lora.RAD001.__init__': ( 'models.radga_lora.html#rad001.__init__',
                                                                                    'xcai/models/radga_lora.py'),
                                        'xcai.models.radga_lora.RAD001.calibration_loss': ( 'models.radga_lora.html#rad001.calibration_loss',
                                                                                            'xcai/models/radga_lora.py'),
                                        'xcai.models.radga_lora.RAD001.compute_fusion_loss': ( 'models.radga_lora.html#rad001.compute_fusion_loss',
                                                                                               'xcai/models/radga_lora.py'),
                                        'xcai.models.radga_lora.RAD001.compute_loss': ( 'models.radga_lora.html#rad001.compute_loss',
                                                                                        'xcai/models/radga_lora.py'),
                                        'xcai.models.radga_lora.RAD001.compute_meta_loss': ( 'models.radga_lora.html#rad001.compute_meta_loss',
                                                                                             'xcai/models/radga_lora.py'),
                                        'xcai.models.radga_lora.RAD001.forward': ( 'models.radga_lora.html#rad001.forward',
                                                                                   'xcai/models/radga_lora.py'),
                                        'xcai.models.radga_lora.RAD001.get_meta_representation': ( 'models.radga_lora.html#rad001.get_meta_representation',
                                                                                                   'xcai/models/radga_lora.py'),
                                        'xcai.models.radga_lora.RAD001.init_cross_head': ( 'models.radga_lora.html#rad001.init_cross_head',
                                                                                           'xcai/models/radga_lora.py'),
                                        'xcai.models.radga_lora.RAD001.init_retrieval_head': ( 'models.radga_lora.html#rad001.init_retrieval_head',
                                                                                               'xcai/models/radga_lora.py'),
                                        'xcai.models.radga_lora.RAD002': ('models.radga_lora.html#rad002', 'xcai/models/radga_lora.py'),
                                        'xcai.models.radga_lora.RAD002.__init__': ( 'models.radga_lora.html#rad002.__init__',
                                                                                    'xcai/models/radga_lora.py'),
                                        'xcai.models.radga_lora.RADOutput': ( 'models.radga_lora.html#radoutput',
                                                                              'xcai/models/radga_lora.py'),
                                        'xcai.models.radga_lora.RepresentationHead': ( 'models.radga_lora.html#representationhead',
                                                                                       'xcai/models/radga_lora.py'),
                                        'xcai.models.radga_lora.RepresentationHead.__init__': ( 'models.radga_lora.html#representationhead.__init__',
                                                                                                'xcai/models/radga_lora.py'),
                                        'xcai.models.radga_lora.RepresentationHead.forward': ( 'models.radga_lora.html#representationhead.forward',
                                                                                               'xcai/models/radga_lora.py'),
                                        'xcai.models.radga_lora.RepresentationHead.post_init': ( 'models.radga_lora.html#representationhead.post_init',
                                                                                                 'xcai/models/radga_lora.py')},
            'xcai.optimizers.oakX': { 'xcai.optimizers.oakX.MultipleOptimizer': ( 'optimizers.oakx.html#multipleoptimizer',
                                                                                  'xcai/optimizers/oakX.py'),
                                      'xcai.optimizers.oakX.MultipleOptimizer.__getstate__': ( 'optimizers.oakx.html#multipleoptimizer.__getstate__',
                                                                                               'xcai/optimizers/oakX.py'),
                                      'xcai.optimizers.oakX.MultipleOptimizer.__init__': ( 'optimizers.oakx.html#multipleoptimizer.__init__',
                                                                                           'xcai/optimizers/oakX.py'),
                                      'xcai.optimizers.oakX.MultipleOptimizer.__repr__': ( 'optimizers.oakx.html#multipleoptimizer.__repr__',
                                                                                           'xcai/optimizers/oakX.py'),
                                      'xcai.optimizers.oakX.MultipleOptimizer.__setstate__': ( 'optimizers.oakx.html#multipleoptimizer.__setstate__',
                                                                                               'xcai/optimizers/oakX.py'),
                                      'xcai.optimizers.oakX.MultipleOptimizer._hook_for_profile': ( 'optimizers.oakx.html#multipleoptimizer._hook_for_profile',
                                                                                                    'xcai/optimizers/oakX.py'),
                                      'xcai.optimizers.oakX.MultipleOptimizer.add_param_group': ( 'optimizers.oakx.html#multipleoptimizer.add_param_group',
                                                                                                  'xcai/optimizers/oakX.py'),
                                      'xcai.optimizers.oakX.MultipleOptimizer.load_state_dict': ( 'optimizers.oakx.html#multipleoptimizer.load_state_dict',
                                                                                                  'xcai/optimizers/oakX.py'),
                                      'xcai.optimizers.oakX.MultipleOptimizer.param_groups': ( 'optimizers.oakx.html#multipleoptimizer.param_groups',
                                                                                               'xcai/optimizers/oakX.py'),
                                      'xcai.optimizers.oakX.MultipleOptimizer.state': ( 'optimizers.oakx.html#multipleoptimizer.state',
                                                                                        'xcai/optimizers/oakX.py'),
                                      'xcai.optimizers.oakX.MultipleOptimizer.state_dict': ( 'optimizers.oakx.html#multipleoptimizer.state_dict',
                                                                                             'xcai/optimizers/oakX.py'),
                                      'xcai.optimizers.oakX.MultipleOptimizer.step': ( 'optimizers.oakx.html#multipleoptimizer.step',
                                                                                       'xcai/optimizers/oakX.py'),
                                      'xcai.optimizers.oakX.MultipleOptimizer.zero_grad': ( 'optimizers.oakx.html#multipleoptimizer.zero_grad',
                                                                                            'xcai/optimizers/oakX.py'),
                                      'xcai.optimizers.oakX.MultipleScheduler': ( 'optimizers.oakx.html#multiplescheduler',
                                                                                  'xcai/optimizers/oakX.py'),
                                      'xcai.optimizers.oakX.MultipleScheduler.__init__': ( 'optimizers.oakx.html#multiplescheduler.__init__',
                                                                                           'xcai/optimizers/oakX.py'),
                                      'xcai.optimizers.oakX.MultipleScheduler.get_last_lr': ( 'optimizers.oakx.html#multiplescheduler.get_last_lr',
                                                                                              'xcai/optimizers/oakX.py'),
                                      'xcai.optimizers.oakX.MultipleScheduler.load_state_dict': ( 'optimizers.oakx.html#multiplescheduler.load_state_dict',
                                                                                                  'xcai/optimizers/oakX.py'),
                                      'xcai.optimizers.oakX.MultipleScheduler.state_dict': ( 'optimizers.oakx.html#multiplescheduler.state_dict',
                                                                                             'xcai/optimizers/oakX.py'),
                                      'xcai.optimizers.oakX.MultipleScheduler.step': ( 'optimizers.oakx.html#multiplescheduler.step',
                                                                                       'xcai/optimizers/oakX.py')},
            'xcai.plot': {'xcai.plot.set_plot_defaults': ('plot.html#set_plot_defaults', 'xcai/plot.py')},
            'xcai.representation.index': { 'xcai.representation.index.IndexSearch': ( 'representation.index.html#indexsearch',
                                                                                      'xcai/representation/index.py'),
                                           'xcai.representation.index.IndexSearch.__init__': ( 'representation.index.html#indexsearch.__init__',
                                                                                               'xcai/representation/index.py'),
                                           'xcai.representation.index.IndexSearch.build': ( 'representation.index.html#indexsearch.build',
                                                                                            'xcai/representation/index.py'),
                                           'xcai.representation.index.IndexSearch.proc': ( 'representation.index.html#indexsearch.proc',
                                                                                           'xcai/representation/index.py')},
            'xcai.representation.search': { 'xcai.representation.search.BruteForceSearch': ( 'representation.search.html#bruteforcesearch',
                                                                                             'xcai/representation/search.py'),
                                            'xcai.representation.search.BruteForceSearch.__init__': ( 'representation.search.html#bruteforcesearch.__init__',
                                                                                                      'xcai/representation/search.py'),
                                            'xcai.representation.search.BruteForceSearch.build': ( 'representation.search.html#bruteforcesearch.build',
                                                                                                   'xcai/representation/search.py'),
                                            'xcai.representation.search.BruteForceSearch.get_items': ( 'representation.search.html#bruteforcesearch.get_items',
                                                                                                       'xcai/representation/search.py'),
                                            'xcai.representation.search.BruteForceSearch.proc': ( 'representation.search.html#bruteforcesearch.proc',
                                                                                                  'xcai/representation/search.py'),
                                            'xcai.representation.search.IndexSearch': ( 'representation.search.html#indexsearch',
                                                                                        'xcai/representation/search.py'),
                                            'xcai.representation.search.IndexSearch.__init__': ( 'representation.search.html#indexsearch.__init__',
                                                                                                 'xcai/representation/search.py'),
                                            'xcai.representation.search.IndexSearch.build': ( 'representation.search.html#indexsearch.build',
                                                                                              'xcai/representation/search.py'),
                                            'xcai.representation.search.IndexSearch.get_items': ( 'representation.search.html#indexsearch.get_items',
                                                                                                  'xcai/representation/search.py'),
                                            'xcai.representation.search.IndexSearch.proc': ( 'representation.search.html#indexsearch.proc',
                                                                                             'xcai/representation/search.py')},
            'xcai.sdata': { 'xcai.sdata.SBaseXCDataBlock': ('sdata.html#sbasexcdatablock', 'xcai/sdata.py'),
                            'xcai.sdata.SBaseXCDataBlock.__init__': ('sdata.html#sbasexcdatablock.__init__', 'xcai/sdata.py'),
                            'xcai.sdata.SBaseXCDataBlock.__len__': ('sdata.html#sbasexcdatablock.__len__', 'xcai/sdata.py'),
                            'xcai.sdata.SBaseXCDataBlock._get_dl_kwargs': ('sdata.html#sbasexcdatablock._get_dl_kwargs', 'xcai/sdata.py'),
                            'xcai.sdata.SBaseXCDataBlock._getitems': ('sdata.html#sbasexcdatablock._getitems', 'xcai/sdata.py'),
                            'xcai.sdata.SBaseXCDataBlock.bsz': ('sdata.html#sbasexcdatablock.bsz', 'xcai/sdata.py'),
                            'xcai.sdata.SBaseXCDataBlock.data_lbl_filterer': ( 'sdata.html#sbasexcdatablock.data_lbl_filterer',
                                                                               'xcai/sdata.py'),
                            'xcai.sdata.SBaseXCDataBlock.filterer': ('sdata.html#sbasexcdatablock.filterer', 'xcai/sdata.py'),
                            'xcai.sdata.SBaseXCDataBlock.from_file': ('sdata.html#sbasexcdatablock.from_file', 'xcai/sdata.py'),
                            'xcai.sdata.SBaseXCDataBlock.one_batch': ('sdata.html#sbasexcdatablock.one_batch', 'xcai/sdata.py'),
                            'xcai.sdata.SBaseXCDataBlock.sample': ('sdata.html#sbasexcdatablock.sample', 'xcai/sdata.py'),
                            'xcai.sdata.SBaseXCDataBlock.splitter': ('sdata.html#sbasexcdatablock.splitter', 'xcai/sdata.py'),
                            'xcai.sdata.SMainXCDataset': ('sdata.html#smainxcdataset', 'xcai/sdata.py'),
                            'xcai.sdata.SMainXCDataset.__getitems__': ('sdata.html#smainxcdataset.__getitems__', 'xcai/sdata.py'),
                            'xcai.sdata.SMainXCDataset.__init__': ('sdata.html#smainxcdataset.__init__', 'xcai/sdata.py'),
                            'xcai.sdata.SMainXCDataset._getitems': ('sdata.html#smainxcdataset._getitems', 'xcai/sdata.py'),
                            'xcai.sdata.SMainXCDataset.from_file': ('sdata.html#smainxcdataset.from_file', 'xcai/sdata.py'),
                            'xcai.sdata.SMetaXCDataset': ('sdata.html#smetaxcdataset', 'xcai/sdata.py'),
                            'xcai.sdata.SMetaXCDataset.__init__': ('sdata.html#smetaxcdataset.__init__', 'xcai/sdata.py'),
                            'xcai.sdata.SMetaXCDataset._getitems': ('sdata.html#smetaxcdataset._getitems', 'xcai/sdata.py'),
                            'xcai.sdata.SMetaXCDataset._sample_meta_items': ( 'sdata.html#smetaxcdataset._sample_meta_items',
                                                                              'xcai/sdata.py'),
                            'xcai.sdata.SMetaXCDataset._verify_inputs': ('sdata.html#smetaxcdataset._verify_inputs', 'xcai/sdata.py'),
                            'xcai.sdata.SMetaXCDataset.from_file': ('sdata.html#smetaxcdataset.from_file', 'xcai/sdata.py'),
                            'xcai.sdata.SMetaXCDataset.get_data_meta': ('sdata.html#smetaxcdataset.get_data_meta', 'xcai/sdata.py'),
                            'xcai.sdata.SMetaXCDataset.get_lbl_meta': ('sdata.html#smetaxcdataset.get_lbl_meta', 'xcai/sdata.py'),
                            'xcai.sdata.SXCDataBlock': ('sdata.html#sxcdatablock', 'xcai/sdata.py'),
                            'xcai.sdata.SXCDataBlock.__init__': ('sdata.html#sxcdatablock.__init__', 'xcai/sdata.py'),
                            'xcai.sdata.SXCDataBlock.collator': ('sdata.html#sxcdatablock.collator', 'xcai/sdata.py'),
                            'xcai.sdata.SXCDataBlock.from_cfg': ('sdata.html#sxcdatablock.from_cfg', 'xcai/sdata.py'),
                            'xcai.sdata.SXCDataBlock.inference_dset': ('sdata.html#sxcdatablock.inference_dset', 'xcai/sdata.py'),
                            'xcai.sdata.SXCDataBlock.lbl_dset': ('sdata.html#sxcdatablock.lbl_dset', 'xcai/sdata.py'),
                            'xcai.sdata.SXCDataBlock.lbl_info': ('sdata.html#sxcdatablock.lbl_info', 'xcai/sdata.py'),
                            'xcai.sdata.SXCDataBlock.linker_dset': ('sdata.html#sxcdatablock.linker_dset', 'xcai/sdata.py'),
                            'xcai.sdata.SXCDataBlock.load_cfg': ('sdata.html#sxcdatablock.load_cfg', 'xcai/sdata.py'),
                            'xcai.sdata.SXCDataBlock.n_lbl': ('sdata.html#sxcdatablock.n_lbl', 'xcai/sdata.py'),
                            'xcai.sdata.SXCDataBlock.sample_info': ('sdata.html#sxcdatablock.sample_info', 'xcai/sdata.py'),
                            'xcai.sdata.SXCDataset': ('sdata.html#sxcdataset', 'xcai/sdata.py'),
                            'xcai.sdata.SXCDataset.__getitems__': ('sdata.html#sxcdataset.__getitems__', 'xcai/sdata.py'),
                            'xcai.sdata.SXCDataset.__init__': ('sdata.html#sxcdataset.__init__', 'xcai/sdata.py'),
                            'xcai.sdata.SXCDataset._getitems': ('sdata.html#sxcdataset._getitems', 'xcai/sdata.py'),
                            'xcai.sdata.SXCDataset._verify_inputs': ('sdata.html#sxcdataset._verify_inputs', 'xcai/sdata.py'),
                            'xcai.sdata.SXCDataset.data_dset': ('sdata.html#sxcdataset.data_dset', 'xcai/sdata.py'),
                            'xcai.sdata.SXCDataset.data_info': ('sdata.html#sxcdataset.data_info', 'xcai/sdata.py'),
                            'xcai.sdata.SXCDataset.from_file': ('sdata.html#sxcdataset.from_file', 'xcai/sdata.py'),
                            'xcai.sdata.SXCDataset.get_meta_args': ('sdata.html#sxcdataset.get_meta_args', 'xcai/sdata.py'),
                            'xcai.sdata.SXCDataset.lbl_dset': ('sdata.html#sxcdataset.lbl_dset', 'xcai/sdata.py'),
                            'xcai.sdata.SXCDataset.lbl_info': ('sdata.html#sxcdataset.lbl_info', 'xcai/sdata.py'),
                            'xcai.sdata.SXCDataset.one_batch': ('sdata.html#sxcdataset.one_batch', 'xcai/sdata.py'),
                            'xcai.sdata.identity_collate_fn': ('sdata.html#identity_collate_fn', 'xcai/sdata.py')},
            'xcai.torch_core': { 'xcai.torch_core.CUDALongTensor': ('torch_core.html#cudalongtensor', 'xcai/torch_core.py'),
                                 'xcai.torch_core.CUDALongTensor.__decode_as_int64': ( 'torch_core.html#cudalongtensor.__decode_as_int64',
                                                                                       'xcai/torch_core.py'),
                                 'xcai.torch_core.CUDALongTensor.__encode_as_fp64': ( 'torch_core.html#cudalongtensor.__encode_as_fp64',
                                                                                      'xcai/torch_core.py'),
                                 'xcai.torch_core.CUDALongTensor.matmul': ('torch_core.html#cudalongtensor.matmul', 'xcai/torch_core.py')},
            'xcai.transform': { 'xcai.transform.AlignInputIdsTfm': ('transform.html#aligninputidstfm', 'xcai/transform.py'),
                                'xcai.transform.AlignInputIdsTfm.__call__': ( 'transform.html#aligninputidstfm.__call__',
                                                                              'xcai/transform.py'),
                                'xcai.transform.AlignInputIdsTfm.__init__': ( 'transform.html#aligninputidstfm.__init__',
                                                                              'xcai/transform.py'),
                                'xcai.transform.AlignInputIdsTfm.proc': ('transform.html#aligninputidstfm.proc', 'xcai/transform.py'),
                                'xcai.transform.AugmentMetaInputIdsTfm': ('transform.html#augmentmetainputidstfm', 'xcai/transform.py'),
                                'xcai.transform.AugmentMetaInputIdsTfm.__call__': ( 'transform.html#augmentmetainputidstfm.__call__',
                                                                                    'xcai/transform.py'),
                                'xcai.transform.AugmentMetaInputIdsTfm.__init__': ( 'transform.html#augmentmetainputidstfm.__init__',
                                                                                    'xcai/transform.py'),
                                'xcai.transform.AugmentMetaInputIdsTfm.apply': ( 'transform.html#augmentmetainputidstfm.apply',
                                                                                 'xcai/transform.py'),
                                'xcai.transform.AugmentMetaInputIdsTfm.augment': ( 'transform.html#augmentmetainputidstfm.augment',
                                                                                   'xcai/transform.py'),
                                'xcai.transform.AugmentMetaInputIdsTfm.proc': ( 'transform.html#augmentmetainputidstfm.proc',
                                                                                'xcai/transform.py'),
                                'xcai.transform.CollapseTfm': ('transform.html#collapsetfm', 'xcai/transform.py'),
                                'xcai.transform.CollapseTfm.__call__': ('transform.html#collapsetfm.__call__', 'xcai/transform.py'),
                                'xcai.transform.CollapseTfm.__init__': ('transform.html#collapsetfm.__init__', 'xcai/transform.py'),
                                'xcai.transform.CollapseTfm._get_ptr': ('transform.html#collapsetfm._get_ptr', 'xcai/transform.py'),
                                'xcai.transform.CollapseTfm.collapse': ('transform.html#collapsetfm.collapse', 'xcai/transform.py'),
                                'xcai.transform.CollateFeatTfm': ('transform.html#collatefeattfm', 'xcai/transform.py'),
                                'xcai.transform.CollateFeatTfm.__call__': ('transform.html#collatefeattfm.__call__', 'xcai/transform.py'),
                                'xcai.transform.CollateFeatTfm.__init__': ('transform.html#collatefeattfm.__init__', 'xcai/transform.py'),
                                'xcai.transform.CollateFeatTfm.proc': ('transform.html#collatefeattfm.proc', 'xcai/transform.py'),
                                'xcai.transform.NGPadFeatTfm': ('transform.html#ngpadfeattfm', 'xcai/transform.py'),
                                'xcai.transform.NGPadFeatTfm.__call__': ('transform.html#ngpadfeattfm.__call__', 'xcai/transform.py'),
                                'xcai.transform.NGPadFeatTfm.__init__': ('transform.html#ngpadfeattfm.__init__', 'xcai/transform.py'),
                                'xcai.transform.PadFeatTfm': ('transform.html#padfeattfm', 'xcai/transform.py'),
                                'xcai.transform.PadFeatTfm.__call__': ('transform.html#padfeattfm.__call__', 'xcai/transform.py'),
                                'xcai.transform.PadFeatTfm.__init__': ('transform.html#padfeattfm.__init__', 'xcai/transform.py'),
                                'xcai.transform.PadFeatTfm.get_feat': ('transform.html#padfeattfm.get_feat', 'xcai/transform.py'),
                                'xcai.transform.PadFeatTfm.proc': ('transform.html#padfeattfm.proc', 'xcai/transform.py'),
                                'xcai.transform.PadTfm': ('transform.html#padtfm', 'xcai/transform.py'),
                                'xcai.transform.PadTfm.__call__': ('transform.html#padtfm.__call__', 'xcai/transform.py'),
                                'xcai.transform.PadTfm.__init__': ('transform.html#padtfm.__init__', 'xcai/transform.py'),
                                'xcai.transform.PadTfm._pad_help': ('transform.html#padtfm._pad_help', 'xcai/transform.py'),
                                'xcai.transform.PadTfm._sz_help': ('transform.html#padtfm._sz_help', 'xcai/transform.py'),
                                'xcai.transform.PadTfm.get_sz': ('transform.html#padtfm.get_sz', 'xcai/transform.py'),
                                'xcai.transform.RamenPadFeatTfm': ('transform.html#ramenpadfeattfm', 'xcai/transform.py'),
                                'xcai.transform.RamenPadFeatTfm.__call__': ('transform.html#ramenpadfeattfm.__call__', 'xcai/transform.py'),
                                'xcai.transform.RamenPadFeatTfm.__init__': ('transform.html#ramenpadfeattfm.__init__', 'xcai/transform.py'),
                                'xcai.transform.RamenPadFeatTfm.extract_ptr': ( 'transform.html#ramenpadfeattfm.extract_ptr',
                                                                                'xcai/transform.py'),
                                'xcai.transform.RamenPadFeatTfm.get_feat': ('transform.html#ramenpadfeattfm.get_feat', 'xcai/transform.py'),
                                'xcai.transform.RamenPadFeatTfm.sample_feat': ( 'transform.html#ramenpadfeattfm.sample_feat',
                                                                                'xcai/transform.py'),
                                'xcai.transform.RamenPadFeatTfm.smp_feat': ('transform.html#ramenpadfeattfm.smp_feat', 'xcai/transform.py'),
                                'xcai.transform.RemoveColumnTfm': ('transform.html#removecolumntfm', 'xcai/transform.py'),
                                'xcai.transform.RemoveColumnTfm.__call__': ('transform.html#removecolumntfm.__call__', 'xcai/transform.py'),
                                'xcai.transform.RemoveColumnTfm.__init__': ('transform.html#removecolumntfm.__init__', 'xcai/transform.py'),
                                'xcai.transform.SampleFeatTfm': ('transform.html#samplefeattfm', 'xcai/transform.py'),
                                'xcai.transform.SampleFeatTfm.__call__': ('transform.html#samplefeattfm.__call__', 'xcai/transform.py'),
                                'xcai.transform.SampleFeatTfm.__init__': ('transform.html#samplefeattfm.__init__', 'xcai/transform.py'),
                                'xcai.transform.SampleFeatTfm._get_feat': ('transform.html#samplefeattfm._get_feat', 'xcai/transform.py'),
                                'xcai.transform.SampleFeatTfm.proc': ('transform.html#samplefeattfm.proc', 'xcai/transform.py'),
                                'xcai.transform.TfmPipeline': ('transform.html#tfmpipeline', 'xcai/transform.py'),
                                'xcai.transform.TfmPipeline.__call__': ('transform.html#tfmpipeline.__call__', 'xcai/transform.py'),
                                'xcai.transform.TfmPipeline.__init__': ('transform.html#tfmpipeline.__init__', 'xcai/transform.py'),
                                'xcai.transform.TriePruneInputIdsTfm': ('transform.html#triepruneinputidstfm', 'xcai/transform.py'),
                                'xcai.transform.TriePruneInputIdsTfm.__call__': ( 'transform.html#triepruneinputidstfm.__call__',
                                                                                  'xcai/transform.py'),
                                'xcai.transform.TriePruneInputIdsTfm.align': ( 'transform.html#triepruneinputidstfm.align',
                                                                               'xcai/transform.py'),
                                'xcai.transform.TriePruneInputIdsTfm.apply': ( 'transform.html#triepruneinputidstfm.apply',
                                                                               'xcai/transform.py'),
                                'xcai.transform.TriePruneInputIdsTfm.proc': ( 'transform.html#triepruneinputidstfm.proc',
                                                                              'xcai/transform.py'),
                                'xcai.transform.TriePruneInputIdsTfm.prune': ( 'transform.html#triepruneinputidstfm.prune',
                                                                               'xcai/transform.py'),
                                'xcai.transform.XCPadFeatTfm': ('transform.html#xcpadfeattfm', 'xcai/transform.py'),
                                'xcai.transform.XCPadFeatTfm.__call__': ('transform.html#xcpadfeattfm.__call__', 'xcai/transform.py'),
                                'xcai.transform.XCPadFeatTfm.__init__': ('transform.html#xcpadfeattfm.__init__', 'xcai/transform.py'),
                                'xcai.transform.XCPadFeatTfm.extract_ptr': ('transform.html#xcpadfeattfm.extract_ptr', 'xcai/transform.py'),
                                'xcai.transform.XCPadOutputTfm': ('transform.html#xcpadoutputtfm', 'xcai/transform.py'),
                                'xcai.transform.XCPadOutputTfm.__call__': ('transform.html#xcpadoutputtfm.__call__', 'xcai/transform.py'),
                                'xcai.transform.XCPadOutputTfm.__init__': ('transform.html#xcpadoutputtfm.__init__', 'xcai/transform.py'),
                                'xcai.transform.XCPadOutputTfm.extract_ptr': ( 'transform.html#xcpadoutputtfm.extract_ptr',
                                                                               'xcai/transform.py'),
                                'xcai.transform.XCSamplePadFeatTfm': ('transform.html#xcsamplepadfeattfm', 'xcai/transform.py'),
                                'xcai.transform.XCSamplePadFeatTfm.__call__': ( 'transform.html#xcsamplepadfeattfm.__call__',
                                                                                'xcai/transform.py'),
                                'xcai.transform.XCSamplePadFeatTfm.__init__': ( 'transform.html#xcsamplepadfeattfm.__init__',
                                                                                'xcai/transform.py'),
                                'xcai.transform.XCSamplePadFeatTfm.extract_ptr': ( 'transform.html#xcsamplepadfeattfm.extract_ptr',
                                                                                   'xcai/transform.py'),
                                'xcai.transform.XCSamplePadFeatTfm.sample_feat': ( 'transform.html#xcsamplepadfeattfm.sample_feat',
                                                                                   'xcai/transform.py')}}}
